OBJECT Page 731 Job Act to Bud Price Chart
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Job Act to Bud Price Chart;
               ENG=Job Act to Bud Price Chart];
    SourceTable=Table167;
    PageType=CardPart;
    ActionList=ACTIONS
    {
      { 3       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 4       ;1   ;ActionGroup;
                      CaptionML=[ENU=Options;
                                 ENG=Options] }
      { 5       ;2   ;ActionGroup;
                      CaptionML=[ENU=Chart Type;
                                 ENG=Chart Type] }
      { 10      ;3   ;Action    ;
                      CaptionML=[ENU=Default;
                                 ENG=Default];
                      ToolTipML=[ENU=Select the default graphing option for this chart.;
                                 ENG=Select the default graphing option for this chart.];
                      OnAction=BEGIN
                                 UpdateChart(DefaultChartType);
                               END;
                                }
      { 9       ;3   ;Action    ;
                      CaptionML=[ENU=Column;
                                 ENG=Column];
                      ToolTipML=[ENU=Select the column graphing option for this chart.;
                                 ENG=Select the column graphing option for this chart.];
                      OnAction=BEGIN
                                 UpdateChart(ChartType::Column);
                               END;
                                }
      { 8       ;3   ;Action    ;
                      CaptionML=[ENU=Line;
                                 ENG=Line];
                      ToolTipML=[ENU=Select the line graphing option for this chart.;
                                 ENG=Select the line graphing option for this chart.];
                      OnAction=BEGIN
                                 UpdateChart(ChartType::Line);
                               END;
                                }
      { 7       ;3   ;Action    ;
                      CaptionML=[ENU=Stacked Column;
                                 ENG=Stacked Column];
                      ToolTipML=[ENU=Select the stacked column graphing option for this chart.;
                                 ENG=Select the stacked column graphing option for this chart.];
                      OnAction=BEGIN
                                 UpdateChart(ChartType::StackedColumn);
                               END;
                                }
      { 6       ;3   ;Action    ;
                      CaptionML=[ENU=Stacked Area;
                                 ENG=Stacked Area];
                      ToolTipML=[ENU=Select the stacked area graphing option for this chart.;
                                 ENG=Select the stacked area graphing option for this chart.];
                      OnAction=BEGIN
                                 UpdateChart(ChartType::StackedArea);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=<Control1>;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=Chart;
                ToolTipML=[ENU=Specifies the Job Actual Price to Budget Price chart.;
                           ENG=Specifies the Job Actual Price to Budget Price chart.];
                ApplicationArea=#Jobs;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      BusChartBuf@1002 : Record 485;
      TempJob@1008 : TEMPORARY Record 167;
      JobChartMgt@1001 : Codeunit 759;
      ChartIsReady@1000 : Boolean;
      ChartType@1009 : 'Point,,Bubble,Line,,StepLine,,,,,Column,StackedColumn,StackedColumn100,Area,,StackedArea,StackedArea100,Pie,Doughnut,,,Range,,,,Radar,,,,,,,,Funnel';
      JobChartType@1003 : 'Profitability,Actual to Budget Cost,Actual to Budget Price';
      CurrentChartType@1004 : Option;

    LOCAL PROCEDURE UpdateChart@1(NewChartType@1000 : 'Point,,Bubble,Line,,StepLine,,,,,Column,StackedColumn,StackedColumn100,Area,,StackedArea,StackedArea100,Pie,Doughnut,,,Range,,,,Radar,,,,,,,,Funnel');
    BEGIN
      IF NOT ChartIsReady THEN
        EXIT;

      JobChartMgt.CreateJobChart(BusChartBuf,TempJob,NewChartType,JobChartType::"Actual to Budget Price");
      BusChartBuf.Update(CurrPage.Chart);
      CurrentChartType := NewChartType;
    END;

    LOCAL PROCEDURE DefaultChartType@3() : Integer;
    BEGIN
      EXIT(ChartType::Column);
    END;

    EVENT Chart@-2::DataPointClicked@1(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      BusChartBuf.SetDrillDownIndexes(point);
      JobChartMgt.DataPointClicked(BusChartBuf,TempJob);
    END;

    EVENT Chart@-2::DataPointDoubleClicked@2(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT Chart@-2::AddInReady@3();
    BEGIN
      ChartIsReady := TRUE;
      UpdateChart(DefaultChartType);
    END;

    EVENT Chart@-2::Refresh@4();
    BEGIN
      IF ChartIsReady THEN
        UpdateChart(CurrentChartType);
    END;

    BEGIN
    END.
  }
}

