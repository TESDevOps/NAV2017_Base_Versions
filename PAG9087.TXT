OBJECT Page 9087 Sales Line FactBox
{
  OBJECT-PROPERTIES
  {
    Date=26/09/17;
    Time=12:00:00;
    Version List=NAVW110.00.00.18609;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Line Details;
               ENG=Sales Line Details];
    SourceTable=Table37;
    PageType=CardPart;
    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Reserved Quantity");
                     END;

    OnAfterGetCurrRecord=BEGIN
                           ClearSalesHeader;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 8   ;1   ;Field     ;
                Name=ItemNo;
                Lookup=No;
                CaptionML=[ENU=Item No.;
                           ENG=Item No.];
                ToolTipML=[ENU=Specifies the item that is handled on the sales line.;
                           ENG=Specifies the item that is handled on the sales line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShowNo;
                OnDrillDown=BEGIN
                              SalesInfoPaneMgt.LookupItem(Rec);
                            END;
                             }

    { 13  ;1   ;Field     ;
                Name=Required Quantity;
                CaptionML=[ENU=Required Quantity;
                           ENG=Required Quantity];
                ToolTipML=[ENU=Specifies how many units of the item are required on the sales line.;
                           ENG=Specifies how many units of the item are required on the sales line.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr="Outstanding Quantity" - "Reserved Quantity" }

    { 12  ;1   ;Group     ;
                Name=Availability;
                CaptionML=[ENU=Availability;
                           ENG=Availability];
                GroupType=Group }

    { 10  ;2   ;Field     ;
                Name=Shipment Date;
                CaptionML=[ENU=Shipment Date;
                           ENG=Shipment Date];
                ToolTipML=[ENU=Specifies when the items on the sales line must be shipped.;
                           ENG=Specifies when the items on the sales line must be shipped.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcAvailabilityDate(Rec) }

    { 3   ;2   ;Field     ;
                Name=Item Availability;
                DrillDown=Yes;
                CaptionML=[ENU=Item Availability;
                           ENG=Item Availability];
                ToolTipML=[ENU=Specifies how may units of the item on the sales line are available, in inventory or incoming before the shipment date.;
                           ENG=Specifies how may units of the item on the sales line are available, in inventory or incoming before the shipment date.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcAvailability(Rec);
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent);
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1   ;2   ;Field     ;
                Name=Available Inventory;
                CaptionML=[ENU=Available Inventory;
                           ENG=Available Inventory];
                ToolTipML=[ENU=Specifies the quantity of the item that is currently in inventory and not reserved for other demand.;
                           ENG=Specifies the quantity of the item that is currently in inventory and not reserved for other demand.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcAvailableInventory(Rec) }

    { 2   ;2   ;Field     ;
                Name=Scheduled Receipt;
                CaptionML=[ENU=Scheduled Receipt;
                           ENG=Scheduled Receipt];
                ToolTipML=[ENU=Specifies how many units of the assembly component are inbound on purchase orders, transfer orders, assembly orders, firm planned production orders, and released production orders.;
                           ENG=Specifies how many units of the assembly component are inbound on purchase orders, transfer orders, assembly orders, firm planned production orders, and released production orders.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcScheduledReceipt(Rec) }

    { 4   ;2   ;Field     ;
                Name=Reserved Receipt;
                CaptionML=[ENU=Reserved Receipt;
                           ENG=Reserved Receipt];
                ToolTipML=[ENU=Specifies how many units of the item on the sales line are reserved on incoming receipts.;
                           ENG=Specifies how many units of the item on the sales line are reserved on incoming receipts.];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcReservedRequirements(Rec) }

    { 6   ;2   ;Field     ;
                Name=Gross Requirements;
                CaptionML=[ENU=Gross Requirements;
                           ENG=Gross Requirements];
                ToolTipML=[ENU=Specifies, for the item on the sales line, dependent demand plus independent demand. Dependent demand comes production order components of all statuses, assembly order components, and planning lines. Independent demand comes from sales orders, transfer orders, service orders, job tasks, and production forecasts.;
                           ENG=Specifies, for the item on the sales line, dependent demand plus independent demand. Dependent demand comes production order components of all statuses, assembly order components, and planning lines. Independent demand comes from sales orders, transfer orders, service orders, job tasks, and production forecasts.];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcGrossRequirements(Rec) }

    { 9   ;2   ;Field     ;
                Name=Reserved Requirements;
                CaptionML=[ENU=Reserved Requirements;
                           ENG=Reserved Requirements];
                ToolTipML=[ENU=Specifies, for the item on the sales line, how many are reserved on demand records.;
                           ENG=Specifies, for the item on the sales line, how many are reserved on demand records.];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcReservedDemand(Rec) }

    { 16  ;1   ;Group     ;
                Name=Item;
                CaptionML=[ENU=Item;
                           ENG=Item];
                GroupType=Group }

    { 15  ;2   ;Field     ;
                Name=UnitofMeasureCode;
                CaptionML=[ENU=Unit of Measure Code;
                           ENG=Unit of Measure Code];
                ToolTipML=[ENU=Specifies the unit of measure that is used to determine the value in the Unit Price field on the sales line.;
                           ENG=Specifies the unit of measure that is used to determine the value in the Unit Price field on the sales line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code" }

    { 14  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                CaptionML=[ENU=Qty. per Unit of Measure;
                           ENG=Qty. per Unit of Measure];
                ToolTipML=[ENU=Specifies an auto-filled number if you have included Sales Unit of Measure on the item card and a quantity in the Qty. per Unit of Measure field.;
                           ENG=Specifies an auto-filled number if you have included Sales Unit of Measure on the item card and a quantity in the Qty. per Unit of Measure field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Qty. per Unit of Measure" }

    { 5   ;2   ;Field     ;
                Name=Substitutions;
                DrillDown=Yes;
                CaptionML=[ENU=Substitutions;
                           ENG=Substitutions];
                ToolTipML=[ENU=Specifies other items that are set up to be traded instead of the item in case it is not available.;
                           ENG=Specifies other items that are set up to be traded instead of the item in case it is not available.];
                ApplicationArea=#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSubstitutions(Rec);
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemSub;
                              CurrPage.UPDATE(TRUE);
                              AutoReserve;
                            END;
                             }

    { 7   ;2   ;Field     ;
                Name=SalesPrices;
                DrillDown=Yes;
                CaptionML=[ENU=Sales Prices;
                           ENG=Sales Prices];
                ToolTipML=[ENU=Specifies how many special prices you grant for the sales line. Choose the value to see the special sales prices.;
                           ENG=Specifies how many special prices you grant for the sales line. Choose the value to see the special sales prices.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSalesPrices(Rec);
                OnDrillDown=BEGIN
                              ShowPrices;
                              CurrPage.UPDATE;
                            END;
                             }

    { 11  ;2   ;Field     ;
                Name=SalesLineDiscounts;
                DrillDown=Yes;
                CaptionML=[ENU=Sales Line Discounts;
                           ENG=Sales Line Discounts];
                ToolTipML=[ENU=Specifies how many special discounts you grant for the sales line. Choose the value to see the sales line discounts.;
                           ENG=Specifies how many special discounts you grant for the sales line. Choose the value to see the sales line discounts.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSalesLineDisc(Rec);
                OnDrillDown=BEGIN
                              ShowLineDisc;
                              CurrPage.UPDATE;
                            END;
                             }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record 36;
      SalesPriceCalcMgt@1002 : Codeunit 7000;
      SalesInfoPaneMgt@1001 : Codeunit 7171;
      ItemAvailFormsMgt@1003 : Codeunit 353;

    LOCAL PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowNo@29() : Code[20];
    BEGIN
      IF Type <> Type::Item THEN
        EXIT('');
      EXIT("No.");
    END;

    BEGIN
    END.
  }
}

