OBJECT Page 30 Item Card
{
  OBJECT-PROPERTIES
  {
    Date=26/09/17;
    Time=12:00:00;
    Version List=NAVW110.00.00.18609,NAVGB10.00.00.18609;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Card;
               ENG=Item Card];
    SourceTable=Table27;
    PageType=Card;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Item,History,Special Prices & Discounts,Approve,Request Approval;
                                ENG=New,Process,Report,Item,History,Special Prices & Discounts,Approve,Request Approval];
    OnInit=BEGIN
             InitControls
           END;

    OnOpenPage=BEGIN
                 IsFoundationEnabled := ApplicationAreaSetup.IsFoundationEnabled;
                 EnableControls;
               END;

    OnAfterGetRecord=BEGIN
                       EnableControls
                     END;

    OnNewRecord=BEGIN
                  OnNewRec
                END;

    OnInsertRecord=BEGIN
                     InsertItemUnitOfMeasure;
                   END;

    OnAfterGetCurrRecord=VAR
                           CRMCouplingManagement@1002 : Codeunit 5331;
                           WorkflowManagement@1001 : Codeunit 1501;
                           WorkflowEventHandling@1000 : Codeunit 1520;
                         BEGIN
                           CreateItemFromTemplate;
                           CRMIsCoupledToRecord := CRMIntegrationEnabled AND CRMCouplingManagement.IsRecordCoupledToCRM(RECORDID);
                           OpenApprovalEntriesExistCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
                           OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);

                           EventFilter := WorkflowEventHandling.RunWorkflowOnSendItemForApprovalCode + '|' +
                             WorkflowEventHandling.RunWorkflowOnItemChangedCode;

                           EnabledApprovalWorkflowsExist := WorkflowManagement.EnabledWorkflowExist(DATABASE::Item,EventFilter);

                           CurrPage.ItemAttributesFactbox.PAGE.LoadItemAttributesData("No.");
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 123     ;1   ;ActionGroup;
                      CaptionML=[ENU=Item;
                                 ENG=Item];
                      Image=DataEntry }
      { 199     ;2   ;Action    ;
                      Name=Attributes;
                      AccessByPermission=TableData 7500=R;
                      CaptionML=[ENU=Attributes;
                                 ENG=Attributes];
                      ToolTipML=[ENU=View or edit the item's attributes, such as color, size, or other characteristics that help to describe the item.;
                                 ENG=View or edit the item's attributes, such as colour, size, or other characteristics that help to describe the item.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Category;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"Item Attribute Value Editor",Rec);
                                 CurrPage.SAVERECORD;
                                 CurrPage.ItemAttributesFactbox.PAGE.LoadItemAttributesData("No.");
                               END;
                                }
      { 186     ;2   ;Action    ;
                      Name=AdjustInventory;
                      CaptionML=[ENU=Adjust Inventory;
                                 ENG=Adjust Inventory];
                      ToolTipML=[ENU=Increase or decrease the item's inventory quantity manually by entering a new quantity. Adjusting the inventory quantity manually may be relevant after a physical count or if you do not record purchased quantities.;
                                 ENG=Increase or decrease the item's inventory quantity manually by entering a new quantity. Adjusting the inventory quantity manually may be relevant after a physical count or if you do not record purchased quantities.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsFoundationEnabled;
                      Enabled=InventoryItemEditable;
                      Image=InventoryCalculation;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Adjust Inventory",Rec)
                               END;
                                }
      { 119     ;2   ;Action    ;
                      CaptionML=[ENU=Va&riants;
                                 ENG=Va&riants];
                      RunObject=Page 5401;
                      RunPageLink=Item No.=FIELD(No.);
                      Image=ItemVariant }
      { 218     ;2   ;Action    ;
                      CaptionML=[ENU=Identifiers;
                                 ENG=Identifiers];
                      RunObject=Page 7706;
                      RunPageView=SORTING(Item No.,Variant Code,Unit of Measure Code);
                      RunPageLink=Item No.=FIELD(No.);
                      Image=BarCode }
      { 182     ;1   ;ActionGroup;
                      Name=PricesandDiscounts;
                      CaptionML=[ENU=Special Prices & Discounts;
                                 ENG=Special Prices & Discounts] }
      { 82      ;2   ;Action    ;
                      CaptionML=[ENU=Set Special Prices;
                                 ENG=Set Special Prices];
                      ToolTipML=[ENU=Set up different prices for the item. An item price is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.;
                                 ENG=Set up different prices for the item. An item price is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 7002;
                      RunPageLink=Item No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Price;
                      PromotedCategory=Category6 }
      { 80      ;2   ;Action    ;
                      CaptionML=[ENU=Set Special Discounts;
                                 ENG=Set Special Discounts];
                      ToolTipML=[ENU=Set up different discounts for the item. An item discount is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.;
                                 ENG=Set up different discounts for the item. An item discount is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 7004;
                      RunPageView=SORTING(Type,Code);
                      RunPageLink=Type=CONST(Item),
                                  Code=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=LineDiscount;
                      PromotedCategory=Category6 }
      { 165     ;2   ;Action    ;
                      Name=PricesDiscountsOverview;
                      CaptionML=[ENU=Special Prices & Discounts Overview;
                                 ENG=Special Prices & Discounts Overview];
                      ToolTipML=[ENU=View the special prices and line discounts that you grant for this item when certain criteria are met, such as customer, quantity, or ending date.;
                                 ENG=View the special prices and line discounts that you grant for this item when certain criteria are met, such as customer, quantity, or ending date.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PriceWorksheet;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 SalesPriceAndLineDiscounts@1000 : Page 1345;
                               BEGIN
                                 SalesPriceAndLineDiscounts.InitPage(TRUE);
                                 SalesPriceAndLineDiscounts.LoadItem(Rec);
                                 SalesPriceAndLineDiscounts.RUNMODAL;
                               END;
                                }
      { 160     ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 ENG=Approval] }
      { 159     ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 ENG=Approve];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 ENG=Approve the requested changes.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 156     ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 ENG=Reject];
                      ToolTipML=[ENU=Reject the approval request.;
                                 ENG=Reject the approval request.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 154     ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 ENG=Delegate];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 ENG=Delegate the approval to a substitute approver.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 503     ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 ENG=Comments];
                      ToolTipML=[ENU=View or add comments.;
                                 ENG=View or add comments.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 150     ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 ENG=Request Approval];
                      Image=SendApprovalRequest }
      { 149     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 ENG=Send A&pproval Request];
                      ToolTipML=[ENU=Send an approval request.;
                                 ENG=Send an approval request.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=(NOT OpenApprovalEntriesExist) AND EnabledApprovalWorkflowsExist;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckItemApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsMgmt.OnSendItemForApproval(Rec);
                               END;
                                }
      { 148     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ENG=Cancel Approval Re&quest];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 ENG=Cancel the approval request.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=OpenApprovalEntriesExist;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelItemApprovalRequest(Rec);
                               END;
                                }
      { 193     ;1   ;ActionGroup;
                      CaptionML=[ENU=Workflow;
                                 ENG=Workflow] }
      { 197     ;2   ;Action    ;
                      Name=CreateApprovalWorkflow;
                      CaptionML=[ENU=Create Approval Workflow;
                                 ENG=Create Approval Workflow];
                      ToolTipML=[ENU=Set up an approval workflow for creating or changing items, by going through a few pages that will guide you.;
                                 ENG=Set up an approval workflow for creating or changing items, by going through a few pages that will guide you.];
                      Enabled=NOT EnabledApprovalWorkflowsExist;
                      Image=CreateWorkflow;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"Item Approval WF Setup Wizard");
                               END;
                                }
      { 195     ;2   ;Action    ;
                      Name=ManageApprovalWorkflow;
                      CaptionML=[ENU=Manage Approval Workflow;
                                 ENG=Manage Approval Workflow];
                      ToolTipML=[ENU=View or edit existing approval workflows for creating or changing items.;
                                 ENG=View or edit existing approval workflows for creating or changing items.];
                      Enabled=EnabledApprovalWorkflowsExist;
                      Image=WorkflowSetup;
                      OnAction=VAR
                                 WorkflowManagement@1000 : Codeunit 1501;
                               BEGIN
                                 WorkflowManagement.NavigateToWorkflows(DATABASE::Item,EventFilter);
                               END;
                                }
      { 91      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 92      ;2   ;Action    ;
                      AccessByPermission=TableData 5700=R;
                      CaptionML=[ENU=&Create Stockkeeping Unit;
                                 ENG=&Create Stockkeeping Unit];
                      Image=CreateSKU;
                      OnAction=VAR
                                 Item@1001 : Record 27;
                               BEGIN
                                 Item.SETRANGE("No.","No.");
                                 REPORT.RUNMODAL(REPORT::"Create Stockkeeping Unit",TRUE,FALSE,Item);
                               END;
                                }
      { 7380    ;2   ;Action    ;
                      Name=CalculateCountingPeriod;
                      AccessByPermission=TableData 7380=R;
                      CaptionML=[ENU=C&alculate Counting Period;
                                 ENG=C&alculate Counting Period];
                      Image=CalculateCalendar;
                      OnAction=VAR
                                 Item@1001 : Record 27;
                                 PhysInvtCountMgt@1000 : Codeunit 7380;
                               BEGIN
                                 Item.SETRANGE("No.","No.");
                                 PhysInvtCountMgt.UpdateItemPhysInvtCount(Item);
                               END;
                                }
      { 241     ;2   ;Separator  }
      { 178     ;2   ;Action    ;
                      Name=Templates;
                      CaptionML=[ENU=Templates;
                                 ENG=Templates];
                      ToolTipML=[ENU=View or edit item templates.;
                                 ENG=View or edit item templates.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 1340;
                      RunPageLink=Table ID=CONST(27);
                      Image=Template }
      { 242     ;2   ;Action    ;
                      Name=ApplyTemplate;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Template;
                                 ENG=Apply Template];
                      ToolTipML=[ENU=Use a template to quickly create a new item card.;
                                 ENG=Use a template to quickly create a new item card.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ApplyTemplate;
                      OnAction=VAR
                                 ItemTemplate@1002 : Record 1301;
                               BEGIN
                                 ItemTemplate.UpdateItemFromTemplate(Rec);
                               END;
                                }
      { 179     ;2   ;Action    ;
                      Name=SaveAsTemplate;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Save as Template;
                                 ENG=Save as Template];
                      ToolTipML=[ENU=Save the item card as a template that can be reused to create new item cards. Item templates contain preset information to help you fill in fields on item cards.;
                                 ENG=Save the item card as a template that can be reused to create new item cards. Item templates contain preset information to help you fill in fields on item cards.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Save;
                      OnAction=VAR
                                 TempItemTemplate@1002 : TEMPORARY Record 1301;
                               BEGIN
                                 TempItemTemplate.SaveAsTemplate(Rec);
                               END;
                                }
      { 1905370404;1 ;Action    ;
                      CaptionML=[ENU=Requisition Worksheet;
                                 ENG=Requisition Worksheet];
                      RunObject=Page 291;
                      Image=Worksheet }
      { 1904344904;1 ;Action    ;
                      CaptionML=[ENU=Item Journal;
                                 ENG=Item Journal];
                      RunObject=Page 40;
                      Promoted=Yes;
                      Image=Journals;
                      PromotedCategory=Process }
      { 1906716204;1 ;Action    ;
                      CaptionML=[ENU=Item Reclassification Journal;
                                 ENG=Item Reclassification Journal];
                      RunObject=Page 393;
                      Promoted=Yes;
                      Image=Journals;
                      PromotedCategory=Process }
      { 1902532604;1 ;Action    ;
                      CaptionML=[ENU=Item Tracing;
                                 ENG=Item Tracing];
                      RunObject=Page 6520;
                      Image=ItemTracing }
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 126     ;1   ;ActionGroup;
                      CaptionML=[ENU=History;
                                 ENG=History];
                      Image=History }
      { 101     ;2   ;ActionGroup;
                      CaptionML=[ENU=E&ntries;
                                 ENG=E&ntries];
                      Image=Entries }
      { 105     ;3   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ENG=Ledger E&ntries];
                      ToolTipML=[ENU=View the history of transactions that have been posted for the selected record.;
                                 ENG=View the history of transactions that have been posted for the selected record.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 38;
                      RunPageView=SORTING(Item No.)
                                  ORDER(Descending);
                      RunPageLink=Item No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=ItemLedger;
                      PromotedCategory=Category5 }
      { 112     ;3   ;Action    ;
                      CaptionML=[ENU=&Phys. Inventory Ledger Entries;
                                 ENG=&Phys. Inventory Ledger Entries];
                      ToolTipML=[ENU=View how many units of the item you had in stock at the last physical count.;
                                 ENG=View how many units of the item you had in stock at the last physical count.];
                      RunObject=Page 390;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PhysicalInventoryLedger;
                      PromotedCategory=Category5 }
      { 75      ;3   ;Action    ;
                      CaptionML=[ENU=&Reservation Entries;
                                 ENG=&Reservation Entries];
                      RunObject=Page 497;
                      RunPageView=SORTING(Item No.,Variant Code,Location Code,Reservation Status);
                      RunPageLink=Reservation Status=CONST(Reservation),
                                  Item No.=FIELD(No.);
                      Image=ReservationLedger }
      { 5800    ;3   ;Action    ;
                      CaptionML=[ENU=&Value Entries;
                                 ENG=&Value Entries];
                      RunObject=Page 5802;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(No.);
                      Image=ValueLedger }
      { 6500    ;3   ;Action    ;
                      CaptionML=[ENU=Item &Tracking Entries;
                                 ENG=Item &Tracking Entries];
                      Image=ItemTrackingLedger;
                      OnAction=VAR
                                 ItemTrackingDocMgt@1000 : Codeunit 6503;
                               BEGIN
                                 ItemTrackingDocMgt.ShowItemTrackingForMasterData(3,'',"No.",'','','','');
                               END;
                                }
      { 11      ;3   ;Action    ;
                      CaptionML=[ENU=&Warehouse Entries;
                                 ENG=&Warehouse Entries];
                      RunObject=Page 7318;
                      RunPageView=SORTING(Item No.,Bin Code,Location Code,Variant Code,Unit of Measure Code,Lot No.,Serial No.,Entry Type,Dedicated);
                      RunPageLink=Item No.=FIELD(No.);
                      Image=BinLedger }
      { 237     ;3   ;Action    ;
                      CaptionML=[ENU=Application Worksheet;
                                 ENG=Application Worksheet];
                      RunObject=Page 521;
                      RunPageLink=Item No.=FIELD(No.);
                      Image=ApplicationWorksheet }
      { 190     ;1   ;ActionGroup;
                      CaptionML=[ENU=Item;
                                 ENG=Item] }
      { 184     ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      ApplicationArea=#Suite;
                      RunObject=Page 540;
                      RunPageLink=Table ID=CONST(27),
                                  No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category4 }
      { 161     ;2   ;Action    ;
                      CaptionML=[ENU=Cross Re&ferences;
                                 ENG=Cross Re&ferences];
                      ToolTipML=[ENU=Set up a customer's or vendor's own identification of the item. Cross-references to the customer's item number means that the item number is automatically shown on sales documents instead of the number that you use.;
                                 ENG=Set up a customer's or vendor's own identification of the item. Cross-references to the customer's item number means that the item number is automatically shown on sales documents instead of the number that you use.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 5721;
                      RunPageLink=Item No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=Change;
                      PromotedCategory=Category4 }
      { 114     ;2   ;Action    ;
                      CaptionML=[ENU=&Units of Measure;
                                 ENG=&Units of Measure];
                      ToolTipML=[ENU=Set up the different units that the item can be traded in, such as piece, box, or hour.;
                                 ENG=Set up the different units that the item can be traded in, such as piece, box, or hour.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 5404;
                      RunPageLink=Item No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=UnitOfMeasure;
                      PromotedCategory=Category4 }
      { 117     ;2   ;Action    ;
                      CaptionML=[ENU=E&xtended Texts;
                                 ENG=E&xtended Texts];
                      ToolTipML=[ENU=Set up additional text for the description of the item. Extended text can be inserted under the Description field on document lines for the item.;
                                 ENG=Set up additional text for the description of the item. Extended text can be inserted under the Description field on document lines for the item.];
                      ApplicationArea=#Suite;
                      RunObject=Page 391;
                      RunPageView=SORTING(Table Name,No.,Language Code,All Language Codes,Starting Date,Ending Date);
                      RunPageLink=Table Name=CONST(Item),
                                  No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=Text;
                      PromotedCategory=Category4 }
      { 116     ;2   ;Action    ;
                      CaptionML=[ENU=Translations;
                                 ENG=Translations];
                      ToolTipML=[ENU=View or edit translated item descriptions. Translated item descriptions are automatically inserted on documents according to the language code.;
                                 ENG=View or edit translated item descriptions. Translated item descriptions are automatically inserted on documents according to the language code.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 35;
                      RunPageLink=Item No.=FIELD(No.);
                      PromotedIsBig=Yes;
                      Image=Translations;
                      PromotedCategory=Category4 }
      { 158     ;2   ;Action    ;
                      CaptionML=[ENU=Substituti&ons;
                                 ENG=Substituti&ons];
                      ApplicationArea=#Suite;
                      RunObject=Page 5716;
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(No.);
                      Image=ItemSubstitution }
      { 129     ;2   ;Action    ;
                      Name=ApprovalEntries;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 ENG=Approvals];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 ENG=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=Approvals;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ApprovalsMgmt.OpenApprovalEntriesPage(RECORDID);
                               END;
                                }
      { 147     ;1   ;ActionGroup;
                      Name=ActionGroupCRM;
                      CaptionML=[ENU=Dynamics CRM;
                                 ENG=Dynamics CRM];
                      Visible=CRMIntegrationEnabled }
      { 146     ;2   ;Action    ;
                      Name=CRMGoToProduct;
                      CaptionML=[ENU=Product;
                                 ENG=Product];
                      ToolTipML=[ENU=Open the coupled Microsoft Dynamics CRM product.;
                                 ENG=Open the coupled Microsoft Dynamics CRM product.];
                      ApplicationArea=#All;
                      Image=CoupledItem;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.ShowCRMEntityFromRecordID(RECORDID);
                               END;
                                }
      { 144     ;2   ;Action    ;
                      Name=CRMSynchronizeNow;
                      AccessByPermission=TableData 5331=IM;
                      CaptionML=[ENU=Synchronize Now;
                                 ENG=Synchronise Now];
                      ToolTipML=[ENU=Send updated data to Microsoft Dynamics CRM.;
                                 ENG=Send updated data to Microsoft Dynamics CRM.];
                      ApplicationArea=#All;
                      Image=Refresh;
                      OnAction=VAR
                                 CRMIntegrationManagement@1001 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.UpdateOneNow(RECORDID);
                               END;
                                }
      { 142     ;2   ;ActionGroup;
                      Name=Coupling;
                      CaptionML=[@@@=Coupling is a noun;
                                 ENU=Coupling;
                                 ENG=Coupling];
                      ToolTipML=[ENU=Create, change, or delete a coupling between the Microsoft Dynamics NAV record and a Microsoft Dynamics CRM record.;
                                 ENG=Create, change, or delete a coupling between the Microsoft Dynamics NAV record and a Microsoft Dynamics CRM record.];
                      Image=LinkAccount }
      { 140     ;3   ;Action    ;
                      Name=ManageCRMCoupling;
                      AccessByPermission=TableData 5331=IM;
                      CaptionML=[ENU=Set Up Coupling;
                                 ENG=Set Up Coupling];
                      ToolTipML=[ENU=Create or modify the coupling to a Microsoft Dynamics CRM product.;
                                 ENG=Create or modify the coupling to a Microsoft Dynamics CRM product.];
                      ApplicationArea=#All;
                      Image=LinkAccount;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.DefineCoupling(RECORDID);
                               END;
                                }
      { 138     ;3   ;Action    ;
                      Name=DeleteCRMCoupling;
                      AccessByPermission=TableData 5331=IM;
                      CaptionML=[ENU=Delete Coupling;
                                 ENG=Delete Coupling];
                      ToolTipML=[ENU=Delete the coupling to a Microsoft Dynamics CRM product.;
                                 ENG=Delete the coupling to a Microsoft Dynamics CRM product.];
                      ApplicationArea=#All;
                      Enabled=CRMIsCoupledToRecord;
                      Image=UnLinkAccount;
                      OnAction=VAR
                                 CRMCouplingManagement@1000 : Codeunit 5331;
                               BEGIN
                                 CRMCouplingManagement.RemoveCoupling(RECORDID);
                               END;
                                }
      { 124     ;1   ;ActionGroup;
                      CaptionML=[ENU=Availability;
                                 ENG=Availability];
                      Image=ItemAvailability }
      { 68      ;2   ;Action    ;
                      Name=ItemsByLocation;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Items b&y Location;
                                 ENG=Items b&y Location];
                      ToolTipML=[ENU=Show a list of items grouped by location.;
                                 ENG=Show a list of items grouped by location.];
                      Image=ItemAvailbyLoc;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"Items by Location",Rec);
                               END;
                                }
      { 76      ;2   ;ActionGroup;
                      CaptionML=[ENU=&Item Availability by;
                                 ENG=&Item Availability by];
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      Name=<Action110>;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      ToolTipML=[ENU=View how the actual and projected inventory level of an item will develop over time according to supply and demand events.;
                                 ENG=View how the actual and projected inventory level of an item will develop over time according to supply and demand events.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 110     ;3   ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      ToolTipML=[ENU=Show the actual and projected quantity of an item over time according to a specified time interval, such as by day, week or month.;
                                 ENG=Show the actual and projected quantity of an item over time according to a specified time interval, such as by day, week or month.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 157;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=Period }
      { 77      ;3   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      ToolTipML=[ENU=View how the inventory level of an item will develop over time according to the variant that you select.;
                                 ENG=View how the inventory level of an item will develop over time according to the variant that you select.];
                      RunObject=Page 5414;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=ItemVariant }
      { 69      ;3   ;Action    ;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      RunObject=Page 492;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=Warehouse }
      { 67      ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ENG=BOM Level];
                      ToolTipML=[ENU=View availability figures for BOM items that indicate how many units of a parent you can make based on the availability of child items on underlying lines.;
                                 ENG=View availability figures for BOM items that indicate how many units of a parent you can make based on the availability of child items on underlying lines.];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 74      ;3   ;Action    ;
                      CaptionML=[ENU=Timeline;
                                 ENG=Timeline];
                      ToolTipML=[ENU=View a graphical view of an item's projected inventory based on future supply and demand events, with or without planning suggestions.;
                                 ENG=View a graphical view of an item's projected inventory based on future supply and demand events, with or without planning suggestions.];
                      Image=Timeline;
                      OnAction=BEGIN
                                 ShowTimelineFromItem(Rec);
                               END;
                                }
      { 102     ;2   ;ActionGroup;
                      CaptionML=[ENU=Statistics;
                                 ENG=Statistics];
                      Image=Statistics }
      { 107     ;3   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ENG=Statistics];
                      ToolTipML=[ENU=View statistical information, such as the value of posted entries, for the record.;
                                 ENG=View statistical information, such as the value of posted entries, for the record.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Statistics;
                      OnAction=VAR
                                 ItemStatistics@1001 : Page 5827;
                               BEGIN
                                 ItemStatistics.SetItem(Rec);
                                 ItemStatistics.RUNMODAL;
                               END;
                                }
      { 108     ;3   ;Action    ;
                      CaptionML=[ENU=Entry Statistics;
                                 ENG=Entry Statistics];
                      ToolTipML=[ENU=View statistics for item ledger entries.;
                                 ENG=View statistics for item ledger entries.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 304;
                      RunPageLink=No.=FIELD(No.),
                                  Date Filter=FIELD(Date Filter),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=EntryStatistics }
      { 111     ;3   ;Action    ;
                      CaptionML=[ENU=T&urnover;
                                 ENG=T&urnover];
                      ToolTipML=[ENU=View a detailed account of item turnover by periods after you have set the relevant filters for location and variant.;
                                 ENG=View a detailed account of item turnover by periods after you have set the relevant filters for location and variant.];
                      ApplicationArea=#Suite;
                      RunObject=Page 158;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=Turnover }
      { 106     ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      ToolTipML=[ENU=View or add comments.;
                                 ENG=View or add comments.];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(Item),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 84      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Purchases;
                                 ENG=&Purchases];
                      Image=Purchasing }
      { 81      ;2   ;Action    ;
                      CaptionML=[ENU=Ven&dors;
                                 ENG=Ven&dors];
                      RunObject=Page 114;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(No.);
                      Image=Vendor }
      { 85      ;2   ;Action    ;
                      CaptionML=[ENU=Set Special Prices;
                                 ENG=Set Special Prices];
                      RunObject=Page 7012;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(No.);
                      Image=Price }
      { 86      ;2   ;Action    ;
                      CaptionML=[ENU=Set Special Discounts;
                                 ENG=Set Special Discounts];
                      RunObject=Page 7014;
                      RunPageLink=Item No.=FIELD(No.);
                      Image=LineDiscount }
      { 240     ;2   ;Action    ;
                      CaptionML=[ENU=Prepa&yment Percentages;
                                 ENG=Prepa&yment Percentages];
                      RunObject=Page 665;
                      RunPageLink=Item No.=FIELD(No.);
                      Image=PrepaymentPercentages }
      { 47      ;2   ;Separator  }
      { 87      ;2   ;Action    ;
                      CaptionML=[ENU=Orders;
                                 ENG=Orders];
                      ApplicationArea=#Suite;
                      RunObject=Page 56;
                      RunPageView=SORTING(Document Type,Type,No.);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(No.);
                      Image=Document }
      { 191     ;2   ;Action    ;
                      CaptionML=[ENU=Return Orders;
                                 ENG=Return Orders];
                      RunObject=Page 6643;
                      RunPageView=SORTING(Document Type,Type,No.);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(No.);
                      Image=ReturnOrder }
      { 70      ;2   ;Action    ;
                      CaptionML=[ENU=Nonstoc&k Items;
                                 ENG=Nonstoc&k Items];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 5726;
                      Image=NonStockItem }
      { 79      ;1   ;ActionGroup;
                      CaptionML=[ENU=S&ales;
                                 ENG=S&ales];
                      Image=Sales }
      { 300     ;2   ;Action    ;
                      CaptionML=[ENU=Prepa&yment Percentages;
                                 ENG=Prepa&yment Percentages];
                      RunObject=Page 664;
                      RunPageLink=Item No.=FIELD(No.);
                      Image=PrepaymentPercentages }
      { 46      ;2   ;Separator  }
      { 83      ;2   ;Action    ;
                      CaptionML=[ENU=Orders;
                                 ENG=Orders];
                      RunObject=Page 48;
                      RunPageView=SORTING(Document Type,Type,No.);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(No.);
                      Image=Document }
      { 163     ;2   ;Action    ;
                      CaptionML=[ENU=Return Orders;
                                 ENG=Return Orders];
                      RunObject=Page 6633;
                      RunPageView=SORTING(Document Type,Type,No.);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(No.);
                      Image=ReturnOrder }
      { 128     ;1   ;ActionGroup;
                      CaptionML=[ENU=Assembly/Production;
                                 ENG=Assembly/Production];
                      Image=Production }
      { 121     ;2   ;Action    ;
                      Name=BOMStructure;
                      CaptionML=[ENU=Structure;
                                 ENG=Structure];
                      Image=Hierarchy;
                      OnAction=VAR
                                 BOMStructure@1000 : Page 5870;
                               BEGIN
                                 BOMStructure.InitItem(Rec);
                                 BOMStructure.RUN;
                               END;
                                }
      { 104     ;2   ;Action    ;
                      Name=CostShares;
                      CaptionML=[ENU=Cost Shares;
                                 ENG=Cost Shares];
                      Image=CostBudget;
                      OnAction=VAR
                                 BOMCostShares@1000 : Page 5872;
                               BEGIN
                                 BOMCostShares.InitItem(Rec);
                                 BOMCostShares.RUN;
                               END;
                                }
      { 100     ;2   ;ActionGroup;
                      CaptionML=[ENU=Assemb&ly;
                                 ENG=Assemb&ly];
                      Image=AssemblyBOM }
      { 98      ;3   ;Action    ;
                      CaptionML=[ENU=Assembly BOM;
                                 ENG=Assembly BOM];
                      RunObject=Page 36;
                      RunPageLink=Parent Item No.=FIELD(No.);
                      Image=BOM }
      { 96      ;3   ;Action    ;
                      CaptionML=[ENU=Where-Used;
                                 ENG=Where-Used];
                      RunObject=Page 37;
                      RunPageView=SORTING(Type,No.);
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(No.);
                      Image=Track }
      { 94      ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=Calc. Stan&dard Cost;
                                 ENG=Calc. Stan&dard Cost];
                      Image=CalculateCost;
                      OnAction=BEGIN
                                 CLEAR(CalculateStdCost);
                                 CalculateStdCost.CalcItem("No.",TRUE);
                               END;
                                }
      { 90      ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=Calc. Unit Price;
                                 ENG=Calc. Unit Price];
                      Image=SuggestItemPrice;
                      OnAction=BEGIN
                                 CLEAR(CalculateStdCost);
                                 CalculateStdCost.CalcAssemblyItemPrice("No.")
                               END;
                                }
      { 89      ;2   ;ActionGroup;
                      CaptionML=[ENU=Production;
                                 ENG=Production];
                      Image=Production }
      { 88      ;3   ;Action    ;
                      CaptionML=[ENU=Production BOM;
                                 ENG=Production BOM];
                      RunObject=Page 99000786;
                      RunPageLink=No.=FIELD(Production BOM No.);
                      Image=BOM }
      { 78      ;3   ;Action    ;
                      AccessByPermission=TableData 99000771=R;
                      CaptionML=[ENU=Where-Used;
                                 ENG=Where-Used];
                      Image=Where-Used;
                      OnAction=VAR
                                 ProdBOMWhereUsed@1001 : Page 99000811;
                               BEGIN
                                 ProdBOMWhereUsed.SetItem(Rec,WORKDATE);
                                 ProdBOMWhereUsed.RUNMODAL;
                               END;
                                }
      { 5       ;3   ;Action    ;
                      AccessByPermission=TableData 99000771=R;
                      CaptionML=[ENU=Calc. Stan&dard Cost;
                                 ENG=Calc. Stan&dard Cost];
                      Image=CalculateCost;
                      OnAction=BEGIN
                                 CLEAR(CalculateStdCost);
                                 CalculateStdCost.CalcItem("No.",FALSE);
                               END;
                                }
      { 103     ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ENG=Warehouse];
                      Image=Warehouse }
      { 212     ;2   ;Action    ;
                      CaptionML=[ENU=&Bin Contents;
                                 ENG=&Bin Contents];
                      RunObject=Page 7379;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(No.);
                      Image=BinContent }
      { 157     ;2   ;Action    ;
                      CaptionML=[ENU=Stockkeepin&g Units;
                                 ENG=Stockkeepin&g Units];
                      RunObject=Page 5701;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(No.);
                      Image=SKU }
      { 122     ;1   ;ActionGroup;
                      CaptionML=[ENU=Service;
                                 ENG=Service];
                      Image=ServiceItem }
      { 183     ;2   ;Action    ;
                      CaptionML=[ENU=Ser&vice Items;
                                 ENG=Ser&vice Items];
                      RunObject=Page 5988;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(No.);
                      Image=ServiceItem }
      { 17      ;2   ;Action    ;
                      AccessByPermission=TableData 5900=R;
                      CaptionML=[ENU=Troubleshooting;
                                 ENG=Troubleshooting];
                      Image=Troubleshoot;
                      OnAction=VAR
                                 TroubleshootingHeader@1000 : Record 5943;
                               BEGIN
                                 TroubleshootingHeader.ShowForItem(Rec);
                               END;
                                }
      { 185     ;2   ;Action    ;
                      CaptionML=[ENU=Troubleshooting Setup;
                                 ENG=Troubleshooting Setup];
                      RunObject=Page 5993;
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(No.);
                      Image=Troubleshoot }
      { 127     ;1   ;ActionGroup;
                      CaptionML=[ENU=Resources;
                                 ENG=Resources];
                      Image=Resource }
      { 151     ;2   ;ActionGroup;
                      CaptionML=[ENU=R&esource;
                                 ENG=R&esource];
                      Image=Resource }
      { 187     ;3   ;Action    ;
                      CaptionML=[ENU=Resource Skills;
                                 ENG=Resource Skills];
                      ToolTipML=[ENU=View the assignment of skills to resources, items, service item groups, and service items. You can use skill codes to allocate skilled resources to service items or items that need special skills for servicing.;
                                 ENG=View the assignment of skills to resources, items, service item groups, and service items. You can use skill codes to allocate skilled resources to service items or items that need special skills for servicing.];
                      RunObject=Page 6019;
                      RunPageLink=Type=CONST(Item),
                                  No.=FIELD(No.);
                      Image=ResourceSkills }
      { 188     ;3   ;Action    ;
                      AccessByPermission=TableData 5900=R;
                      CaptionML=[ENU=Skilled Resources;
                                 ENG=Skilled Resources];
                      ToolTipML=[ENU=View a list of all registered resources with information about whether they have the skills required to service the particular service item group, item, or service item.;
                                 ENG=View a list of all registered resources with information about whether they have the skills required to service the particular service item group, item, or service item.];
                      Image=ResourceSkills;
                      OnAction=VAR
                                 ResourceSkill@1001 : Record 5956;
                               BEGIN
                                 CLEAR(SkilledResourceList);
                                 SkilledResourceList.Initialize(ResourceSkill.Type::Item,"No.",Description);
                                 SkilledResourceList.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Item;
                CaptionML=[ENU=Item;
                           ENG=Item];
                GroupType=Group }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item.;
                           ENG=Specifies the number of the item.];
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=NoFieldVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the item.;
                           ENG=Specifies a description of the item.];
                ApplicationArea=#All;
                SourceExpr=Description;
                ShowMandatory=TRUE }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that transactions with the item cannot be posted, for example, because the item is in quarantine.;
                           ENG=Specifies that transactions with the item cannot be posted, for example, because the item is in quarantine.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Blocked }

    { 166 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the item card represents a physical item (Inventory) or a service (Service).;
                           ENG=Specifies if the item card represents a physical item (Inventory) or a service (Service).];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                OnValidate=BEGIN
                             EnableControls;
                           END;
                            }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit in which the item is held in inventory.;
                           ENG=Specifies the unit in which the item is held in inventory.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Base Unit of Measure";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                             GET("No.");
                           END;

                ShowMandatory=TRUE }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the item card was last modified.;
                           ENG=Specifies when the item card was last modified.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Date Modified";
                Importance=Additional }

    { 135 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item in connection with electronic document sending and receiving.;
                           ENG=Specifies the item in connection with electronic document sending and receiving.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GTIN;
                Importance=Additional }

    { 170 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the category that the item belongs to.;
                           ENG=Specifies the category that the item belongs to.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item Category Code";
                OnValidate=BEGIN
                             CurrPage.ItemAttributesFactbox.PAGE.LoadItemAttributesData("No.");
                             EnableCostingControls;
                           END;
                            }

    { 168 ;2   ;Field     ;
                ToolTipML=[ENU=Contains a product group code associated with the item category.;
                           ENG=Contains a product group code associated with the item category.];
                SourceExpr="Product Group Code";
                Visible=FALSE }

    { 180 ;2   ;Field     ;
                ToolTipML=[ENU=Contains the code of the service item group that the item belongs to.;
                           ENG=Contains the code of the service item group that the item belongs to.];
                SourceExpr="Service Item Group";
                Importance=Additional }

    { 97  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that an extended text that you have set up will be added automatically on sales or purchase documents for this item.;
                           ENG=Specifies that an extended text that you have set up will be added automatically on sales or purchase documents for this item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Automatic Ext. Texts";
                Importance=Additional }

    { 171 ;1   ;Group     ;
                Name=InventoryGrp;
                CaptionML=[ENU=Inventory;
                           ENG=Inventory];
                GroupType=Group }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies where to find the item in the warehouse.;
                           ENG=Specifies where to find the item in the warehouse.];
                SourceExpr="Shelf No." }

    { 164 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the item was created from a nonstock item.;
                           ENG=Specifies that the item was created from a nonstock item.];
                SourceExpr="Created From Nonstock Item";
                Importance=Additional }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a search description.;
                           ENG=Specifies a search description.];
                SourceExpr="Search Description";
                Importance=Additional }

    { 14  ;2   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies how many units, such as pieces, boxes, or cans, of the item are in inventory.;
                           ENG=Specifies how many units, such as pieces, boxes, or cans, of the item are in inventory.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Inventory;
                Importance=Promoted;
                Visible=IsFoundationEnabled;
                Enabled=InventoryItemEditable;
                OnAssistEdit=BEGIN
                               MODIFY(TRUE);
                               COMMIT;
                               IF PAGE.RUNMODAL(PAGE::"Adjust Inventory",Rec) = ACTION::LookupOK THEN
                                 FIND;
                               CurrPage.UPDATE
                             END;
                              }

    { 205 ;2   ;Field     ;
                Name=InventoryNonFoundation;
                DrillDown=No;
                AssistEdit=No;
                CaptionML=[ENU=Inventory;
                           ENG=Inventory];
                ToolTipML=[ENU=Specifies how many units, such as pieces, boxes, or cans, of the item are in inventory.;
                           ENG=Specifies how many units, such as pieces, boxes, or cans, of the item are in inventory.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Inventory;
                Importance=Promoted;
                Visible=NOT IsFoundationEnabled;
                Enabled=InventoryItemEditable }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Shows how many units of the item are inbound on purchase orders, meaning listed on outstanding purchase order lines.;
                           ENG=Shows how many units of the item are inbound on purchase orders, meaning listed on outstanding purchase order lines.];
                SourceExpr="Qty. on Purch. Order" }

    { 172 ;2   ;Field     ;
                ToolTipML=[ENU=Shows how many units of the item are allocated to production orders, meaning listed on outstanding production order lines.;
                           ENG=Shows how many units of the item are allocated to production orders, meaning listed on outstanding production order lines.];
                SourceExpr="Qty. on Prod. Order" }

    { 174 ;2   ;Field     ;
                ToolTipML=[ENU=Shows how many units of the item are allocated as production order components, meaning listed under outstanding production order lines.;
                           ENG=Shows how many units of the item are allocated as production order components, meaning listed under outstanding production order lines.];
                SourceExpr="Qty. on Component Lines" }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Shows how many units of the item are allocated to sales orders, meaning listed on outstanding sales orders lines.;
                           ENG=Shows how many units of the item are allocated to sales orders, meaning listed on outstanding sales orders lines.];
                SourceExpr="Qty. on Sales Order" }

    { 189 ;2   ;Field     ;
                ToolTipML=[ENU=Shows how many units of the item are allocated to service orders, meaning listed on outstanding service order lines.;
                           ENG=Shows how many units of the item are allocated to service orders, meaning listed on outstanding service order lines.];
                SourceExpr="Qty. on Service Order";
                Importance=Additional }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Shows how many units of the item are allocated to assembly orders, which is how many are listed on outstanding assembly order headers.;
                           ENG=Shows how many units of the item are allocated to assembly orders, which is how many are listed on outstanding assembly order headers.];
                SourceExpr="Qty. on Assembly Order";
                Importance=Additional }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Shows how many units of the item are allocated as assembly components, which means how many are listed on outstanding assembly order lines.;
                           ENG=Shows how many units of the item are allocated as assembly components, which means how many are listed on outstanding assembly order lines.];
                SourceExpr="Qty. on Asm. Component";
                Importance=Additional }

    { 113 ;2   ;Field     ;
                Name=StockoutWarningDefaultYes;
                CaptionML=[ENU=Stockout Warning;
                           ENG=Stockout Warning];
                ToolTipML=[ENU=Specifies if a warning is displayed when you enter a quantity on a sales document that brings the item's inventory below zero.;
                           ENG=Specifies if a warning is displayed when you enter a quantity on a sales document that brings the item's inventory below zero.];
                OptionCaptionML=[ENU=Default (Yes),No,Yes;
                                 ENG=Default (Yes),No,Yes];
                ApplicationArea=#All;
                SourceExpr="Stockout Warning";
                Visible=ShowStockoutWarningDefaultYes }

    { 115 ;2   ;Field     ;
                Name=StockoutWarningDefaultNo;
                CaptionML=[ENU=Stockout Warning;
                           ENG=Stockout Warning];
                ToolTipML=[ENU=Specifies if a warning is displayed when you enter a quantity on a sales document that brings the item's inventory below zero.;
                           ENG=Specifies if a warning is displayed when you enter a quantity on a sales document that brings the item's inventory below zero.];
                OptionCaptionML=[ENU=Default (No),No,Yes;
                                 ENG=Default (No),No,Yes];
                ApplicationArea=#All;
                SourceExpr="Stockout Warning";
                Visible=ShowStockoutWarningDefaultNo }

    { 120 ;2   ;Field     ;
                Name=PreventNegInventoryDefaultYes;
                CaptionML=[ENU=Prevent Negative Inventory;
                           ENG=Prevent Negative Inventory];
                ToolTipML=[ENU=Specifies if you can post a transaction that will bring the item's inventory below zero.;
                           ENG=Specifies if you can post a transaction that will bring the item's inventory below zero.];
                OptionCaptionML=[ENU=Default (Yes),No,Yes;
                                 ENG=Default (Yes),No,Yes];
                ApplicationArea=#All;
                SourceExpr="Prevent Negative Inventory";
                Importance=Additional;
                Visible=ShowPreventNegInventoryDefaultYes }

    { 130 ;2   ;Field     ;
                Name=PreventNegInventoryDefaultNo;
                CaptionML=[ENU=Prevent Negative Inventory;
                           ENG=Prevent Negative Inventory];
                ToolTipML=[ENU=Specifies if you can post a transaction that will bring the item's inventory below zero.;
                           ENG=Specifies if you can post a transaction that will bring the item's inventory below zero.];
                OptionCaptionML=[ENU=Default (No),No,Yes;
                                 ENG=Default (No),No,Yes];
                ApplicationArea=#All;
                SourceExpr="Prevent Negative Inventory";
                Importance=Additional;
                Visible=ShowPreventNegInventoryDefaultNo }

    { 196 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net weight of the item.;
                           ENG=Specifies the net weight of the item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Weight";
                Importance=Additional }

    { 235 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the gross weight of the item.;
                           ENG=Specifies the gross weight of the item.];
                SourceExpr="Gross Weight";
                Importance=Additional }

    { 169 ;1   ;Group     ;
                Name=Price & Posting;
                CaptionML=[ENU=Price & Posting;
                           ENG=Price & Posting];
                GroupType=Group }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price for one unit of the item, in LCY.;
                           ENG=Specifies the price for one unit of the item, in LCY.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Price";
                Importance=Promoted;
                Editable=PriceEditable }

    { 173 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit price excluding VAT.;
                           ENG=Specifies the unit price excluding VAT.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CalcUnitPriceExclVAT;
                CaptionClass='2,0,' + FIELDCAPTION("Unit Price");
                Importance=Additional }

    { 175 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the Unit Price and Line Amount fields on sales document lines for this item should be shown with or without VAT.;
                           ENG=Specifies if the Unit Price and Line Amount fields on sales document lines for this item should be shown with or without VAT.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Price Includes VAT";
                Importance=Additional;
                OnValidate=BEGIN
                             IF "Price Includes VAT" = xRec."Price Includes VAT" THEN
                               EXIT;
                           END;
                            }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the Profit Percentage field, the Unit Price field, or neither field is calculated and filled.;
                           ENG=Specifies if the Profit Percentage field, the Unit Price field, or neither field is calculated and filled.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Price/Profit Calculation";
                Importance=Additional;
                OnValidate=BEGIN
                             EnableControls;
                           END;
                            }

    { 181 ;2   ;Field     ;
                CaptionML=[ENU=Special Prices & Discounts;
                           ENG=Special Prices & Discounts];
                ToolTipML=[ENU=Specifies special prices and line discounts for the item.;
                           ENG=Specifies special prices and line discounts for the item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SpecialPricesAndDiscountsTxt;
                Importance=Promoted;
                Editable=FALSE;
                OnDrillDown=VAR
                              SalesPrice@1001 : Record 7002;
                              SalesLineDiscount@1002 : Record 7004;
                              SalesPriceAndLineDiscounts@1000 : Page 1345;
                            BEGIN
                              IF SpecialPricesAndDiscountsTxt = ViewOrChangeExistingTxt THEN BEGIN
                                SalesPriceAndLineDiscounts.InitPage(TRUE);
                                SalesPriceAndLineDiscounts.LoadItem(Rec);
                                SalesPriceAndLineDiscounts.RUNMODAL;
                                EXIT;
                              END;

                              CASE STRMENU(STRSUBSTNO('%1,%2',CreateNewSpecialPriceTxt,CreateNewSpecialDiscountTxt),1,'') OF
                                1:
                                  BEGIN
                                    SalesPrice.SETRANGE("Item No.","No.");
                                    PAGE.RUNMODAL(PAGE::"Sales Prices",SalesPrice);
                                  END;
                                2:
                                  BEGIN
                                    SalesLineDiscount.SETRANGE(Type,SalesLineDiscount.Type::Item);
                                    SalesLineDiscount.SETRANGE(Code,"No.");
                                    PAGE.RUNMODAL(PAGE::"Sales Line Discounts",SalesLineDiscount);
                                  END;
                              END;
                            END;
                             }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the profit margin you want to sell the item at.;
                           ENG=Specifies the profit margin you want to sell the item at.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=2:2;
                SourceExpr="Profit %";
                Editable=ProfitEditable }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cost per unit of the item.;
                           ENG=Specifies the cost per unit of the item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Cost";
                Enabled=UnitCostEnable;
                Editable=UnitCostEditable;
                OnDrillDown=VAR
                              ShowAvgCalcItem@1000 : Codeunit 5803;
                            BEGIN
                              ShowAvgCalcItem.DrillDownAvgCostAdjmtPoint(Rec)
                            END;
                             }

    { 153 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item's indirect cost as an absolute amount.;
                           ENG=Specifies the item's indirect cost as an absolute amount.];
                SourceExpr="Overhead Rate";
                Importance=Additional }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the item should be included in the calculation of an invoice discount on documents where the item is traded.;
                           ENG=Specifies if the item should be included in the calculation of an invoice discount on documents where the item is traded.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Invoice Disc.";
                Importance=Additional }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an item group code that can be used as a criterion to grant a discount when the item is sold to a certain customer.;
                           ENG=Specifies an item group code that can be used as a criterion to grant a discount when the item is sold to a certain customer.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item Disc. Group";
                Importance=Additional }

    { 167 ;2   ;Group     ;
                Name=Cost Details;
                CaptionML=[ENU=Cost Details;
                           ENG=Cost Details];
                GroupType=Group }

    { 24  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies how the item's cost flow is recorded and whether an actual or budgeted value is capitalized and used in the cost calculation.;
                           ENG=Specifies how the item's cost flow is recorded and whether an actual or budgeted value is capitalised and used in the cost calculation.];
                SourceExpr="Costing Method";
                Importance=Additional;
                OnValidate=BEGIN
                             EnableCostingControls;
                           END;
                            }

    { 155 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the percentage of the item's direct unit cost that makes up indirect costs, such as freight and warehouse handling.;
                           ENG=Specifies the percentage of the item's direct unit cost that makes up indirect costs, such as freight and warehouse handling.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Indirect Cost %";
                Importance=Additional }

    { 32  ;3   ;Field     ;
                CaptionML=[ENU=Last Purchase Cost;
                           ENG=Last Purchase Cost];
                ToolTipML=[ENU=Specifies the most recent direct unit cost of the item.;
                           ENG=Specifies the most recent direct unit cost of the item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Direct Cost";
                Importance=Additional }

    { 176 ;2   ;Group     ;
                Name=Financial Details;
                CaptionML=[ENU=Financial Details;
                           ENG=Financial Details];
                GroupType=Group }

    { 95  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the item's general product posting group. It links business transactions made for this item with the general ledger to account for the value of trade with the item.;
                           ENG=Specifies the item's general product posting group. It links business transactions made for this item with the general ledger to account for the value of trade with the item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Prod. Posting Group";
                Importance=Additional;
                ShowMandatory=TRUE }

    { 66  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the VAT product posting group. Links business transactions made for this item with the general ledger, to account for VAT amounts resulting from trade with the item.;
                           ENG=Specifies the VAT product posting group. Links business transactions made for this item with the general ledger, to account for VAT amounts resulting from trade with the item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Group";
                Importance=Additional;
                ShowMandatory=TRUE }

    { 40  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the inventory posting group. Links business transactions made for the item with an inventory account in the general ledger, to group amounts for that item type.;
                           ENG=Specifies the inventory posting group. Links business transactions made for the item with an inventory account in the general ledger, to group amounts for that item type.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Inventory Posting Group";
                Importance=Additional;
                Editable=InventoryItemEditable;
                ShowMandatory=InventoryItemEditable }

    { 177 ;2   ;Group     ;
                Name=ForeignTrade;
                CaptionML=[ENU=Foreign Trade;
                           ENG=Foreign Trade];
                GroupType=Group }

    { 62  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the item's tariff number.;
                           ENG=Specifies a code for the item's commodity code.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tariff No.";
                Importance=Additional }

    { 93  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the country/region where the item was produced or processed.;
                           ENG=Specifies a code for the country/region where the item was produced or processed.];
                SourceExpr="Country/Region of Origin Code";
                Importance=Additional }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           ENG=Invoicing] }

    { 238 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the item's unit cost has been adjusted, either automatically or manually.;
                           ENG=Specifies whether the item's unit cost has been adjusted, either automatically or manually.];
                SourceExpr="Cost is Adjusted" }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that all the inventory costs for this item have been posted to the general ledger.;
                           ENG=Specifies that all the inventory costs for this item have been posted to the general ledger.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cost is Posted to G/L" }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit cost that is used as a standard measure.;
                           ENG=Specifies the unit cost that is used as a standard measure.];
                SourceExpr="Standard Cost";
                Enabled=StandardCostEnable;
                OnDrillDown=VAR
                              ShowAvgCalcItem@1000 : Codeunit 5803;
                            BEGIN
                              ShowAvgCalcItem.DrillDownAvgCostAdjmtPoint(Rec)
                            END;
                             }

    { 136 ;2   ;Field     ;
                CaptionML=[ENU=Default Deferral Template;
                           ENG=Default Deferral Template];
                ToolTipML=[ENU=Specifies how revenue or expenses for the item are deferred to other accounting periods by default.;
                           ENG=Specifies how revenue or expenses for the item are deferred to other accounting periods by default.];
                ApplicationArea=#Suite;
                SourceExpr="Default Deferral Template Code" }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that how many units of the item in inventory have been invoiced.;
                           ENG=Specifies that how many units of the item in inventory have been invoiced.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Invoiced Qty." }

    { 73  ;2   ;Field     ;
                ToolTipML=[ENU=Contains the unit of measure code used when you sell the item.;
                           ENG=Contains the unit of measure code used when you sell the item.];
                SourceExpr="Sales Unit of Measure" }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of a user who is working in the Application Worksheet window.;
                           ENG=Specifies the ID of a user who is working in the Application Worksheet window.];
                SourceExpr="Application Wksh. User ID";
                Importance=Additional;
                Visible=FALSE }

    { 10410090;2;Field    ;
                ToolTipML=[ENU=Specifies if this item is subject to reverse charge.;
                           ENG=Specifies if this item is subject to reverse charge.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reverse Charge Applies" }

    { 1904731401;1;Group  ;
                CaptionML=[ENU=Replenishment;
                           ENG=Replenishment] }

    { 133 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of supply order created by the planning system when the item needs to be replenished.;
                           ENG=Specifies the type of supply order created by the planning system when the item needs to be replenished.];
                SourceExpr="Replenishment System";
                Importance=Promoted }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a date formula for the amount of time it takes to replenish the item.;
                           ENG=Specifies a date formula for the amount of time it takes to replenish the item.];
                SourceExpr="Lead Time Calculation" }

    { 229 ;2   ;Group     ;
                CaptionML=[ENU=Purchase;
                           ENG=Purchase] }

    { 50  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor code of who supplies this item by default.;
                           ENG=Specifies the vendor code of who supplies this item by default.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor No." }

    { 52  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the number that the vendor uses for this item.;
                           ENG=Specifies the number that the vendor uses for this item.];
                SourceExpr="Vendor Item No." }

    { 99  ;3   ;Field     ;
                ToolTipML=[ENU=Contains the unit of measure code used when you purchase the item.;
                           ENG=Contains the unit of measure code used when you purchase the item.];
                SourceExpr="Purch. Unit of Measure" }

    { 230 ;2   ;Group     ;
                CaptionML=[ENU=Production;
                           ENG=Production] }

    { 227 ;3   ;Field     ;
                ToolTipML=[ENU=Defines whether additional orders for any related components are calculated.;
                           ENG=Defines whether additional orders for any related components are calculated.];
                SourceExpr="Manufacturing Policy" }

    { 137 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the routing.;
                           ENG=Specifies the number of the routing.];
                SourceExpr="Routing No." }

    { 139 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the production BOM.;
                           ENG=Specifies the number of the production BOM.];
                SourceExpr="Production BOM No." }

    { 141 ;3   ;Field     ;
                ToolTipML=[ENU=Defines how calculated consumption quantities are rounded when entered on consumption journal lines.;
                           ENG=Defines how calculated consumption quantities are rounded when entered on consumption journal lines.];
                SourceExpr="Rounding Precision" }

    { 143 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the method used to calculate and handle the consumption of the item as a component in production processes.;
                           ENG=Specifies the method used to calculate and handle the consumption of the item as a component in production processes.];
                SourceExpr="Flushing Method" }

    { 118 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the percentage of the item that you expect to be scrapped in the production process.;
                           ENG=Specifies the percentage of the item that you expect to be scrapped in the production process.];
                SourceExpr="Scrap %" }

    { 145 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item are processed in one production operation by default.;
                           ENG=Specifies how many units of the item are processed in one production operation by default.];
                SourceExpr="Lot Size" }

    { 13  ;2   ;Group     ;
                CaptionML=[ENU=Assembly;
                           ENG=Assembly];
                GroupType=Group }

    { 15  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies which default order flow is used to supply this assembly item.;
                           ENG=Specifies which default order flow is used to supply this assembly item.];
                SourceExpr="Assembly Policy" }

    { 8   ;3   ;Field     ;
                ToolTipML=[ENU=Indicates if the item is an assembly BOM.;
                           ENG=Indicates if the item is an assembly BOM.];
                SourceExpr="Assembly BOM" }

    { 1901343701;1;Group  ;
                CaptionML=[ENU=Planning;
                           ENG=Planning] }

    { 125 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the reordering policy.;
                           ENG=Specifies the reordering policy.];
                SourceExpr="Reordering Policy";
                Importance=Promoted;
                OnValidate=BEGIN
                             EnablePlanningControls
                           END;
                            }

    { 59  ;2   ;Field     ;
                ToolTipML=[ENU=Indicates whether the program will allow reservations to be made for this item.;
                           ENG=Indicates whether the program will allow reservations to be made for this item.];
                SourceExpr=Reserve;
                Importance=Additional }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if and how order tracking entries are created and maintained between supply and its corresponding demand.;
                           ENG=Specifies if and how order tracking entries are created and maintained between supply and its corresponding demand.];
                SourceExpr="Order Tracking Policy";
                Importance=Promoted }

    { 57  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that a SKU exists for this item.;
                           ENG=Specifies that a SKU exists for this item.];
                SourceExpr="Stockkeeping Unit Exists" }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a period of time during which you do not want the planning system to propose to reschedule existing supply orders.;
                           ENG=Specifies a period of time during which you do not want the planning system to propose to reschedule existing supply orders.];
                SourceExpr="Dampener Period";
                Importance=Additional;
                Enabled=DampenerPeriodEnable }

    { 55  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a dampener quantity to block insignificant change suggestions for an existing supply, if the change quantity is lower than the dampener quantity.;
                           ENG=Specifies a dampener quantity to block insignificant change suggestions for an existing supply, if the change quantity is lower than the dampener quantity.];
                SourceExpr="Dampener Quantity";
                Importance=Additional;
                Enabled=DampenerQtyEnable }

    { 53  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the item is included in availability calculations to promise a shipment date for its parent item.;
                           ENG=Specifies if the item is included in availability calculations to promise a shipment date for its parent item.];
                SourceExpr=Critical }

    { 51  ;2   ;Field     ;
                ToolTipML=[ENU=Defines a date formula to indicate a safety lead time that can be used as a buffer period for production and other delays.;
                           ENG=Defines a date formula to indicate a safety lead time that can be used as a buffer period for production and other delays.];
                SourceExpr="Safety Lead Time";
                Enabled=SafetyLeadTimeEnable }

    { 49  ;2   ;Field     ;
                ToolTipML=[ENU=Defines a quantity of stock to have in inventory to protect against supply-and-demand fluctuations during replenishment lead time.;
                           ENG=Defines a quantity of stock to have in inventory to protect against supply-and-demand fluctuations during replenishment lead time.];
                SourceExpr="Safety Stock Quantity";
                Enabled=SafetyStockQtyEnable }

    { 43  ;2   ;Group     ;
                CaptionML=[ENU=Lot-for-Lot Parameters;
                           ENG=Lot-for-Lot Parameters];
                GroupType=Group }

    { 45  ;3   ;Field     ;
                ToolTipML=[ENU=Includes inventory in the projected available balance when replenishment orders are calculated.;
                           ENG=Includes inventory in the projected available balance when replenishment orders are calculated.];
                SourceExpr="Include Inventory";
                Enabled=IncludeInventoryEnable;
                OnValidate=BEGIN
                             EnablePlanningControls
                           END;
                            }

    { 27  ;3   ;Field     ;
                ToolTipML=[ENU=Defines a period in which multiple demands are accumulated into one supply order when you use the Lot-for-Lot reordering policy.;
                           ENG=Defines a period in which multiple demands are accumulated into one supply order when you use the Lot-for-Lot reordering policy.];
                SourceExpr="Lot Accumulation Period";
                Enabled=LotAccumulationPeriodEnable }

    { 41  ;3   ;Field     ;
                ToolTipML=[ENU=Defines a period within which any suggestion to change a supply date always consists of a Reschedule action and never a Cancel + New action.;
                           ENG=Defines a period within which any suggestion to change a supply date always consists of a Reschedule action and never a Cancel + New action.];
                SourceExpr="Rescheduling Period";
                Enabled=ReschedulingPeriodEnable }

    { 39  ;2   ;Group     ;
                CaptionML=[ENU=Reorder-Point Parameters;
                           ENG=Reorder-Point Parameters];
                GroupType=Group }

    { 65  ;3   ;Group     ;
                GroupType=GridLayout;
                Layout=Rows }

    { 64  ;4   ;Group     ;
                GroupType=Group }

    { 37  ;5   ;Field     ;
                ToolTipML=[ENU=Specifies a stock quantity that sets the inventory below the level that you must replenish the item.;
                           ENG=Specifies a stock quantity that sets the inventory below the level that you must replenish the item.];
                SourceExpr="Reorder Point";
                Enabled=ReorderPointEnable }

    { 35  ;5   ;Field     ;
                ToolTipML=[ENU=Specifies a standard lot size quantity to be used for all order proposals.;
                           ENG=Specifies a standard lot size quantity to be used for all order proposals.];
                SourceExpr="Reorder Quantity";
                Enabled=ReorderQtyEnable }

    { 33  ;5   ;Field     ;
                ToolTipML=[ENU=Specifies a quantity that you want to use as a maximum inventory level.;
                           ENG=Specifies a quantity that you want to use as a maximum inventory level.];
                SourceExpr="Maximum Inventory";
                Enabled=MaximumInventoryEnable }

    { 31  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a quantity you allow projected inventory to exceed the reorder point, before the system suggests to decrease supply orders.;
                           ENG=Specifies a quantity you allow projected inventory to exceed the reorder point, before the system suggests to decrease supply orders.];
                SourceExpr="Overflow Level";
                Importance=Additional;
                Enabled=OverflowLevelEnable }

    { 29  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a time period that defines the recurring planning horizon used with Fixed Reorder Qty. or Maximum Qty. reordering policies.;
                           ENG=Specifies a time period that defines the recurring planning horizon used with Fixed Reorder Qty. or Maximum Qty. reordering policies.];
                SourceExpr="Time Bucket";
                Importance=Additional;
                Enabled=TimeBucketEnable }

    { 63  ;2   ;Group     ;
                CaptionML=[ENU=Order Modifiers;
                           ENG=Order Modifiers];
                GroupType=Group }

    { 60  ;3   ;Group     ;
                GroupType=GridLayout;
                Layout=Rows }

    { 61  ;4   ;Group     ;
                GroupType=Group }

    { 25  ;5   ;Field     ;
                ToolTipML=[ENU=Defines a minimum allowable quantity for an item order proposal.;
                           ENG=Defines a minimum allowable quantity for an item order proposal.];
                SourceExpr="Minimum Order Quantity";
                Enabled=MinimumOrderQtyEnable }

    { 23  ;5   ;Field     ;
                ToolTipML=[ENU=Specifies a maximum allowable quantity for an item order proposal.;
                           ENG=Specifies a maximum allowable quantity for an item order proposal.];
                SourceExpr="Maximum Order Quantity";
                Enabled=MaximumOrderQtyEnable }

    { 21  ;5   ;Field     ;
                ToolTipML=[ENU=Defines a parameter used by the planning system to modify the quantity of planned supply orders.;
                           ENG=Defines a parameter used by the planning system to modify the quantity of planned supply orders.];
                SourceExpr="Order Multiple";
                Enabled=OrderMultipleEnable }

    { 1904830201;1;Group  ;
                CaptionML=[ENU=Item Tracking;
                           ENG=Item Tracking] }

    { 225 ;2   ;Field     ;
                ToolTipML=[ENU=Contains the code that indicates how the program will track the item in inventory.;
                           ENG=Contains the code that indicates how the program will track the item in inventory.];
                SourceExpr="Item Tracking Code";
                Importance=Promoted }

    { 210 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a number series code to assign consecutive serial numbers to items produced.;
                           ENG=Specifies a number series code to assign consecutive serial numbers to items produced.];
                SourceExpr="Serial Nos." }

    { 72  ;2   ;Field     ;
                ToolTipML=[ENU=Contains the number series code that will be used when assigning lot numbers.;
                           ENG=Contains the number series code that will be used when assigning lot numbers.];
                SourceExpr="Lot Nos." }

    { 71  ;2   ;Field     ;
                ToolTipML=[ENU=Contains the formula for calculating the expiration date on the item tracking line.;
                           ENG=Contains the formula for calculating the expiration date on the item tracking line.];
                SourceExpr="Expiration Calculation" }

    { 1907509201;1;Group  ;
                CaptionML=[ENU=Warehouse;
                           ENG=Warehouse] }

    { 215 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the warehouse class code for the item.;
                           ENG=Specifies the warehouse class code for the item.];
                SourceExpr="Warehouse Class Code" }

    { 213 ;2   ;Field     ;
                ToolTipML=[ENU=Contains the code of the equipment that warehouse employees must use when handling the item.;
                           ENG=Contains the code of the equipment that warehouse employees must use when handling the item.];
                SourceExpr="Special Equipment Code";
                Importance=Additional }

    { 206 ;2   ;Field     ;
                ToolTipML=[ENU=Contains the code of the put-away template by which the program determines the most appropriate zone and bin for storage of the item after receipt.;
                           ENG=Contains the code of the put-away template by which the program determines the most appropriate zone and bin for storage of the item after receipt.];
                SourceExpr="Put-away Template Code" }

    { 204 ;2   ;Field     ;
                ToolTipML=[ENU=Contains the code of the item unit of measure in which the program will put the item away.;
                           ENG=Contains the code of the item unit of measure in which the program will put the item away.];
                SourceExpr="Put-away Unit of Measure Code";
                Importance=Promoted }

    { 202 ;2   ;Field     ;
                ToolTipML=[ENU=Contains the code of the counting period that indicates how often you want to count the item in a physical inventory.;
                           ENG=Contains the code of the counting period that indicates how often you want to count the item in a physical inventory.];
                SourceExpr="Phys Invt Counting Period Code";
                Importance=Promoted }

    { 200 ;2   ;Field     ;
                ToolTipML=[ENU=Contains the date on which you last posted the results of a physical inventory for the item to the item ledger.;
                           ENG=Contains the date on which you last posted the results of a physical inventory for the item to the item ledger.];
                SourceExpr="Last Phys. Invt. Date" }

    { 198 ;2   ;Field     ;
                ToolTipML=[ENU=Contains the last date on which you calculated the counting period. It is updated when you use the function Calculate Counting Period.;
                           ENG=Contains the last date on which you calculated the counting period. It is updated when you use the function Calculate Counting Period.];
                SourceExpr="Last Counting Period Update" }

    { 194 ;2   ;Field     ;
                SourceExpr="Next Counting Start Date" }

    { 131 ;2   ;Field     ;
                SourceExpr="Next Counting End Date" }

    { 192 ;2   ;Field     ;
                ToolTipML=[ENU=Contains a unique code for the item in terms that are useful for automatic data capture.;
                           ENG=Contains a unique code for the item in terms that are useful for automatic data capture.];
                SourceExpr="Identifier Code";
                Importance=Additional }

    { 208 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if this item can be cross-docked.;
                           ENG=Specifies if this item can be cross-docked.];
                SourceExpr="Use Cross-Docking";
                Importance=Additional }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 109 ;1   ;Part      ;
                Name=ItemPicture;
                CaptionML=[ENU=Picture;
                           ENG=Picture];
                ApplicationArea=#All;
                SubPageLink=No.=FIELD(No.),
                            Date Filter=FIELD(Date Filter),
                            Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                            Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                            Location Filter=FIELD(Location Filter),
                            Drop Shipment Filter=FIELD(Drop Shipment Filter),
                            Variant Filter=FIELD(Variant Filter);
                PagePartID=Page346;
                PartType=Page }

    { 201 ;1   ;Part      ;
                Name=ItemAttributesFactbox;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page9110;
                PartType=Page }

    { 132 ;1   ;Part      ;
                ApplicationArea=#All;
                SubPageLink=Source Type=CONST(Item),
                            Source No.=FIELD(No.);
                PagePartID=Page875;
                Visible=SocialListeningVisible;
                PartType=Page }

    { 134 ;1   ;Part      ;
                ApplicationArea=#All;
                SubPageLink=Source Type=CONST(Item),
                            Source No.=FIELD(No.);
                PagePartID=Page876;
                Visible=SocialListeningSetupVisible;
                PartType=Page;
                UpdatePropagation=Both }

    { 162 ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#Suite;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ApplicationAreaSetup@1027 : Record 9178;
      CalculateStdCost@1005 : Codeunit 5812;
      ItemAvailFormsMgt@1000 : Codeunit 353;
      ApprovalsMgmt@1013 : Codeunit 1535;
      SkilledResourceList@1001 : Page 6023;
      IsFoundationEnabled@1028 : Boolean;
      ShowStockoutWarningDefaultYes@1006 : Boolean;
      ShowStockoutWarningDefaultNo@1004 : Boolean;
      ShowPreventNegInventoryDefaultYes@1003 : Boolean;
      ShowPreventNegInventoryDefaultNo@1002 : Boolean;
      TimeBucketEnable@19054765 : Boolean INDATASET;
      SafetyLeadTimeEnable@19079647 : Boolean INDATASET;
      SafetyStockQtyEnable@19036196 : Boolean INDATASET;
      ReorderPointEnable@19067744 : Boolean INDATASET;
      ReorderQtyEnable@19013534 : Boolean INDATASET;
      MaximumInventoryEnable@19059424 : Boolean INDATASET;
      MinimumOrderQtyEnable@19021857 : Boolean INDATASET;
      MaximumOrderQtyEnable@19007977 : Boolean INDATASET;
      OrderMultipleEnable@19004365 : Boolean INDATASET;
      IncludeInventoryEnable@19061544 : Boolean INDATASET;
      ReschedulingPeriodEnable@19049766 : Boolean INDATASET;
      LotAccumulationPeriodEnable@19019376 : Boolean INDATASET;
      DampenerPeriodEnable@19045210 : Boolean INDATASET;
      DampenerQtyEnable@19051814 : Boolean INDATASET;
      OverflowLevelEnable@19033283 : Boolean INDATASET;
      StandardCostEnable@19016419 : Boolean INDATASET;
      UnitCostEnable@19054429 : Boolean INDATASET;
      SocialListeningSetupVisible@1008 : Boolean INDATASET;
      SocialListeningVisible@1007 : Boolean INDATASET;
      CRMIntegrationEnabled@1010 : Boolean;
      CRMIsCoupledToRecord@1009 : Boolean;
      OpenApprovalEntriesExistCurrUser@1012 : Boolean;
      OpenApprovalEntriesExist@1011 : Boolean;
      ShowWorkflowStatus@1014 : Boolean;
      InventoryItemEditable@1015 : Boolean INDATASET;
      UnitCostEditable@1022 : Boolean INDATASET;
      ProfitEditable@1017 : Boolean;
      PriceEditable@1018 : Boolean;
      SpecialPricesAndDiscountsTxt@1019 : Text;
      CreateNewTxt@1020 : TextConst 'ENU=Create New...;ENG=Create New...';
      ViewOrChangeExistingTxt@1021 : TextConst 'ENU=View or Change Existing...;ENG=View or Change Existing...';
      CreateNewSpecialPriceTxt@1023 : TextConst 'ENU=Create New Special Price...;ENG=Create New Special Price...';
      CreateNewSpecialDiscountTxt@1024 : TextConst 'ENU=Create New Special Discount...;ENG=Create New Special Discount...';
      EnabledApprovalWorkflowsExist@1025 : Boolean;
      EventFilter@1026 : Text;
      NoFieldVisible@1016 : Boolean;
      NewMode@1029 : Boolean;

    LOCAL PROCEDURE EnableControls@6();
    VAR
      ItemLedgerEntry@1000 : Record 32;
      CRMIntegrationManagement@1001 : Codeunit 5330;
      DocumentNoVisibility@1002 : Codeunit 1400;
    BEGIN
      InventoryItemEditable := Type = Type::Inventory;

      IF Type = Type::Inventory THEN BEGIN
        ItemLedgerEntry.SETRANGE("Item No.","No.");
        UnitCostEditable := ItemLedgerEntry.ISEMPTY;
      END ELSE
        UnitCostEditable := TRUE;

      ProfitEditable := "Price/Profit Calculation" <> "Price/Profit Calculation"::"Profit=Price-Cost";
      PriceEditable := "Price/Profit Calculation" <> "Price/Profit Calculation"::"Price=Cost+Profit";

      EnablePlanningControls;
      EnableCostingControls;

      EnableShowStockOutWarning;

      SetSocialListeningFactboxVisibility;
      NoFieldVisible := DocumentNoVisibility.ItemNoIsVisible;
      EnableShowShowEnforcePositivInventory;
      CRMIntegrationEnabled := CRMIntegrationManagement.IsCRMIntegrationEnabled;

      UpdateSpecialPricesAndDiscountsTxt;
    END;

    LOCAL PROCEDURE OnNewRec@16();
    VAR
      DocumentNoVisibility@1002 : Codeunit 1400;
    BEGIN
      IF GUIALLOWED THEN BEGIN
        EnableControls;
        IF "No." = '' THEN
          IF DocumentNoVisibility.ItemNoSeriesIsDefault THEN
            NewMode := TRUE;
      END;
    END;

    LOCAL PROCEDURE EnableShowStockOutWarning@4();
    VAR
      SalesSetup@1000 : Record 311;
    BEGIN
      SalesSetup.GET;
      ShowStockoutWarningDefaultYes := SalesSetup."Stockout Warning";
      ShowStockoutWarningDefaultNo := NOT ShowStockoutWarningDefaultYes;

      EnableShowShowEnforcePositivInventory
    END;

    LOCAL PROCEDURE InsertItemUnitOfMeasure@8();
    VAR
      ItemUnitOfMeasure@1000 : Record 5404;
    BEGIN
      IF "Base Unit of Measure" <> '' THEN BEGIN
        ItemUnitOfMeasure.INIT;
        ItemUnitOfMeasure."Item No." := "No.";
        ItemUnitOfMeasure.VALIDATE(Code,"Base Unit of Measure");
        ItemUnitOfMeasure."Qty. per Unit of Measure" := 1;
        ItemUnitOfMeasure.INSERT;
      END;
    END;

    LOCAL PROCEDURE EnableShowShowEnforcePositivInventory@2();
    VAR
      InventorySetup@1000 : Record 313;
    BEGIN
      InventorySetup.GET;
      ShowPreventNegInventoryDefaultYes := InventorySetup."Prevent Negative Inventory";
      ShowPreventNegInventoryDefaultNo := NOT ShowPreventNegInventoryDefaultYes;
    END;

    LOCAL PROCEDURE EnablePlanningControls@1();
    VAR
      PlanningGetParam@1000 : Codeunit 99000855;
      TimeBucketEnabled@1010 : Boolean;
      SafetyLeadTimeEnabled@1009 : Boolean;
      SafetyStockQtyEnabled@1008 : Boolean;
      ReorderPointEnabled@1007 : Boolean;
      ReorderQtyEnabled@1006 : Boolean;
      MaximumInventoryEnabled@1005 : Boolean;
      MinimumOrderQtyEnabled@1004 : Boolean;
      MaximumOrderQtyEnabled@1003 : Boolean;
      OrderMultipleEnabled@1002 : Boolean;
      IncludeInventoryEnabled@1001 : Boolean;
      ReschedulingPeriodEnabled@1015 : Boolean;
      LotAccumulationPeriodEnabled@1014 : Boolean;
      DampenerPeriodEnabled@1013 : Boolean;
      DampenerQtyEnabled@1012 : Boolean;
      OverflowLevelEnabled@1011 : Boolean;
    BEGIN
      PlanningGetParam.SetUpPlanningControls("Reordering Policy","Include Inventory",
        TimeBucketEnabled,SafetyLeadTimeEnabled,SafetyStockQtyEnabled,
        ReorderPointEnabled,ReorderQtyEnabled,MaximumInventoryEnabled,
        MinimumOrderQtyEnabled,MaximumOrderQtyEnabled,OrderMultipleEnabled,IncludeInventoryEnabled,
        ReschedulingPeriodEnabled,LotAccumulationPeriodEnabled,
        DampenerPeriodEnabled,DampenerQtyEnabled,OverflowLevelEnabled);

      TimeBucketEnable := TimeBucketEnabled;
      SafetyLeadTimeEnable := SafetyLeadTimeEnabled;
      SafetyStockQtyEnable := SafetyStockQtyEnabled;
      ReorderPointEnable := ReorderPointEnabled;
      ReorderQtyEnable := ReorderQtyEnabled;
      MaximumInventoryEnable := MaximumInventoryEnabled;
      MinimumOrderQtyEnable := MinimumOrderQtyEnabled;
      MaximumOrderQtyEnable := MaximumOrderQtyEnabled;
      OrderMultipleEnable := OrderMultipleEnabled;
      IncludeInventoryEnable := IncludeInventoryEnabled;
      ReschedulingPeriodEnable := ReschedulingPeriodEnabled;
      LotAccumulationPeriodEnable := LotAccumulationPeriodEnabled;
      DampenerPeriodEnable := DampenerPeriodEnabled;
      DampenerQtyEnable := DampenerQtyEnabled;
      OverflowLevelEnable := OverflowLevelEnabled;
    END;

    LOCAL PROCEDURE EnableCostingControls@3();
    BEGIN
      StandardCostEnable := "Costing Method" = "Costing Method"::Standard;
      UnitCostEnable := "Costing Method" <> "Costing Method"::Standard;
    END;

    LOCAL PROCEDURE SetSocialListeningFactboxVisibility@5();
    VAR
      SocialListeningMgt@1000 : Codeunit 871;
    BEGIN
      SocialListeningMgt.GetItemFactboxVisibility(Rec,SocialListeningSetupVisible,SocialListeningVisible);
    END;

    LOCAL PROCEDURE InitControls@12();
    BEGIN
      UnitCostEnable := TRUE;
      StandardCostEnable := TRUE;
      OverflowLevelEnable := TRUE;
      DampenerQtyEnable := TRUE;
      DampenerPeriodEnable := TRUE;
      LotAccumulationPeriodEnable := TRUE;
      ReschedulingPeriodEnable := TRUE;
      IncludeInventoryEnable := TRUE;
      OrderMultipleEnable := TRUE;
      MaximumOrderQtyEnable := TRUE;
      MinimumOrderQtyEnable := TRUE;
      MaximumInventoryEnable := TRUE;
      ReorderQtyEnable := TRUE;
      ReorderPointEnable := TRUE;
      SafetyStockQtyEnable := TRUE;
      SafetyLeadTimeEnable := TRUE;
      TimeBucketEnable := TRUE;

      InventoryItemEditable := Type = Type::Inventory;
      "Costing Method" := "Costing Method"::FIFO;
      UnitCostEditable := TRUE;
    END;

    LOCAL PROCEDURE UpdateSpecialPricesAndDiscountsTxt@7();
    VAR
      TempSalesPriceAndLineDiscBuff@1000 : TEMPORARY Record 1304;
    BEGIN
      SpecialPricesAndDiscountsTxt := CreateNewTxt;
      TempSalesPriceAndLineDiscBuff.LoadDataForItem(Rec);
      IF NOT TempSalesPriceAndLineDiscBuff.ISEMPTY THEN
        SpecialPricesAndDiscountsTxt := ViewOrChangeExistingTxt;
    END;

    LOCAL PROCEDURE CreateItemFromTemplate@11();
    VAR
      ItemTemplate@1001 : Record 1301;
      Item@1000 : Record 27;
    BEGIN
      IF NewMode THEN BEGIN
        IF ItemTemplate.NewItemFromTemplate(Item) THEN BEGIN
          COPY(Item);
          CurrPage.UPDATE;
        END;

        // Enforce FIFO costing method for Foundation
        IF ApplicationAreaSetup.IsFoundationEnabled THEN
          Item.VALIDATE("Costing Method","Costing Method"::FIFO);

        NewMode := FALSE;
      END;
    END;

    BEGIN
    END.
  }
}

