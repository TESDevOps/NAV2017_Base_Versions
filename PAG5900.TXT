OBJECT Page 5900 Service Order
{
  OBJECT-PROPERTIES
  {
    Date=04/08/17;
    Time=12:00:00;
    Version List=NAVW110.00.00.17972,NAVGB10.00.00.17972;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Order;
               ENG=Service Order];
    SourceTable=Table5900;
    SourceTableView=WHERE(Document Type=FILTER(Order));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Warehouse;
                                ENG=New,Process,Report,Warehouse];
    OnOpenPage=BEGIN
                 IF UserMgt.GetServiceFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetServiceFilter);
                   FILTERGROUP(0);
                 END;
               END;

    OnNewRecord=BEGIN
                  "Document Type" := "Document Type"::Order;
                  "Responsibility Center" := UserMgt.GetServiceFilter;
                  IF "No." = '' THEN
                    SetCustomerFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     CLEAR(ServLogMgt);
                     ServLogMgt.ServHeaderManualDelete(Rec);
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 138     ;1   ;ActionGroup;
                      CaptionML=[ENU=O&rder;
                                 ENG=O&rder];
                      Image=Order }
      { 74      ;2   ;Separator  }
      { 137     ;2   ;Action    ;
                      CaptionML=[ENU=Demand Overview;
                                 ENG=Demand Overview];
                      Image=Forecast;
                      OnAction=VAR
                                 DemandOverview@1000 : Page 5830;
                               BEGIN
                                 DemandOverview.SetCalculationParameter(TRUE);
                                 DemandOverview.Initialize(0D,4,"No.",'','');
                                 DemandOverview.RUNMODAL;
                               END;
                                }
      { 3       ;2   ;Separator  }
      { 7       ;2   ;Action    ;
                      Name=<Action7>;
                      AccessByPermission=TableData 99000880=R;
                      CaptionML=[ENU=Order Promising;
                                 ENG=Order Promising];
                      Image=OrderPromising;
                      OnAction=VAR
                                 OrderPromisingLine@1001 : Record 99000880;
                                 OrderPromisingLines@1000 : Page 99000959;
                               BEGIN
                                 CLEAR(OrderPromisingLines);
                                 OrderPromisingLines.SetSourceType(12); // Service order
                                 CLEAR(OrderPromisingLine);
                                 OrderPromisingLine.SETRANGE("Source Type",OrderPromisingLine."Source Type"::"Service Order");
                                 OrderPromisingLine.SETRANGE("Source ID","No.");
                                 OrderPromisingLines.SETTABLEVIEW(OrderPromisingLine);
                                 OrderPromisingLines.RUNMODAL;
                               END;
                                }
      { 166     ;2   ;Separator ;
                      CaptionML=[ENU="";
                                 ENG=""] }
      { 131     ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=&Customer Card;
                                 ENG=&Customer Card];
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Customer No.);
                      Image=Customer }
      { 206     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=&Dimensions;
                                 ENG=&Dimensions];
                      Enabled="No." <> '';
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                               END;
                                }
      { 170     ;2   ;Separator ;
                      CaptionML=[ENU="";
                                 ENG=""] }
      { 20      ;2   ;Action    ;
                      CaptionML=[ENU=Service Document Lo&g;
                                 ENG=Service Document Lo&g];
                      Image=Log;
                      OnAction=VAR
                                 ServDocLog@1001 : Record 5912;
                               BEGIN
                                 ServDocLog.ShowServDocLog(Rec);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      CaptionML=[ENU=Email &Queue;
                                 ENG=Email &Queue];
                      RunObject=Page 5961;
                      RunPageView=SORTING(Document Type,Document No.);
                      RunPageLink=Document Type=CONST(Service Order),
                                  Document No.=FIELD(No.);
                      Image=Email }
      { 21      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      RunObject=Page 5911;
                      RunPageLink=Table Name=CONST(Service Header),
                                  Table Subtype=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Type=CONST(General);
                      Image=ViewComments }
      { 36      ;1   ;ActionGroup;
                      Name=<Action36>;
                      CaptionML=[ENU=Statistics;
                                 ENG=Statistics];
                      Image=Statistics }
      { 5       ;2   ;Separator ;
                      CaptionML=[ENU="";
                                 ENG=""] }
      { 102     ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ENG=Statistics];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SalesSetup@1000 : Record 311;
                                 ServLine@1001 : Record 5902;
                                 ServLines@1003 : Page 5905;
                               BEGIN
                                 SalesSetup.GET;
                                 IF SalesSetup."Calc. Inv. Discount" THEN BEGIN
                                   ServLine.RESET;
                                   ServLine.SETRANGE("Document Type","Document Type");
                                   ServLine.SETRANGE("Document No.","No.");
                                   IF ServLine.FINDFIRST THEN BEGIN
                                     ServLines.SETTABLEVIEW(ServLine);
                                     ServLines.CalcInvDisc(ServLine);
                                     COMMIT
                                   END;
                                 END;
                                 PAGE.RUNMODAL(PAGE::"Service Order Statistics",Rec);
                               END;
                                }
      { 49      ;2   ;Separator ;
                      CaptionML=[ENU="";
                                 ENG=""] }
      { 37      ;1   ;ActionGroup;
                      CaptionML=[ENU=Documents;
                                 ENG=Documents];
                      Image=Documents }
      { 41      ;2   ;Action    ;
                      CaptionML=[ENU=S&hipments;
                                 ENG=S&hipments];
                      RunObject=Page 5974;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Promoted=Yes;
                      Image=Shipment;
                      PromotedCategory=Process }
      { 60      ;2   ;Action    ;
                      CaptionML=[ENU=Invoices;
                                 ENG=Invoices];
                      RunObject=Page 5977;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Image=Invoice }
      { 29      ;1   ;ActionGroup;
                      CaptionML=[ENU=W&arehouse;
                                 ENG=W&arehouse];
                      Image=Warehouse }
      { 11      ;2   ;Action    ;
                      CaptionML=[ENU=Whse. Shipment Lines;
                                 ENG=Whse. Shipment Lines];
                      RunObject=Page 7341;
                      RunPageView=SORTING(Source Type,Source Subtype,Source No.,Source Line No.);
                      RunPageLink=Source Type=CONST(5902),
                                  Source Subtype=FIELD(Document Type),
                                  Source No.=FIELD(No.);
                      Promoted=Yes;
                      Image=ShipmentLines;
                      PromotedCategory=Category4 }
      { 35      ;1   ;ActionGroup;
                      CaptionML=[ENU=History;
                                 ENG=History];
                      Image=History }
      { 155     ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Service Ledger E&ntries;
                                 ENG=Service Ledger E&ntries];
                      RunObject=Page 5912;
                      RunPageView=SORTING(Service Order No.,Service Item No. (Serviced),Entry Type,Moved from Prepaid Acc.,Posting Date,Open,Type);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=ServiceLedger }
      { 142     ;2   ;Action    ;
                      CaptionML=[ENU=&Warranty Ledger Entries;
                                 ENG=&Warranty Ledger Entries];
                      RunObject=Page 5913;
                      RunPageView=SORTING(Service Order No.,Posting Date,Document No.);
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=WarrantyLedger }
      { 105     ;2   ;Action    ;
                      CaptionML=[ENU=&Job Ledger Entries;
                                 ENG=&Job Ledger Entries];
                      RunObject=Page 92;
                      RunPageView=SORTING(Service Order No.,Posting Date)
                                  WHERE(Entry Type=CONST(Usage));
                      RunPageLink=Service Order No.=FIELD(No.);
                      Image=JobLedger }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 152     ;2   ;Action    ;
                      Name=Create Customer;
                      CaptionML=[ENU=&Create Customer;
                                 ENG=&Create Customer];
                      Image=NewCustomer;
                      OnAction=BEGIN
                                 CLEAR(ServOrderMgt);
                                 ServOrderMgt.CreateNewCustomer(Rec);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 27      ;1   ;ActionGroup;
                      CaptionML=[ENU=W&arehouse;
                                 ENG=W&arehouse];
                      Image=Warehouse }
      { 12      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Release to Ship;
                                 ENG=Release to Ship];
                      Promoted=Yes;
                      Image=ReleaseShipment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ReleaseServiceDocument@1000 : Codeunit 416;
                               BEGIN
                                 ReleaseServiceDocument.PerformManualRelease(Rec);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Reopen;
                                 ENG=Reopen];
                      Promoted=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ReleaseServiceDocument@1000 : Codeunit 416;
                               BEGIN
                                 ReleaseServiceDocument.PerformManualReopen(Rec);
                               END;
                                }
      { 14      ;2   ;Action    ;
                      Name=Create Whse Shipment;
                      AccessByPermission=TableData 7320=R;
                      CaptionML=[ENU=Create Whse. Shipment;
                                 ENG=Create Whse. Shipment];
                      Promoted=Yes;
                      Image=NewShipment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 GetSourceDocOutbound@1000 : Codeunit 5752;
                               BEGIN
                                 GetSourceDocOutbound.CreateFromServiceOrder(Rec);
                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 33      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENG=P&osting];
                      Image=Post }
      { 86      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ENG=Test Report];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 ENG=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.];
                      Image=TestReport;
                      OnAction=VAR
                                 ReportPrint@1001 : Codeunit 228;
                               BEGIN
                                 ReportPrint.PrintServiceHeader(Rec);
                               END;
                                }
      { 87      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=P&ost;
                                 ENG=P&ost];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServPostYesNo@1002 : Codeunit 5981;
                                 InstructionMgt@1000 : Codeunit 1330;
                               BEGIN
                                 ServHeader.GET("Document Type","No.");
                                 ServPostYesNo.PostDocument(ServHeader);
                                 DocumentIsPosted := NOT ServHeader.GET("Document Type","No.");
                                 IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
                                   ShowPostedConfirmationMessage;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 30      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 ENG=Preview Posting];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 ENG=Review the different types of entries that will be created when you post the document or journal.];
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 ServPostYesNo@1000 : Codeunit 5981;
                               BEGIN
                                 ServHeader.GET("Document Type","No.");
                                 ServPostYesNo.PreviewDocument(ServHeader);
                                 DocumentIsPosted := NOT ServHeader.GET("Document Type","No.");
                               END;
                                }
      { 114     ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and &Print;
                                 ENG=Post and &Print];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServPostPrint@1001 : Codeunit 5982;
                               BEGIN
                                 ServHeader.GET("Document Type","No.");
                                 ServPostPrint.PostDocument(ServHeader);
                               END;
                                }
      { 115     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 ENG=Post &Batch];
                      Image=PostBatch;
                      OnAction=BEGIN
                                 CLEAR(ServHeader);
                                 ServHeader.SETRANGE(Status,ServHeader.Status::Finished);
                                 REPORT.RUNMODAL(REPORT::"Batch Post Service Orders",TRUE,TRUE,ServHeader);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENG=&Print];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocPrint@1001 : Codeunit 229;
                               BEGIN
                                 CurrPage.UPDATE(TRUE);
                                 DocPrint.PrintServiceHeader(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the service document you are creating.;
                           ENG=Specifies the number of the service document you are creating.];
                SourceExpr="No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 99  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a short description of the service document, such as Order 2001.;
                           ENG=Specifies a short description of the service document, such as Order 2001.];
                SourceExpr=Description }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer who owns the items in the service document.;
                           ENG=Specifies the number of the customer who owns the items in the service document.];
                SourceExpr="Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;
                            }

    { 146 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the contact to whom you will deliver the service.;
                           ENG=Specifies the number of the contact to whom you will deliver the service.];
                SourceExpr="Contact No.";
                OnValidate=BEGIN
                             IF GETFILTER("Contact No.") = xRec."Contact No." THEN
                               IF "Contact No." <> xRec."Contact No." THEN
                                 SETRANGE("Contact No.");
                           END;
                            }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the customer to whom the items on the document will be shipped.;
                           ENG=Specifies the name of the customer to whom the items on the document will be shipped.];
                SourceExpr=Name }

    { 82  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the address of the customer to whom the service will be shipped.;
                           ENG=Specifies the address of the customer to whom the service will be shipped.];
                SourceExpr=Address }

    { 89  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an alternate address of the customer.;
                           ENG=Specifies an alternate address of the customer.];
                SourceExpr="Address 2";
                Importance=Additional }

    { 1040000;2;Field     ;
                SourceExpr=City }

    { 1040002;2;Field     ;
                SourceExpr=County }

    { 120 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the postal code of the address.;
                           ENG=Specifies the postcode of the address.];
                SourceExpr="Post Code" }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the phone number of the customer in this service order.;
                           ENG=Specifies the phone number of the customer in this service order.];
                SourceExpr="Phone No." }

    { 97  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies your customer's alternate phone number.;
                           ENG=Specifies your customer's alternate phone number.];
                SourceExpr="Phone No. 2";
                Importance=Additional }

    { 63  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the email address of the customer in this service order.;
                           ENG=Specifies the email address of the customer in this service order.];
                SourceExpr="E-Mail" }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the customer wants to receive notifications about service completion.;
                           ENG=Specifies how the customer wants to receive notifications about service completion.];
                SourceExpr="Notify Customer";
                Importance=Additional }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of this service order.;
                           ENG=Specifies the type of this service order.];
                SourceExpr="Service Order Type" }

    { 190 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the contract associated with the order.;
                           ENG=Specifies the number of the contract associated with the order.];
                SourceExpr="Contract No." }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the estimated date when work on the order should start, that is, when the service order status changes from Pending, to In Process.;
                           ENG=Specifies the estimated date when work on the order should start, that is, when the service order status changes from Pending, to In Process.];
                SourceExpr="Response Date";
                Importance=Promoted }

    { 134 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the estimated time when work on the order starts, that is, when the service order status changes from Pending, to In Process.;
                           ENG=Specifies the estimated time when work on the order starts, that is, when the service order status changes from Pending, to In Process.];
                SourceExpr="Response Time" }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the priority of the service order.;
                           ENG=Specifies the priority of the service order.];
                SourceExpr=Priority;
                Importance=Promoted }

    { 47  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service order status, which reflects the repair or maintenance status of all service items on the service order.;
                           ENG=Specifies the service order status, which reflects the repair or maintenance status of all service items on the service order.];
                SourceExpr=Status }

    { 98  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the responsibility center associated with the user who created the service order.;
                           ENG=Specifies the code of the responsibility centre associated with the user who created the service order.];
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 126 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the contact who will receive the service.;
                           ENG=Specifies the name of the contact who will receive the service.];
                SourceExpr="Contact Name" }

    { 217 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           ENG=Specifies the ID of the user who is responsible for the document.];
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if items in the Service Lines window are ready to be handled in warehouse activities.;
                           ENG=Specifies if items in the Service Lines window are ready to be handled in warehouse activities.];
                SourceExpr="Release Status";
                Importance=Promoted }

    { 46  ;1   ;Part      ;
                Name=ServItemLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page5902 }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoicing;
                           ENG=Invoicing] }

    { 75  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer to whom you send the order invoice.;
                           ENG=Specifies the number of the customer to whom you send the order invoice.];
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 164 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the contact to whom you will send the invoice.;
                           ENG=Specifies the number of the contact to whom you will send the invoice.];
                SourceExpr="Bill-to Contact No." }

    { 92  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the customer to whom you will send invoices.;
                           ENG=Specifies the name of the customer to whom you will send invoices.];
                SourceExpr="Bill-to Name" }

    { 96  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the address of the customer to whom you will send the invoice.;
                           ENG=Specifies the address of the customer to whom you will send the invoice.];
                SourceExpr="Bill-to Address" }

    { 103 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an alternate address of the customer.;
                           ENG=Specifies an alternate address of the customer.];
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 1040004;2;Field     ;
                SourceExpr="Bill-to City" }

    { 1040006;2;Field     ;
                SourceExpr="Bill-to County" }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the postal code of the address.;
                           ENG=Specifies the postcode of the address.];
                SourceExpr="Bill-to Post Code" }

    { 65  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the person to contact when sending invoices to the customer.;
                           ENG=Specifies the name of the person to contact when sending invoices to the customer.];
                SourceExpr="Bill-to Contact" }

    { 135 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a customer reference, which will be used when printing service documents.;
                           ENG=Specifies a customer reference, which will be used when printing service documents.];
                SourceExpr="Your Reference";
                Importance=Additional }

    { 175 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the salesperson assigned to this service document.;
                           ENG=Specifies the code of the salesperson assigned to this service document.];
                SourceExpr="Salesperson Code" }

    { 79  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the maximum unit price that can be set for a resource (for example, a technician) on all service lines linked to this order.;
                           ENG=Specifies the maximum unit price that can be set for a resource (for example, a technician) on all service lines linked to this order.];
                SourceExpr="Max. Labor Unit Price";
                Importance=Additional;
                OnValidate=BEGIN
                             MaxLaborUnitPriceOnAfterValida;
                           END;
                            }

    { 113 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the service document should be posted.;
                           ENG=Specifies the date when the service document should be posted.];
                SourceExpr="Posting Date" }

    { 118 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the service document was created.;
                           ENG=Specifies the date when the service document was created.];
                SourceExpr="Document Date" }

    { 180 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code for the dimension chosen as Global Dimension 1.;
                           ENG=Specifies the dimension value code for the dimension chosen as Global Dimension 1.];
                SourceExpr="Shortcut Dimension 1 Code" }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code for the dimension chosen as Global Dimension 2.;
                           ENG=Specifies the dimension value code for the dimension chosen as Global Dimension 2.];
                SourceExpr="Shortcut Dimension 2 Code" }

    { 195 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that represents the service header payment terms, which are used to calculate the due date and payment discount date.;
                           ENG=Specifies the code that represents the service header payment terms, which are used to calculate the due date and payment discount date.];
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 196 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the invoice is due.;
                           ENG=Specifies when the invoice is due.];
                SourceExpr="Due Date";
                Importance=Promoted }

    { 197 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the percentage of payment discount given, if the customer pays by the date entered in the Pmt. Discount Date field.;
                           ENG=Specifies the percentage of payment discount given, if the customer pays by the date entered in the Pmt. Discount Date field.];
                SourceExpr="Payment Discount %" }

    { 198 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date for the customer to pay the invoice and receive a payment discount.;
                           ENG=Specifies the last date for the customer to pay the invoice and receive a payment discount.];
                SourceExpr="Pmt. Discount Date" }

    { 200 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the method the customer uses to pay for the service.;
                           ENG=Specifies the code for the method the customer uses to pay for the service.];
                SourceExpr="Payment Method Code" }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code for various amounts on the service lines.;
                           ENG=Specifies the currency code for various amounts on the service lines.];
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 202 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the unit price on the Service Line will be displayed including VAT.;
                           ENG=Specifies that the unit price on the Service Line will be displayed including VAT.];
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 205 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the VAT business posting group of the bill-to customer.;
                           ENG=Specifies the code for the VAT business posting group of the bill-to customer.];
                SourceExpr="VAT Bus. Posting Group" }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping;
                           ENG=Shipping] }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the customer' s address where you will ship the service.;
                           ENG=Specifies the code for the customer' s address where you will ship the service.];
                SourceExpr="Ship-to Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             ShiptoCodeOnAfterValidate;
                           END;
                            }

    { 51  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the customer to whom you will ship the service on the document.;
                           ENG=Specifies the name of the customer to whom you will ship the service on the document.];
                SourceExpr="Ship-to Name" }

    { 133 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the address where the service on the document should be shipped to.;
                           ENG=Specifies the address where the service on the document should be shipped to.];
                SourceExpr="Ship-to Address" }

    { 141 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an additional line of the address.;
                           ENG=Specifies an additional line of the address.];
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 1040008;2;Field     ;
                SourceExpr="Ship-to City" }

    { 1040010;2;Field     ;
                SourceExpr="Ship-to County" }

    { 147 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the postal code of the address.;
                           ENG=Specifies the postcode of the address.];
                SourceExpr="Ship-to Post Code";
                Importance=Promoted }

    { 157 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the contact person at the place where the service should be shipped to.;
                           ENG=Specifies the name of the contact person at the place where the service should be shipped to.];
                SourceExpr="Ship-to Contact";
                Importance=Promoted }

    { 159 ;2   ;Field     ;
                CaptionML=[ENU=Ship-to Phone;
                           ENG=Ship-to Phone];
                ToolTipML=[ENU=Specifies the phone number of the address where the service items in the order are located.;
                           ENG=Specifies the phone number of the address where the service items in the order are located.];
                SourceExpr="Ship-to Phone" }

    { 123 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an additional phone number of the address.;
                           ENG=Specifies an additional phone number of the address.];
                SourceExpr="Ship-to Phone 2";
                Importance=Additional }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the email address of the customer to whom the service will be shipped.;
                           ENG=Specifies the email address of the customer to whom the service will be shipped.];
                SourceExpr="Ship-to E-Mail" }

    { 207 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the location (for example, warehouse or distribution center) of the items specified on the service item lines.;
                           ENG=Specifies the code of the location (for example, warehouse or distribution centre) of the items specified on the service item lines.];
                SourceExpr="Location Code" }

    { 161 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the customer will accept a partial shipment of the order.;
                           ENG=Specifies information about whether the customer will accept a partial shipment of the order.];
                SourceExpr="Shipping Advice" }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the shipment method of the service order.;
                           ENG=Specifies the code for the shipment method of the service order.];
                SourceExpr="Shipment Method Code" }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that represents a shipping agent.;
                           ENG=Specifies the code that represents a shipping agent.];
                SourceExpr="Shipping Agent Code" }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that represents a shipping agent service.;
                           ENG=Specifies the code that represents a shipping agent service.];
                SourceExpr="Shipping Agent Service Code" }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the time required, from when items on the order are shipped, to when they are delivered to the customer.;
                           ENG=Specifies the time required, from when items on the order are shipped, to when they are delivered to the customer.];
                SourceExpr="Shipping Time" }

    { 1901902601;1;Group  ;
                CaptionML=[ENU=Details;
                           ENG=Details] }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the response time warning status for the order.;
                           ENG=Specifies the response time warning status for the order.];
                SourceExpr="Warning Status";
                Importance=Promoted }

    { 78  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that service lines for items and resources must be linked to a service item line.;
                           ENG=Specifies that service lines for items and resources must be linked to a service item line.];
                SourceExpr="Link Service to Service Item" }

    { 124 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of hours allocated to the items in this service order.;
                           ENG=Specifies the number of hours allocated to the items in this service order.];
                SourceExpr="Allocated Hours" }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of resource allocations to service items in this order.;
                           ENG=Specifies the number of resource allocations to service items in this order.];
                SourceExpr="No. of Allocations" }

    { 71  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of service items in this order that are not allocated to resources.;
                           ENG=Specifies the number of service items in this order that are not allocated to resources.];
                SourceExpr="No. of Unallocated Items" }

    { 110 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service zone code of the customer's ship-to address in the service order.;
                           ENG=Specifies the service zone code of the customer's ship-to address in the service order.];
                SourceExpr="Service Zone Code" }

    { 68  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the service order was created.;
                           ENG=Specifies the date when the service order was created.];
                SourceExpr="Order Date";
                OnValidate=BEGIN
                             OrderDateOnAfterValidate;
                           END;
                            }

    { 85  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the time when the service order was created.;
                           ENG=Specifies the time when the service order was created.];
                SourceExpr="Order Time";
                OnValidate=BEGIN
                             OrderTimeOnAfterValidate;
                           END;
                            }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when service on the order is expected to be finished.;
                           ENG=Specifies the date when service on the order is expected to be finished.];
                SourceExpr="Expected Finishing Date" }

    { 53  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the starting date of the service, that is, the date when the order status changes from Pending, to In Process for the first time.;
                           ENG=Specifies the starting date of the service, that is, the date when the order status changes from Pending, to In Process for the first time.];
                SourceExpr="Starting Date";
                Importance=Promoted }

    { 55  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the starting time of the service, that is, the time when the order status changes from Pending, to In Process for the first time.;
                           ENG=Specifies the starting time of the service, that is, the time when the order status changes from Pending, to In Process for the first time.];
                SourceExpr="Starting Time" }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of hours from order creation, to when the service order status changes from Pending, to In Process.;
                           ENG=Specifies the number of hours from order creation, to when the service order status changes from Pending, to In Process.];
                SourceExpr="Actual Response Time (Hours)" }

    { 182 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the finishing date of the service, that is, the date when the Status field changes to Finished.;
                           ENG=Specifies the finishing date of the service, that is, the date when the Status field changes to Finished.];
                SourceExpr="Finishing Date" }

    { 184 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the finishing time of the service, that is, the time when the Status field changes to Finished.;
                           ENG=Specifies the finishing time of the service, that is, the time when the Status field changes to Finished.];
                SourceExpr="Finishing Time";
                OnValidate=BEGIN
                             FinishingTimeOnAfterValidate;
                           END;
                            }

    { 77  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total time in hours that the service specified in the order has taken.;
                           ENG=Specifies the total time in hours that the service specified in the order has taken.];
                SourceExpr="Service Time (Hours)" }

    { 1903873101;1;Group  ;
                CaptionML=[ENU=" Foreign Trade";
                           ENG=" Foreign Trade"] }

    { 179 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a check box in this field if the service order is part of an EU 3-party trade transaction.;
                           ENG=Specifies a check box in this field if the service order is part of an EU 3-party trade transaction.];
                SourceExpr="EU 3-Party Trade" }

    { 186 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the transaction type assigned to the service document.;
                           ENG=Specifies the code for the transaction nature code assigned to the service document.];
                SourceExpr="Transaction Type" }

    { 189 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the transaction specification code used on the service document.;
                           ENG=Specifies the transaction specification code used on the service document.];
                SourceExpr="Transaction Specification" }

    { 187 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the transport method to be used for shipment.;
                           ENG=Specifies the code for the transport method to be used for shipment.];
                SourceExpr="Transport Method" }

    { 188 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the port of exit through which you ship the service out of your country/region.;
                           ENG=Specifies the code of the port of exit through which you ship the service out of your country/region.];
                SourceExpr="Exit Point" }

    { 192 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the area where the customer company is located.;
                           ENG=Specifies the code for the area where the customer company is located.];
                SourceExpr=Area }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1902018507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=FALSE;
                PartType=Page }

    { 1900316107;1;Part   ;
                SubPageLink=No.=FIELD(Customer No.);
                PagePartID=Page9084;
                Visible=FALSE;
                PartType=Page }

    { 1907829707;1;Part   ;
                SubPageLink=No.=FIELD(Customer No.);
                PagePartID=Page9085;
                Visible=TRUE;
                PartType=Page }

    { 1902613707;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9086;
                Visible=FALSE;
                PartType=Page }

    { 1906530507;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9088;
                ProviderID=46;
                Visible=TRUE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServHeader@1004 : Record 5900;
      ServOrderMgt@1008 : Codeunit 5900;
      ServLogMgt@1009 : Codeunit 5906;
      UserMgt@1013 : Codeunit 5700;
      ChangeExchangeRate@1002 : Page 511;
      DocumentIsPosted@1000 : Boolean;
      OpenPostedServiceOrderQst@1001 : TextConst 'ENU=The order has been posted and moved to the Posted Service Invoices window.\\Do you want to open the posted invoice?;ENG=The order has been posted and moved to the Posted Service Invoices window.\\Do you want to open the posted invoice?';

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      IF GETFILTER("Customer No.") = xRec."Customer No." THEN
        IF "Customer No." <> xRec."Customer No." THEN
          SETRANGE("Customer No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MaxLaborUnitPriceOnAfterValida@19060830();
    BEGIN
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE ShiptoCodeOnAfterValidate@19065015();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderTimeOnAfterValidate@19056033();
    BEGIN
      UpdateResponseDateTime;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderDateOnAfterValidate@19077772();
    BEGIN
      UpdateResponseDateTime;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FinishingTimeOnAfterValidate@19010371();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17();
    VAR
      OrderServiceHeader@1003 : Record 5900;
      ServiceInvoiceHeader@1000 : Record 5992;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      IF NOT OrderServiceHeader.GET("Document Type","No.") THEN BEGIN
        ServiceInvoiceHeader.SETRANGE("No.",ServHeader."Last Posting No.");
        IF ServiceInvoiceHeader.FINDFIRST THEN
          IF InstructionMgt.ShowConfirm(OpenPostedServiceOrderQst,InstructionMgt.ShowPostedConfirmationMessageCode) THEN
            PAGE.RUN(PAGE::"Posted Service Invoice",ServiceInvoiceHeader);
      END;
    END;

    BEGIN
    END.
  }
}

