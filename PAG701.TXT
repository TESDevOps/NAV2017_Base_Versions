OBJECT Page 701 Error Messages Part
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Error Messages;
               ENG=Error Messages];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table700;
    SourceTableView=SORTING(Message Type,ID)
                    ORDER(Ascending);
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=BEGIN
                       SetStyle;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           EnableActions;
                         END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;Action    ;
                      Name=OpenRelatedRecord;
                      CaptionML=[ENU=Open Related Record;
                                 ENG=Open Related Record];
                      ToolTipML=[ENU=Open the record that is associated with this error message.;
                                 ENG=Open the record that is associated with this error message.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=EnableOpenRelatedEntity;
                      Image=View;
                      OnAction=BEGIN
                                 PageManagement.PageRun("Record ID");
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ViewDetails;
                      CaptionML=[ENU=View Details;
                                 ENG=View Details];
                      ToolTipML=[ENU=Show more information about this error message.;
                                 ENG=Show more information about this error message.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewDetails;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"Error Messages",Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 5   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the message is an error, a warning, or information.;
                           ENG=Specifies if the message is an error, a warning, or information.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Message Type" }

    { 6   ;2   ;Field     ;
                SourceExpr="Table Name";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the field where the error occurred.;
                           ENG=Specifies the field where the error occurred.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Field Name" }

    { 2   ;2   ;Field     ;
                DrillDown=Yes;
                ToolTipML=[ENU=Specifies the message.;
                           ENG=Specifies the message.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Enabled=EnableOpenRelatedEntity;
                StyleExpr=StyleText;
                OnDrillDown=BEGIN
                              PageManagement.PageRun("Record ID");
                            END;
                             }

  }
  CODE
  {
    VAR
      PageManagement@1000 : Codeunit 700;
      RecordIDToHighlight@1001 : RecordID;
      StyleText@1002 : Text[20] INDATASET;
      EnableOpenRelatedEntity@1003 : Boolean;

    PROCEDURE SetRecords@1(VAR TempErrorMessage@1000 : TEMPORARY Record 700);
    BEGIN
      RESET;
      DELETEALL;

      TempErrorMessage.RESET;
      IF TempErrorMessage.FINDFIRST THEN
        COPY(TempErrorMessage,TRUE);
    END;

    PROCEDURE GetStyleOfRecord@2(RecordVariant@1000 : Variant;VAR StyleExpression@1002 : Text);
    VAR
      RecordRef@1001 : RecordRef;
    BEGIN
      IF NOT RecordVariant.ISRECORD THEN
        EXIT;

      RecordRef.GETTABLE(RecordVariant);
      RecordIDToHighlight := RecordRef.RECORDID;
      CurrPage.ACTIVATE(TRUE);

      IF HasErrorMessagesRelatedTo(RecordVariant) THEN
        StyleExpression := 'Attention'
      ELSE
        StyleExpression := 'None';
    END;

    LOCAL PROCEDURE SetStyle@4();
    VAR
      RecID@1001 : RecordID;
    BEGIN
      RecID := "Record ID";

      CASE "Message Type" OF
        "Message Type"::Error:
          IF RecID = RecordIDToHighlight THEN
            StyleText := 'Unfavorable'
          ELSE
            StyleText := 'Attention';
        "Message Type"::Warning,
        "Message Type"::Information:
          IF RecID = RecordIDToHighlight THEN
            StyleText := 'Strong'
          ELSE
            StyleText := 'None';
      END;
    END;

    LOCAL PROCEDURE EnableActions@3();
    VAR
      RecID@1000 : RecordID;
    BEGIN
      RecID := "Record ID";
      EnableOpenRelatedEntity := RecID.TABLENO <> 0;
    END;

    BEGIN
    END.
  }
}

