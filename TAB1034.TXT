OBJECT Table 1034 Job Planning Line - Calendar
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               UID := CREATEGUID;
             END;

    OnModify=BEGIN
               Sequence += 1;
             END;

    CaptionML=[ENU=Job Planning Line - Calendar;
               ENG=Job Planning Line - Calendar];
  }
  FIELDS
  {
    { 1   ;   ;Job No.             ;Code20        ;TableRelation="Job Planning Line"."Job No.";
                                                   CaptionML=[ENU=Job No.;
                                                              ENG=Job No.] }
    { 2   ;   ;Job Task No.        ;Code20        ;TableRelation="Job Planning Line"."Job Task No.";
                                                   CaptionML=[ENU=Job Task No.;
                                                              ENG=Job Task No.] }
    { 3   ;   ;Planning Line No.   ;Integer       ;TableRelation="Job Planning Line"."Line No.";
                                                   CaptionML=[ENU=Planning Line No.;
                                                              ENG=Planning Line No.] }
    { 4   ;   ;Resource No.        ;Code20        ;TableRelation=Resource.No.;
                                                   CaptionML=[ENU=Resource No.;
                                                              ENG=Resource No.] }
    { 6   ;   ;Planning Date       ;Date          ;CaptionML=[ENU=Planning Date;
                                                              ENG=Planning Date] }
    { 7   ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ENG=Quantity] }
    { 8   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 9   ;   ;UID                 ;GUID          ;CaptionML=[ENU=UID;
                                                              ENG=UID] }
    { 10  ;   ;Sequence            ;Integer       ;InitValue=1;
                                                   CaptionML=[ENU=Sequence;
                                                              ENG=Sequence] }
  }
  KEYS
  {
    {    ;Job No.,Job Task No.,Planning Line No.  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE HasBeenSent@1(JobPlanningLine@1000 : Record 1003) : Boolean;
    BEGIN
      EXIT(GET(JobPlanningLine."Job No.",JobPlanningLine."Job Task No.",JobPlanningLine."Line No."));
    END;

    PROCEDURE InsertOrUpdate@5(JobPlanningLine@1000 : Record 1003);
    BEGIN
      IF NOT HasBeenSent(JobPlanningLine) THEN BEGIN
        INIT;
        "Job No." := JobPlanningLine."Job No.";
        "Job Task No." := JobPlanningLine."Job Task No.";
        "Planning Line No." := JobPlanningLine."Line No.";
        "Resource No." := JobPlanningLine."No.";
        Quantity := JobPlanningLine.Quantity;
        "Planning Date" := JobPlanningLine."Planning Date";
        Description := JobPlanningLine.Description;
        INSERT(TRUE);
      END ELSE BEGIN
        Quantity := JobPlanningLine.Quantity;
        "Planning Date" := JobPlanningLine."Planning Date";
        Description := JobPlanningLine.Description;
        MODIFY(TRUE);
      END;
    END;

    PROCEDURE ShouldSendCancellation@6(JobPlanningLine@1000 : Record 1003) : Boolean;
    VAR
      LocalJobPlanningLine@1001 : Record 1003;
    BEGIN
      IF NOT LocalJobPlanningLine.GET(JobPlanningLine."Job No.",JobPlanningLine."Job Task No.",JobPlanningLine."Line No.") THEN
        EXIT(TRUE);
      IF HasBeenSent(JobPlanningLine) THEN
        EXIT(JobPlanningLine."No." <> "Resource No.");
    END;

    PROCEDURE ShouldSendRequest@3(JobPlanningLine@1000 : Record 1003) ShouldSend : Boolean;
    VAR
      LocalJobPlanningLine@1001 : Record 1003;
    BEGIN
      ShouldSend := TRUE;
      IF NOT LocalJobPlanningLine.GET(JobPlanningLine."Job No.",JobPlanningLine."Job Task No.",JobPlanningLine."Line No.") THEN
        EXIT(FALSE);
      IF HasBeenSent(JobPlanningLine) THEN
        ShouldSend :=
          ("Resource No." <> JobPlanningLine."No.") OR
          ("Planning Date" <> JobPlanningLine."Planning Date") OR
          (Quantity <> JobPlanningLine.Quantity) OR
          (Description <> JobPlanningLine.Description);
    END;

    BEGIN
    END.
  }
}

