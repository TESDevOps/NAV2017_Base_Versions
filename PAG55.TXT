OBJECT Page 55 Purch. Invoice Subform
{
  OBJECT-PROPERTIES
  {
    Date=30/06/17;
    Time=12:00:00;
    Version List=NAVW110.00.00.17501,NAVGB10.00.00.17501;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ENG=Lines];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table39;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             PurchasesPayablesSetup.GET;
             Currency.InitRoundingPrecision;
           END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  IF ApplicationAreaSetup.IsFoundationEnabled THEN
                    Type := Type::Item
                  ELSE
                    InitType;
                  CLEAR(ShortcutDimCode);
                END;

    OnInsertRecord=BEGIN
                     IF ApplicationAreaSetup.IsFoundationEnabled THEN
                       Type := Type::Item;
                   END;

    OnDeleteRecord=VAR
                     ReservePurchLine@1000 : Codeunit 99000834;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReservePurchLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReservePurchLine.DeleteLine(Rec);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           CalculateTotals;
                           UpdateEditableOnRow;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 1900205804;2 ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=E&xplode BOM;
                                 ENG=E&xplode BOM];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1903099004;2 ;Action    ;
                      Name=InsertExtTexts;
                      AccessByPermission=TableData 279=R;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 ENG=Insert &Ext. Texts];
                      ToolTipML=[ENU=Insert the extended description that is set up.;
                                 ENG=Insert the extended description that is set up.];
                      ApplicationArea=#Suite;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1901652204;2 ;Action    ;
                      Name=GetReceiptLines;
                      AccessByPermission=TableData 120=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Get Receipt Lines;
                                 ENG=&Get Receipt Lines];
                      Image=Receipt;
                      OnAction=BEGIN
                                 GetReceipt;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 1904945204;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ENG=Item Availability by];
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1901092104;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1905427604;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1907075804;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 3       ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ENG=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1904974904;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1901431304;2 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      Name=ItemChargeAssignment;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=[ENU=Item Charge &Assignment;
                                 ENG=Item Charge &Assignment];
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ShowItemChargeAssgnt;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ENG=Item &Tracking Lines];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=[ENU=Deferral Schedule;
                                 ENG=Deferral Schedule];
                      ToolTipML=[ENU=View or edit the deferral schedule that governs how expenses incurred with this purchase document is deferred to different accounting periods when the document is posted.;
                                 ENG=View or edit the deferral schedule that governs how expenses incurred with this purchase document is deferred to different accounting periods when the document is posted.];
                      ApplicationArea=#Suite;
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=VAR
                                 PurchHeader@1000 : Record 38;
                               BEGIN
                                 PurchHeader.GET("Document Type","Document No.");
                                 ShowDeferrals(PurchHeader."Posting Date",PurchHeader."Currency Code");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line type.;
                           ENG=Specifies the line type.];
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of a general ledger account, an item, an additional cost or a fixed asset, depending on what you selected in the Type field.;
                           ENG=Specifies the number of a general ledger account, an item, an additional cost or a fixed asset, depending on what you selected in the Type field.];
                ApplicationArea=#All;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 72  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.;
                           ENG=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                           NoOnAfterValidate;
                         END;
                          }

    { 186 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the IC partner code of the partner to whom you want to distribute the cost of the line.;
                           ENG=Specifies the IC partner code of the partner to whom you want to distribute the cost of the line.];
                SourceExpr="IC Partner Code";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.;
                           ENG=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.];
                SourceExpr="IC Partner Ref. Type";
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=If the line is being sent to one of your intercompany partners, this field is used together with the IC Partner Ref. Type field to indicate the item or account in your partner's company that corresponds to the line.;
                           ENG=If the line is being sent to one of your intercompany partners, this field is used together with the IC Partner Ref. Type field to indicate the item or account in your partner's company that corresponds to the line.];
                SourceExpr="IC Partner Reference";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a variant code for the item.;
                           ENG=Specifies a variant code for the item.];
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that this item is a nonstock item.;
                           ENG=Specifies that this item is a nonstock item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 10410090;2;Field    ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the VAT product posting group of the item or general ledger account on this line.;
                           ENG=Specifies the code for the VAT product posting group of the item or general ledger account on this line.];
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Description/Comment;
                           ENG=Description/Comment];
                ToolTipML=[ENU=Specifies a description of the entry, which is based on the contents of the Type and No. fields.;
                           ENG=Specifies a description of the entry, which is based on the contents of the Type and No. fields.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                OnValidate=BEGIN
                             UpdateEditableOnRow;

                             IF "No." = xRec."No." THEN
                               EXIT;

                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TRUE }

    { 78  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code that explains why the item is returned.;
                           ENG=Specifies a code that explains why the item is returned.];
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the location where the items on the line will be located.;
                           ENG=Specifies the code for the location where the items on the line will be located.];
                SourceExpr="Location Code" }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a bin code for the item.;
                           ENG=Specifies a bin code for the item.];
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of units of the item that will be specified on the line.;
                           ENG=Specifies the number of units of the item that will be specified on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=Quantity;
                Enabled=NOT RowIsText;
                Editable=NOT RowIsText;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory="No." <> '' }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure code that is valid for the purchase line.;
                           ENG=Specifies the unit of measure code that is valid for the purchase line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code";
                Enabled=UnitofMeasureCodeIsChangeable;
                Editable=UnitofMeasureCodeIsChangeable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the unit of measure for the item, such as 1 bottle or 1 piece.;
                           ENG=Specifies the name of the unit of measure for the item, such as 1 bottle or 1 piece.];
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the direct unit cost of the item on the line.;
                           ENG=Specifies the direct unit cost of the item on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Direct Unit Cost";
                Enabled=NOT RowIsText;
                Editable=NOT RowIsText;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory="No." <> '' }

    { 68  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item's indirect cost percentage.;
                           ENG=Specifies the item's indirect cost percentage.];
                SourceExpr="Indirect Cost %";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit cost of the item on the line.;
                           ENG=Specifies the unit cost of the item on the line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 66  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price for one unit of the item.;
                           ENG=Specifies the price for one unit of the item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Price (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net amount (before subtracting the invoice discount amount) that must be paid for the items on the line.;
                           ENG=Specifies the net amount (before subtracting the invoice discount amount) that must be paid for the items on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                Enabled=NOT RowIsText;
                Editable=NOT RowIsText;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line discount percentage that is valid for the item on the line.;
                           ENG=Specifies the line discount percentage that is valid for the item on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                Enabled=NOT RowIsText;
                Editable=NOT RowIsText;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the line discount that will be granted on the purchase line.;
                           ENG=Specifies the amount of the line discount that will be granted on the purchase line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the invoice line is included when the invoice discount is calculated.;
                           ENG=Specifies whether the invoice line is included when the invoice discount is calculated.];
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice discount amount for the line.;
                           ENG=Specifies the invoice discount amount for the line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that you can assign item charges to this line.;
                           ENG=Specifies that you can assign item charges to this line.];
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of the item charge that will be assigned when you post this line.;
                           ENG=Specifies the quantity of the item charge that will be assigned when you post this line.];
                BlankZero=Yes;
                SourceExpr="Qty. to Assign";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how much of the item charge that has been assigned.;
                           ENG=Specifies how much of the item charge that has been assigned.];
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=If you fill in this field and the Job Task No. field, then a job ledger entry will be posted together with the purchase order line.;
                           ENG=If you fill in this field and the Job Task No. field, then a job ledger entry will be posted together with the purchase order line.];
                ApplicationArea=#Jobs;
                SourceExpr="Job No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 90  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the job task that corresponds to the purchase document (invoice or credit memo).;
                           ENG=Specifies the number of the job task that corresponds to the purchase document (invoice or credit memo).];
                ApplicationArea=#Jobs;
                SourceExpr="Job Task No.";
                Visible=FALSE }

    { 86  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a Job Planning Line together with the posting of a job ledger entry.;
                           ENG=Specifies a Job Planning Line together with the posting of a job ledger entry.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Type";
                Visible=FALSE }

    { 92  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.;
                           ENG=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Unit Price";
                Visible=FALSE }

    { 104 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net amount of the line that the purchase line applies to.;
                           ENG=Specifies the net amount of the line that the purchase line applies to.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Amount";
                Visible=FALSE }

    { 108 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the discount that the purchase line applies to.;
                           ENG=Specifies the amount of the discount that the purchase line applies to.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Discount Amount";
                Visible=FALSE }

    { 106 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line discount percent that applies to the item or general ledger expense.;
                           ENG=Specifies the line discount percent that applies to the item or general ledger expense.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Discount %";
                Visible=FALSE }

    { 94  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the gross amount of the line that the purchase line applies to.;
                           ENG=Specifies the gross amount of the line that the purchase line applies to.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Total Price";
                Visible=FALSE }

    { 96  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.;
                           ENG=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Unit Price (LCY)";
                Visible=FALSE }

    { 98  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the gross amount of the line, in the local currency.;
                           ENG=Specifies the gross amount of the line, in the local currency.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Total Price (LCY)";
                Visible=FALSE }

    { 100 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net amount of the line that the purchase line applies to.;
                           ENG=Specifies the net amount of the line that the purchase line applies to.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Amount (LCY)";
                Visible=FALSE }

    { 102 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the discount that the purchase line applies to.;
                           ENG=Specifies the amount of the discount that the purchase line applies to.];
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Disc. Amount (LCY)";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the production order that the purchase order was created for.;
                           ENG=Specifies the number of the production order that the purchase order was created for.];
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 64  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document number of the blanket order from which this purchase line originates.;
                           ENG=Specifies the document number of the blanket order from which this purchase line originates.];
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line number of the blanket order line from which this purchase line originates.;
                           ENG=Specifies the line number of the blanket order line from which this purchase line originates.];
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an insurance number if you have selected the Acquisition Cost option in the FA Posting Type field.;
                           ENG=Specifies an insurance number if you have selected the Acquisition Cost option in the FA Posting Type field.];
                SourceExpr="Insurance No.";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=You can use this field if you have selected Fixed Asset in the Type field for this line.;
                           ENG=You can use this field if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="Budgeted FA No.";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the FA posting type if you have selected Fixed Asset in the Type field for this line.;
                           ENG=Specifies the FA posting type if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="FA Posting Type";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the depreciation book to which the line will be posted if you have selected Fixed Asset in the Type field for this line.;
                           ENG=Specifies the code for the depreciation book to which the line will be posted if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="Depreciation Book Code";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=You can use this field if you have selected Fixed Asset in the Type field for this line.;
                           ENG=You can use this field if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="Depr. until FA Posting Date";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=This field is relevant when you post an additional acquisition cost and a possible salvage value to an already acquired asset.;
                           ENG=This field is relevant when you post an additional acquisition cost and a possible salvage value to an already acquired asset.];
                SourceExpr="Depr. Acquisition Cost";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=You can use this field if you have selected Fixed Asset in the Type field for this line.;
                           ENG=You can use this field if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="Duplicate in Depreciation Book";
                Visible=FALSE }

    { 76  ;2   ;Field     ;
                ToolTipML=[ENU=You can use this field if you have selected Fixed Asset in the Type field for this line.;
                           ENG=You can use this field if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="Use Duplication List";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item ledger entry number the line should be applied to.;
                           ENG=Specifies the item ledger entry number the line should be applied to.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the deferral template that governs how expenses paid with this purchase document are deferred to the different accounting periods when the expenses were incurred.;
                           ENG=Specifies the deferral template that governs how expenses paid with this purchase document are deferred to the different accounting periods when the expenses were incurred.];
                ApplicationArea=#Suite;
                SourceExpr="Deferral Code";
                TableRelation="Deferral Template"."Deferral Code";
                Visible=FALSE;
                Enabled=(Type <> Type::"Fixed Asset") AND (Type <> Type::" ") }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1.;
                           ENG=Specifies the code for Shortcut Dimension 1.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2.;
                           ENG=Specifies the code for Shortcut Dimension 2.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document number.;
                           ENG=Specifies the document number.];
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line's number.;
                           ENG=Specifies the line's number.];
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 39  ;1   ;Group     ;
                GroupType=Group }

    { 33  ;2   ;Group     ;
                GroupType=Group }

    { 25  ;3   ;Field     ;
                Name=AmountBeforeDiscount;
                CaptionML=[ENU=Subtotal Excl. VAT;
                           ENG=Subtotal Excl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document.;
                           ENG=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchaseLine."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalLineAmountWithVATAndCurrencyCaption(Currency.Code,TotalPurchaseHeader."Prices Including VAT");
                Editable=FALSE }

    { 31  ;3   ;Field     ;
                Name=InvoiceDiscountAmount;
                CaptionML=[ENU=Invoice Discount Amount;
                           ENG=Invoice Discount Amount];
                ToolTipML=[ENU=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.;
                           ENG=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=InvoiceDiscountAmount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetInvoiceDiscAmountWithVATAndCurrencyCaption(FIELDCAPTION("Inv. Discount Amount"),Currency.Code);
                Editable=InvDiscAmountEditable;
                OnValidate=BEGIN
                             ValidateInvoiceDiscountAmount;
                           END;
                            }

    { 29  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=[ENU=Invoice Discount %;
                           ENG=Invoice Discount %];
                ToolTipML=[ENU=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.;
                           ENG=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:2;
                SourceExpr=InvoiceDiscountPct;
                Editable=InvDiscAmountEditable;
                OnValidate=BEGIN
                             InvoiceDiscountAmount := ROUND(TotalPurchaseLine."Line Amount" * InvoiceDiscountPct / 100,Currency."Amount Rounding Precision");
                             ValidateInvoiceDiscountAmount;
                           END;
                            }

    { 15  ;2   ;Group     ;
                GroupType=Group }

    { 13  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=[ENU=Total Amount Excl. VAT;
                           ENG=Total Amount Excl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                           ENG=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchaseLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(Currency.Code);
                Editable=FALSE }

    { 11  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=[ENU=Total VAT;
                           ENG=Total VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                           ENG=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalVATCaption(Currency.Code);
                Editable=FALSE }

    { 9   ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=[ENU=Total Amount Incl. VAT;
                           ENG=Total Amount Incl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                           ENG=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchaseLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(Currency.Code);
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Currency@1026 : Record 4;
      PurchasesPayablesSetup@1013 : Record 312;
      TotalPurchaseHeader@1008 : Record 38;
      TotalPurchaseLine@1007 : Record 39;
      ApplicationAreaSetup@1000 : Record 9178;
      TransferExtendedText@1002 : Codeunit 378;
      ItemAvailFormsMgt@1006 : Codeunit 353;
      PurchCalcDiscByType@1010 : Codeunit 66;
      DocumentTotals@1009 : Codeunit 57;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      VATAmount@1017 : Decimal;
      InvDiscAmountEditable@1016 : Boolean;
      RowIsText@1019 : Boolean;
      UnitofMeasureCodeIsChangeable@1001 : Boolean;
      InvoiceDiscountAmount@1020 : Decimal;
      InvoiceDiscountPct@1014 : Decimal;

    PROCEDURE ApproveCalcInvDisc@7();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE ValidateInvoiceDiscountAmount@22();
    VAR
      PurchaseHeader@1000 : Record 38;
    BEGIN
      PurchaseHeader.GET("Document Type","Document No.");
      PurchCalcDiscByType.ApplyInvDiscBasedOnAmt(InvoiceDiscountAmount,PurchaseHeader);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Calc.Discount",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Explode BOM",Rec);
    END;

    LOCAL PROCEDURE GetReceipt@4();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Get Receipt",Rec);
    END;

    LOCAL PROCEDURE InsertExtendedText@6(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.PurchCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertPurchExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      UpdateEditableOnRow;
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@8();
    BEGIN
      CurrPage.SAVERECORD;

      DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);

      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ValidateSaveShortcutDimCode@9(FieldNumber@1001 : Integer;VAR ShortcutDimCode@1000 : Code[20]);
    BEGIN
      ValidateShortcutDimCode(FieldNumber,ShortcutDimCode);
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE UpdateEditableOnRow@14();
    VAR
      PurchaseLine@1000 : Record 39;
    BEGIN
      RowIsText := ("No." = '') AND (Description <> '');
      IF NOT RowIsText THEN
        UnitofMeasureCodeIsChangeable := CanEditUnitOfMeasureCode
      ELSE
        UnitofMeasureCodeIsChangeable := FALSE;

      IF TotalPurchaseHeader."No." <> '' THEN BEGIN
        PurchaseLine.SETRANGE("Document No.",TotalPurchaseHeader."No.");
        PurchaseLine.SETRANGE("Document Type",TotalPurchaseHeader."Document Type");
        IF NOT PurchaseLine.ISEMPTY THEN
          InvDiscAmountEditable :=
            PurchCalcDiscByType.InvoiceDiscIsAllowed(TotalPurchaseHeader."Invoice Disc. Code") AND CurrPage.EDITABLE;
      END;
    END;

    LOCAL PROCEDURE GetTotalPurchHeader@13();
    BEGIN
      IF NOT TotalPurchaseHeader.GET("Document Type","Document No.") THEN
        CLEAR(TotalPurchaseHeader);
      IF Currency.Code <> TotalPurchaseHeader."Currency Code" THEN
        IF NOT Currency.GET(TotalPurchaseHeader."Currency Code") THEN BEGIN
          CLEAR(Currency);
          Currency.InitRoundingPrecision;
        END;
    END;

    LOCAL PROCEDURE CalculateTotals@25();
    BEGIN
      GetTotalPurchHeader;
      TotalPurchaseHeader.CALCFIELDS("Recalculate Invoice Disc.");

      IF PurchasesPayablesSetup."Calc. Inv. Discount" AND ("Document No." <> '') AND
         (TotalPurchaseHeader."Vendor Posting Group" <> '') AND TotalPurchaseHeader."Recalculate Invoice Disc."
      THEN
        IF FIND THEN
          CalcInvDisc;

      DocumentTotals.CalculatePurchaseTotals(TotalPurchaseLine,VATAmount,Rec);
      InvoiceDiscountAmount := TotalPurchaseLine."Inv. Discount Amount";
      InvoiceDiscountPct := PurchCalcDiscByType.GetVendInvoiceDiscountPct(Rec);
    END;

    BEGIN
    END.
  }
}

