OBJECT Page 5780 Whse. Pick Subform
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ENG=Lines];
    MultipleNewLines=Yes;
    InsertAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5767;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Activity Type=CONST(Pick));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             BinCodeEditable := TRUE;
             ZoneCodeEditable := TRUE;
           END;

    OnNewRecord=BEGIN
                  "Activity Type" := xRec."Activity Type";
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.UPDATE(FALSE);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           EnableZoneBin;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 1900206104;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=[ENU=&Split Line;
                                 ENG=&Split Line];
                      Image=Split;
                      OnAction=VAR
                                 WhseActivLine@1001 : Record 5767;
                               BEGIN
                                 WhseActivLine.COPY(Rec);
                                 SplitLine(WhseActivLine);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1900724304;2 ;Action    ;
                      Name=ChangeUnitOfMeasure;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Change Unit Of Measure;
                                 ENG=&Change Unit Of Measure];
                      Image=UnitConversions;
                      OnAction=BEGIN
                                 ChangeUOM;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 1900724404;2 ;Action    ;
                      CaptionML=[ENU=Source &Document Line;
                                 ENG=Source &Document Line];
                      Image=SourceDocLine;
                      OnAction=BEGIN
                                 ShowSourceLine;
                               END;
                                }
      { 1901652504;2 ;Action    ;
                      CaptionML=[ENU=Whse. Document Line;
                                 ENG=Whse. Document Line];
                      Image=Line;
                      OnAction=BEGIN
                                 ShowWhseLine;
                               END;
                                }
      { 1900545304;2 ;Action    ;
                      CaptionML=[ENU=Bin Contents List;
                                 ENG=Bin Contents List];
                      Image=BinContent;
                      OnAction=BEGIN
                                 ShowBinContents;
                               END;
                                }
      { 1903867104;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ENG=Item Availability by];
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 1901313504;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 1900295904;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 1901742304;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByLocation);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the action type for the warehouse activity line.;
                           ENG=Specifies the action type for the warehouse activity line.];
                SourceExpr="Action Type";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document that the line relates to, such as a sales order.;
                           ENG=Specifies the type of document that the line relates to, such as a sales order.];
                OptionCaptionML=[ENU=,Sales Order,,,Sales Return Order,Purchase Order,,,Purchase Return Order,,Outbound Transfer,Prod. Consumption,,,,,,,Service Order,,Assembly Consumption;
                                 ENG=,Sales Order,,,Sales Return Order,Purchase Order,,,Purchase Return Order,,Outbound Transfer,Prod. Consumption,,,,,,,Service Order,,Assembly Consumption];
                BlankZero=Yes;
                SourceExpr="Source Document" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the source number of the document from which the entry originates.;
                           ENG=Specifies the source number of the document from which the entry originates.];
                SourceExpr="Source No." }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item number of the item to be handled, such as picked or put away.;
                           ENG=Specifies the item number of the item to be handled, such as picked or put away.];
                SourceExpr="Item No." }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant code of the item to be handled.;
                           ENG=Specifies the variant code of the item to be handled.];
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the item on the line.;
                           ENG=Specifies a description of the item on the line.];
                SourceExpr=Description }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the serial number to handle in the document.;
                           ENG=Specifies the serial number to handle in the document.];
                SourceExpr="Serial No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             SerialNoOnAfterValidate;
                           END;
                            }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the serial number is blocked, on its information card.;
                           ENG=Specifies the serial number is blocked, on its information card.];
                SourceExpr="Serial No. Blocked";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the lot number to handle in the document.;
                           ENG=Specifies the lot number to handle in the document.];
                SourceExpr="Lot No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             LotNoOnAfterValidate;
                           END;
                            }

    { 70  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the lot number is blocked, on its information card.;
                           ENG=Specifies the lot number is blocked, on its information card.];
                SourceExpr="Lot No. Blocked";
                Visible=FALSE }

    { 1106000000;2;Field  ;
                ToolTipML=[ENU=Specifies the expiration date of the serial/lot numbers if you are putting items away.;
                           ENG=Specifies the expiration date of the serial/lot numbers if you are putting items away.];
                SourceExpr="Expiration Date";
                Visible=FALSE;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the location where the activity occurs.;
                           ENG=Specifies the code for the location where the activity occurs.];
                SourceExpr="Location Code";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the zone code where the bin on this line is located.;
                           ENG=Specifies the zone code where the bin on this line is located.];
                SourceExpr="Zone Code";
                Visible=FALSE;
                Editable=ZoneCodeEditable }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bin where items on the line are handled.;
                           ENG=Specifies the bin where items on the line are handled.];
                SourceExpr="Bin Code";
                Visible=FALSE;
                Editable=BinCodeEditable;
                OnValidate=BEGIN
                             BinCodeOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the shelf number of the item for informational use.;
                           ENG=Specifies the shelf number of the item for informational use.];
                SourceExpr="Shelf No.";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of the item to be handled, such as received, put-away, or assigned.;
                           ENG=Specifies the quantity of the item to be handled, such as received, put-away, or assigned.];
                SourceExpr=Quantity }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of the item to be handled, in the base unit of measure.;
                           ENG=Specifies the quantity of the item to be handled, in the base unit of measure.];
                SourceExpr="Qty. (Base)";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units to handle in this warehouse activity.;
                           ENG=Specifies how many units to handle in this warehouse activity.];
                SourceExpr="Qty. to Handle";
                OnValidate=BEGIN
                             QtytoHandleOnAfterValidate;
                           END;
                            }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of items on the line that have been handled in this warehouse activity.;
                           ENG=Specifies the number of items on the line that have been handled in this warehouse activity.];
                SourceExpr="Qty. Handled";
                Visible=TRUE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of items to be handled in this warehouse activity.;
                           ENG=Specifies the quantity of items to be handled in this warehouse activity.];
                SourceExpr="Qty. to Handle (Base)";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of items on the line that have been handled in this warehouse activity.;
                           ENG=Specifies the number of items on the line that have been handled in this warehouse activity.];
                SourceExpr="Qty. Handled (Base)";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of items that have not yet been handled for this warehouse activity line.;
                           ENG=Specifies the number of items that have not yet been handled for this warehouse activity line.];
                SourceExpr="Qty. Outstanding";
                Visible=TRUE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of items, expressed in the base unit of measure, that have not yet been handled for this warehouse activity line.;
                           ENG=Specifies the number of items, expressed in the base unit of measure, that have not yet been handled for this warehouse activity line.];
                SourceExpr="Qty. Outstanding (Base)";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the warehouse activity must be completed.;
                           ENG=Specifies the date when the warehouse activity must be completed.];
                SourceExpr="Due Date" }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure code of the item on the line.;
                           ENG=Specifies the unit of measure code of the item on the line.];
                SourceExpr="Unit of Measure Code" }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity per unit of measure of the item on the line.;
                           ENG=Specifies the quantity per unit of measure of the item on the line.];
                SourceExpr="Qty. per Unit of Measure" }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the shipping advice, informing whether partial deliveries are acceptable, copied from the source document header.;
                           ENG=Specifies the shipping advice, informing whether partial deliveries are acceptable, copied from the source document header.];
                SourceExpr="Shipping Advice";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about the type of destination, such as customer or vendor, associated with the warehouse activity line.;
                           ENG=Specifies information about the type of destination, such as customer or vendor, associated with the warehouse activity line.];
                SourceExpr="Destination Type" }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number or code of the customer, vendor or location related to the activity line.;
                           ENG=Specifies the number or code of the customer, vendor or location related to the activity line.];
                SourceExpr="Destination No." }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the shipping agent who is transporting the items.;
                           ENG=Specifies the code for the shipping agent who is transporting the items.];
                SourceExpr="Shipping Agent Code";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the service, such as a one-day delivery, offered by a shipping agent.;
                           ENG=Specifies the code for the service, such as a one-day delivery, offered by a shipping agent.];
                SourceExpr="Shipping Agent Service Code";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the shipment method code for this warehouse activity line.;
                           ENG=Specifies the shipment method code for this warehouse activity line.];
                SourceExpr="Shipment Method Code";
                Visible=FALSE }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of warehouse document from which the line originated.;
                           ENG=Specifies the type of warehouse document from which the line originated.];
                OptionCaptionML=[ENU=" ,,Shipment,,Internal Pick,Production,,,Assembly";
                                 ENG=" ,,Shipment,,Internal Pick,Production,,,Assembly"];
                SourceExpr="Whse. Document Type";
                Visible=FALSE }

    { 64  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the warehouse document that is the basis for the action on the line.;
                           ENG=Specifies the number of the warehouse document that is the basis for the action on the line.];
                SourceExpr="Whse. Document No.";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the line in the warehouse document that is the basis for the action on the line.;
                           ENG=Specifies the number of the line in the warehouse document that is the basis for the action on the line.];
                SourceExpr="Whse. Document Line No.";
                Visible=FALSE }

    { 68  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the equipment required when you perform the action on the line.;
                           ENG=Specifies the code of the equipment required when you perform the action on the line.];
                SourceExpr="Special Equipment Code";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the inventory pick line is for assembly items that are assembled to a sales order before being shipped.;
                           ENG=Specifies that the inventory pick line is for assembly items that are assembled to a sales order before being shipped.];
                SourceExpr="Assemble to Order";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      ItemAvailFormsMgt@1001 : Codeunit 353;
      WMSMgt@1000 : Codeunit 7302;
      ZoneCodeEditable@19015203 : Boolean INDATASET;
      BinCodeEditable@19056442 : Boolean INDATASET;

    LOCAL PROCEDURE ShowSourceLine@1();
    BEGIN
      WMSMgt.ShowSourceDocLine(
        "Source Type","Source Subtype","Source No.","Source Line No.","Source Subline No.");
    END;

    LOCAL PROCEDURE ItemAvailability@7(AvailabilityType@1000 : 'Date,Variant,Location,Bin,Event,BOM');
    BEGIN
      ItemAvailFormsMgt.ShowItemAvailFromWhseActivLine(Rec,AvailabilityType);
    END;

    PROCEDURE AutofillQtyToHandle@10();
    VAR
      WhseActivLine@1000 : Record 5767;
    BEGIN
      WhseActivLine.COPY(Rec);
      AutofillQtyToHandle(WhseActivLine);
    END;

    PROCEDURE DeleteQtyToHandle@4();
    VAR
      WhseActivLine@1000 : Record 5767;
    BEGIN
      WhseActivLine.COPY(Rec);
      DeleteQtyToHandle(WhseActivLine);
    END;

    LOCAL PROCEDURE ChangeUOM@5();
    VAR
      WhseActLine@1001 : Record 5767;
      WhseChangeOUM@1000 : Report 7314;
    BEGIN
      TESTFIELD("Action Type");
      TESTFIELD("Breakbulk No.",0);
      TESTFIELD("Action Type",1);
      WhseChangeOUM.DefWhseActLine(Rec);
      WhseChangeOUM.RUNMODAL;
      IF WhseChangeOUM.ChangeUOMCode(WhseActLine) = TRUE THEN
        ChangeUOMCode(Rec,WhseActLine);
      CLEAR(WhseChangeOUM);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE RegisterActivityYesNo@2();
    VAR
      WhseActivLine@1001 : Record 5767;
    BEGIN
      WhseActivLine.COPY(Rec);
      WhseActivLine.FILTERGROUP(3);
      WhseActivLine.SETRANGE(Breakbulk);
      WhseActivLine.FILTERGROUP(0);
      CODEUNIT.RUN(CODEUNIT::"Whse.-Act.-Register (Yes/No)",WhseActivLine);
      RESET;
      SETCURRENTKEY("Activity Type","No.","Sorting Sequence No.");
      FILTERGROUP(4);
      SETRANGE("Activity Type","Activity Type");
      SETRANGE("No.","No.");
      FILTERGROUP(3);
      SETRANGE(Breakbulk,FALSE);
      FILTERGROUP(0);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ShowBinContents@7301();
    VAR
      BinContent@1000 : Record 7302;
    BEGIN
      BinContent.ShowBinContents("Location Code","Item No.","Variant Code",'')
    END;

    LOCAL PROCEDURE ShowWhseLine@3();
    BEGIN
      WMSMgt.ShowWhseDocLine(
        "Whse. Document Type","Whse. Document No.","Whse. Document Line No.");
    END;

    LOCAL PROCEDURE EnableZoneBin@6();
    BEGIN
      ZoneCodeEditable :=
        ("Action Type" = "Action Type"::Take) OR ("Breakbulk No." <> 0);
      BinCodeEditable :=
        ("Action Type" = "Action Type"::Take) OR ("Breakbulk No." <> 0);
    END;

    LOCAL PROCEDURE SerialNoOnAfterValidate@19074494();
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
      ExpDate@1106000002 : Date;
      EntriesExist@1106000000 : Boolean;
    BEGIN
      IF "Serial No." <> '' THEN
        ExpDate := ItemTrackingMgt.ExistingExpirationDate("Item No.","Variant Code",
            "Lot No.","Serial No.",FALSE,EntriesExist);

      IF ExpDate <> 0D THEN
        "Expiration Date" := ExpDate;
    END;

    LOCAL PROCEDURE LotNoOnAfterValidate@19045288();
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
      ExpDate@1106000002 : Date;
      EntriesExist@1106000000 : Boolean;
    BEGIN
      IF "Lot No." <> '' THEN
        ExpDate := ItemTrackingMgt.ExistingExpirationDate("Item No.","Variant Code",
            "Lot No.","Serial No.",FALSE,EntriesExist);

      IF ExpDate <> 0D THEN
        "Expiration Date" := ExpDate;
    END;

    LOCAL PROCEDURE BinCodeOnAfterValidate@19073508();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QtytoHandleOnAfterValidate@19067087();
    BEGIN
      CurrPage.SAVERECORD;
    END;

    BEGIN
    END.
  }
}

