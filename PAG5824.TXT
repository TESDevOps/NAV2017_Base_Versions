OBJECT Page 5824 Sales Shipment Lines
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Sales Shipment Lines;
               ENG=Sales Shipment Lines];
    SourceTable=Table111;
    PageType=List;
    OnOpenPage=BEGIN
                 IF AssignmentType = AssignmentType::Sale THEN BEGIN
                   SETCURRENTKEY("Sell-to Customer No.");
                   SETRANGE("Sell-to Customer No.",SellToCustomerNo);
                 END;
                 FILTERGROUP(2);
                 SETRANGE(Type,Type::Item);
                 SETFILTER(Quantity,'<>0');
                 SETRANGE(Correction,FALSE);
                 SETRANGE("Job No.",'');
                 FILTERGROUP(0);
               END;

    OnAfterGetRecord=BEGIN
                       DocumentNoHideValue := FALSE;
                       DocumentNoOnFormat;
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 48      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Show Document;
                                 ENG=Show Document];
                      Image=View;
                      OnAction=VAR
                                 SalesShptHeader@1001 : Record 110;
                               BEGIN
                                 SalesShptHeader.GET("Document No.");
                                 PAGE.RUN(PAGE::"Posted Sales Shipment",SalesShptHeader);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the shipment number.;
                           ENG=Specifies the shipment number.];
                SourceExpr="Document No.";
                HideValue=DocumentNoHideValue;
                StyleExpr='Strong' }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer the items were shipped to.;
                           ENG=Specifies the number of the customer the items were shipped to.];
                SourceExpr="Sell-to Customer No." }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer the invoice for the shipment was sent to.;
                           ENG=Specifies the number of the customer the invoice for the shipment was sent to.];
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line type.;
                           ENG=Specifies the line type.];
                SourceExpr=Type }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general ledger account or item number that identifies the general ledger account or item specified on the line.;
                           ENG=Specifies the general ledger account or item number that identifies the general ledger account or item specified on the line.];
                SourceExpr="No." }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant number of the items sold.;
                           ENG=Specifies the variant number of the items sold.];
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the item or general ledger account, or some descriptive text.;
                           ENG=Specifies the name of the item or general ledger account, or some descriptive text.];
                SourceExpr=Description }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the sales line.;
                           ENG=Specifies the dimension value code associated with the sales line.];
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the sales line.;
                           ENG=Specifies the dimension value code associated with the sales line.];
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the location of the item on the shipment line which was posted.;
                           ENG=Specifies the code for the location of the item on the shipment line which was posted.];
                SourceExpr="Location Code";
                Visible=TRUE }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of units of the item specified on the line.;
                           ENG=Specifies the number of units of the item specified on the line.];
                SourceExpr=Quantity }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure code for the items sold.;
                           ENG=Specifies the unit of measure code for the items sold.];
                SourceExpr="Unit of Measure Code" }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure for the item (bottle or piece, for example).;
                           ENG=Specifies the unit of measure for the item (bottle or piece, for example).];
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item ledger entry that the items were applied to when the shipment was posted.;
                           ENG=Specifies the number of the item ledger entry that the items were applied to when the shipment was posted.];
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the job number corresponding to the sales invoice or credit memo.;
                           ENG=Specifies the job number corresponding to the sales invoice or credit memo.];
                SourceExpr="Job No.";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date the items were shipped.;
                           ENG=Specifies the date the items were shipped.];
                SourceExpr="Shipment Date";
                Visible=FALSE }

    { 45  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how much of the line has been invoiced.;
                           ENG=Specifies how much of the line has been invoiced.];
                SourceExpr="Quantity Invoiced" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      FromSalesShptLine@1000 : Record 111;
      TempSalesShptLine@1001 : TEMPORARY Record 111;
      ItemChargeAssgntSales@1002 : Record 5809;
      ItemChargeAssgntPurch@1006 : Record 5805;
      AssignItemChargePurch@1008 : Codeunit 5805;
      AssignItemChargeSales@1003 : Codeunit 5807;
      SellToCustomerNo@1004 : Code[20];
      UnitCost@1005 : Decimal;
      AssignmentType@1007 : 'Sale,Purchase';
      DocumentNoHideValue@19020538 : Boolean INDATASET;

    PROCEDURE InitializeSales@1(NewItemChargeAssgnt@1000 : Record 5809;NewSellToCustomerNo@1001 : Code[20];NewUnitCost@1002 : Decimal);
    BEGIN
      ItemChargeAssgntSales := NewItemChargeAssgnt;
      SellToCustomerNo := NewSellToCustomerNo;
      UnitCost := NewUnitCost;
      AssignmentType := AssignmentType::Sale;
    END;

    PROCEDURE InitializePurchase@4(NewItemChargeAssgnt@1000 : Record 5805;NewUnitCost@1002 : Decimal);
    BEGIN
      ItemChargeAssgntPurch := NewItemChargeAssgnt;
      UnitCost := NewUnitCost;
      AssignmentType := AssignmentType::Purchase;
    END;

    LOCAL PROCEDURE IsFirstLine@2(DocNo@1000 : Code[20];LineNo@1001 : Integer) : Boolean;
    VAR
      SalesShptLine@1002 : Record 111;
    BEGIN
      TempSalesShptLine.RESET;
      TempSalesShptLine.COPYFILTERS(Rec);
      TempSalesShptLine.SETRANGE("Document No.",DocNo);
      IF NOT TempSalesShptLine.FINDFIRST THEN BEGIN
        SalesShptLine.COPYFILTERS(Rec);
        SalesShptLine.SETRANGE("Document No.",DocNo);
        IF SalesShptLine.FINDFIRST THEN BEGIN
          TempSalesShptLine := SalesShptLine;
          TempSalesShptLine.INSERT;
        END;
      END;
      IF TempSalesShptLine."Line No." = LineNo THEN
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      FromSalesShptLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(FromSalesShptLine);
      IF FromSalesShptLine.FINDFIRST THEN
        IF AssignmentType = AssignmentType::Sale THEN BEGIN
          ItemChargeAssgntSales."Unit Cost" := UnitCost;
          AssignItemChargeSales.CreateShptChargeAssgnt(FromSalesShptLine,ItemChargeAssgntSales);
        END ELSE
          IF AssignmentType = AssignmentType::Purchase THEN BEGIN
            ItemChargeAssgntPurch."Unit Cost" := UnitCost;
            AssignItemChargePurch.CreateSalesShptChargeAssgnt(FromSalesShptLine,ItemChargeAssgntPurch);
          END;
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    BEGIN
      IF NOT IsFirstLine("Document No.","Line No.") THEN
        DocumentNoHideValue := TRUE;
    END;

    BEGIN
    END.
  }
}

