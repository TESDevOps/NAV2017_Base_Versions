OBJECT Codeunit 5981 Service-Post (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    TableNo=5902;
    EventSubscriberInstance=Manual;
    OnRun=BEGIN
            Code(Rec,ServiceHeaderPreviewContext);
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice,Ship and &Consume;ENG=&Ship,&Invoice,Ship &and Invoice,Ship and &Consume';
      Text001@1001 : TextConst 'ENU=Do you want to post the %1?;ENG=Do you want to post the %1?';
      ServiceHeaderPreviewContext@1003 : Record 5900;
      Selection@1005 : Integer;
      PreviewMode@1002 : Boolean;
      CancelErr@1006 : TextConst 'ENU=The preview has been canceled.;ENG=The preview has been cancelled.';
      NothingToPostErr@1007 : TextConst 'ENU=There is nothing to post.;ENG=There is nothing to post.';

    LOCAL PROCEDURE Code@1(VAR PassedServLine@1003 : Record 5902;VAR PassedServiceHeader@1005 : Record 5900);
    VAR
      ServicePost@1004 : Codeunit 5980;
      Ship@1000 : Boolean;
      Consume@1001 : Boolean;
      Invoice@1002 : Boolean;
    BEGIN
      IF NOT PassedServiceHeader.FIND THEN
        ERROR(NothingToPostErr);

      WITH PassedServiceHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              Selection := STRMENU(Text000,3);
              IF Selection = 0 THEN BEGIN
                IF PreviewMode THEN
                  ERROR(CancelErr);
                EXIT;
              END;
              Ship := Selection IN [1,3,4];
              Consume := Selection IN [4];
              Invoice := Selection IN [2,3];
            END
          ELSE
            IF NOT PreviewMode THEN
              IF NOT CONFIRM(Text001,FALSE,"Document Type") THEN
                EXIT;
        END;
        ServicePost.SetPreviewMode(PreviewMode);
        ServicePost.PostWithLines(PassedServiceHeader,PassedServLine,Ship,Consume,Invoice);

        IF NOT PreviewMode THEN
          COMMIT;
      END;
    END;

    PROCEDURE PostDocument@2(VAR ServiceHeaderSource@1000 : Record 5900);
    VAR
      DummyServLine@1001 : TEMPORARY Record 5902;
    BEGIN
      PostDocumentWithLines(ServiceHeaderSource,DummyServLine);
    END;

    PROCEDURE PostDocumentWithLines@3(VAR ServiceHeaderSource@1000 : Record 5900;VAR PassedServLine@1001 : Record 5902);
    VAR
      ServiceHeader@1002 : Record 5900;
    BEGIN
      ServiceHeader.COPY(ServiceHeaderSource);
      Code(PassedServLine,ServiceHeader);
      ServiceHeaderSource := ServiceHeader;
    END;

    PROCEDURE PreviewDocument@4(VAR ServHeader@1000 : Record 5900);
    VAR
      TempServLine@1001 : TEMPORARY Record 5902;
      GenJnlPostPreview@1003 : Codeunit 19;
      ServicePostYesNo@1002 : Codeunit 5981;
    BEGIN
      BINDSUBSCRIPTION(ServicePostYesNo);
      ServicePostYesNo.SetPreviewContext(ServHeader);
      GenJnlPostPreview.Preview(ServicePostYesNo,TempServLine);
    END;

    PROCEDURE PreviewDocumentWithLines@5(VAR ServHeader@1000 : Record 5900;VAR PassedServLine@1004 : Record 5902);
    VAR
      GenJnlPostPreview@1003 : Codeunit 19;
      ServicePostYesNo@1001 : Codeunit 5981;
    BEGIN
      BINDSUBSCRIPTION(ServicePostYesNo);
      ServicePostYesNo.SetPreviewContext(ServHeader);
      GenJnlPostPreview.Preview(ServicePostYesNo,PassedServLine);
    END;

    PROCEDURE SetPreviewContext@7(VAR ServiceHeader@1000 : Record 5900);
    BEGIN
      ServiceHeaderPreviewContext.COPY(ServiceHeader);
    END;

    [EventSubscriber(Codeunit,19,OnRunPreview)]
    LOCAL PROCEDURE OnRunPreview@6(VAR Result@1000 : Boolean;Subscriber@1001 : Variant;RecVar@1002 : Variant);
    VAR
      ServicePostYesNo@1003 : Codeunit 5981;
    BEGIN
      ServicePostYesNo := Subscriber;
      PreviewMode := TRUE;
      Result := ServicePostYesNo.RUN(RecVar);
    END;

    BEGIN
    END.
  }
}

