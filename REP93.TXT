OBJECT Report 93 Create Fiscal Year
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00,NAVGB10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Fiscal Year;
               ENG=Create Fiscal Year];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF FiscalYearStartDate = 0D THEN
                    ERROR(Text1041000);

                  AccountingPeriod.SETRANGE("Period Type",AccountingPeriod."Period Type"::Year);
                  IF AccountingPeriod.FINDFIRST THEN BEGIN
                    FirstPeriodStartDate := AccountingPeriod."Period Start";
                    IF AccountingPeriod.FINDLAST THEN
                      LastPeriodStartDate := AccountingPeriod."Period Start";
                    AccountingPeriod.SETRANGE(Closed,TRUE);
                    IF AccountingPeriod.FINDLAST THEN BEGIN
                      FirstPeriodStartDate := AccountingPeriod."Period Start";
                      FirstPeriodLocked := TRUE;
                      IF (NOT HideDialog) AND (FiscalYearStartDate < AccountingPeriod."Period Start") THEN
                        IF NOT CONFIRM(CreateAndCloseQst) THEN
                          EXIT;
                    END;
                  END ELSE
                    IF NOT HideDialog THEN
                      IF NOT CONFIRM(CreateQst) THEN
                        EXIT;

                  MonthStartDate := FiscalYearStartDate;
                  FOR i := 1 TO NoOfMonths DO BEGIN
                    IF MonthStartDate <= FirstPeriodStartDate THEN
                      EXIT;
                    IF FirstPeriodStartDate <> 0D THEN
                      IF (MonthStartDate >= FirstPeriodStartDate) AND (MonthStartDate < LastPeriodStartDate) THEN
                        ERROR(OnlyBeforeOrAfterErr);
                    MonthEndDate := CALCDATE(MonthLength,MonthStartDate) - 1;
                    AccountingPeriod.INIT;
                    AccountingPeriod."Period Type" := AccountingPeriod."Period Type"::Month;
                    AccountingPeriod."Period Start" := MonthStartDate;
                    AccountingPeriod."Period End" := CLOSINGDATE(MonthEndDate);
                    AccountingPeriod.UpdateName;
                    AccountingPeriod.INSERT(TRUE);
                    MonthStartDate := MonthEndDate + 1;
                  END;
                  AccountingPeriod.INIT;
                  AccountingPeriod."Period Type" := AccountingPeriod."Period Type"::Year;
                  AccountingPeriod."Period Start" := FiscalYearStartDate;
                  AccountingPeriod."Period End" := CLOSINGDATE(MonthEndDate);
                  AccountingPeriod.UpdateName;
                  IF (AccountingPeriod."Period Start" < FirstPeriodStartDate) AND FirstPeriodLocked THEN
                    AccountingPeriod.VALIDATE(Closed,TRUE);
                  AccountingPeriod.INSERT(TRUE);
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF NoOfMonths = 0 THEN BEGIN
                     NoOfMonths := 12;
                     EVALUATE(MonthLength,'<1M>');
                   END;
                   AccountingPeriod.SETRANGE("Period Type",AccountingPeriod."Period Type"::Year);
                   IF AccountingPeriod.FINDLAST THEN BEGIN
                     AccountingPeriod.TESTFIELD("Period End");
                     FiscalYearStartDate := NORMALDATE(AccountingPeriod."Period End") + 1;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENG=Options] }

      { 1   ;2   ;Field     ;
                  Name=StartingDate;
                  CaptionML=[ENU=Starting Date;
                             ENG=Starting Date];
                  ToolTipML=[ENU=Specifies the date from which the report or batch job processes information.;
                             ENG=Specifies the date from which the report or batch job processes information.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=FiscalYearStartDate }

      { 1040000;2;Field     ;
                  Name=NoOfMonths;
                  CaptionML=[ENU=No. of Months;
                             ENG=No. of Months];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=NoOfMonths }

      { 1040001;2;Field     ;
                  Name=MonthLength;
                  CaptionML=[ENU=Month Length;
                             ENG=Month Length];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=MonthLength }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CreateAndCloseQst@1000 : TextConst 'ENU=The new fiscal year begins before an existing fiscal year, so the new year will be closed automatically.\\Do you want to create and close the fiscal year?;ENG=The new fiscal year begins before an existing fiscal year, so the new year will be closed automatically.\\Do you want to create and close the fiscal year?';
      CreateQst@1002 : TextConst 'ENU=After you create the new fiscal year, you cannot change its starting date.\\Do you want to create the fiscal year?;ENG=After you create the new fiscal year, you cannot change its starting date.\\Do you want to create the fiscal year?';
      OnlyBeforeOrAfterErr@1004 : TextConst 'ENU=It is only possible to create new fiscal years before or after the existing ones.;ENG=It is only possible to create new fiscal years before or after the existing ones.';
      AccountingPeriod@1005 : Record 10560;
      NoOfMonths@1040000 : Integer;
      MonthLength@1040001 : DateFormula;
      FiscalYearStartDate@1008 : Date;
      MonthStartDate@1040002 : Date;
      MonthEndDate@1040003 : Date;
      FirstPeriodStartDate@1009 : Date;
      LastPeriodStartDate@1010 : Date;
      FirstPeriodLocked@1011 : Boolean;
      i@1012 : Integer;
      HideDialog@1014 : Boolean;
      Text1041000@1041000 : TextConst 'ENU=You must specify Starting Date.;ENG=You must specify Starting Date.';

    PROCEDURE InitializeRequest@1(NewNoOfMonths@1000 : Integer;NewPeriodLength@1001 : DateFormula;StartingDate@1002 : Date);
    BEGIN
      NoOfMonths := NewNoOfMonths;
      MonthLength := NewPeriodLength;
      FiscalYearStartDate := StartingDate;
    END;

    PROCEDURE HideConfirmationDialog@2(NewHideDialog@1000 : Boolean);
    BEGIN
      HideDialog := NewHideDialog;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

