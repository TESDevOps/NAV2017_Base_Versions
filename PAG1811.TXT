OBJECT Page 1811 Setup Email Logging
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Email Logging Setup;
               ENG=Email Logging Setup];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    PageType=NavigatePage;
    ShowFilter=No;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 PublicMailBoxName := PublicMailBoxTxt;
                 RootQueueStorageFolder := EmailLoggingFolderTxt;
                 QueueFolderName := QueueFolderTxt;
                 StorageFolderName := StorageFolderTxt;
                 IncomingEmailRuleName := IncomingEmailRuleTxt;
                 OutgoingEmailRuleName := OutgoingEmailRuleTxt;
                 DefaultFolderSetup := TRUE;
                 CreateIncomingEmailRule := TRUE;
                 CreateOutgoingEmailRule := TRUE;
                 ShowIntroStep;
               END;

    OnQueryClosePage=VAR
                       AssistedSetup@1000 : Record 1803;
                     BEGIN
                       SetupEmailLogging.ClosePSConnection;
                       IF CloseAction = ACTION::OK THEN
                         IF AssistedSetup.GetStatus(PAGE::"Setup Email Logging") = AssistedSetup.Status::"Not Completed" THEN
                           IF NOT CONFIRM(NAVNotSetUpQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 12      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=[ENU=Back;
                                 ENG=Back];
                      ApplicationArea=#RelationshipMgmt;
                      Enabled=BackEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=[ENU=Next;
                                 ENG=Next];
                      ApplicationArea=#RelationshipMgmt;
                      Enabled=NextEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=VAR
                                 ExchangeAddinSetup@1000 : Codeunit 5323;
                               BEGIN
                                 IF (Step = Step::LoginPass) AND (NOT SkipDeployment) THEN
                                   ExchangeAddinSetup.InitializeServiceWithCredentials(Email,Password);
                                 NextStep(FALSE);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=[ENU=Finish;
                                 ENG=Finish];
                      ApplicationArea=#RelationshipMgmt;
                      Enabled=FinishEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=VAR
                                 AssistedSetup@1004 : Record 1803;
                                 MarketingSetup@1000 : Record 5079;
                               BEGIN
                                 Window.OPEN(SetupEmailLogDialogMsg);
                                 IF NOT SkipDeployment THEN BEGIN
                                   IF MarketingSetup.GET THEN
                                     SetupEmailLogging.ClearEmailLoggingSetup(MarketingSetup);

                                   IF NOT CreateExchangePublicFolders THEN BEGIN
                                     Window.CLOSE;
                                     ERROR(GETLASTERRORTEXT);
                                   END;
                                   UpdateMarketingSetup;

                                   CreateMailLoggingRules;
                                   IF CreateEmailLoggingJobQueue THEN BEGIN
                                     UpdateWindow(CreatingEmailLoggingJobQueueTxt,9000);
                                     SetupEmailLogging.CreateEmailLoggingJobQueueSetup;
                                   END;
                                   SetupEmailLogging.SetupEmailLoggingFolderMarketingSetup(RootQueueStorageFolder,QueueFolderName,StorageFolderName);
                                 END;
                                 AssistedSetup.SetStatus(PAGE::"Setup Email Logging",AssistedSetup.Status::Completed);
                                 Window.CLOSE;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Control 1;
                CaptionML=[ENU="";
                           ENG=""];
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT DoneVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaRepositoryStandard.Image;
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND DoneVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaRepositoryDone.Image;
                Editable=FALSE;
                ShowCaption=No }

    { 2   ;1   ;Group     ;
                Name=Step1;
                CaptionML=[ENU="";
                           ENG=""];
                Visible=IntroVisible;
                GroupType=Group }

    { 3   ;2   ;Group     ;
                CaptionML=[ENU=Welcome to Email Logging Setup;
                           ENG=Welcome to Email Logging Setup];
                GroupType=Group }

    { 4   ;3   ;Group     ;
                CaptionML=[ENU="";
                           ENG=""];
                GroupType=Group;
                InstructionalTextML=[ENU=You can set up Exchange public folders and rules, so that incoming and outgoing email can log Interactions. Organization customization will be enabled for Exchange. Choose Next so you can set up public folders and email rules.;
                                     ENG=You can set up Exchange public folders and rules, so that incoming and outgoing email can log Interactions. Organisation customisation will be enabled for Exchange. Choose Next so you can set up public folders and email rules.] }

    { 5   ;1   ;Group     ;
                Name=Step2;
                CaptionML=[ENU="";
                           ENG=""];
                Visible=LoginPassVisible;
                GroupType=Group }

    { 6   ;2   ;Group     ;
                Name=ExchangeCredentialsDesc;
                CaptionML=[ENU=Provide your Exchange Online administrator credentials.;
                           ENG=Provide your Exchange Online administrator credentials.];
                GroupType=Group }

    { 7   ;3   ;Field     ;
                Name=Email;
                CaptionML=[ENU=Email;
                           ENG=Email];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Email;
                OnValidate=BEGIN
                             NextEnabled := EmailPasswordNotEmpty;
                           END;
                            }

    { 8   ;3   ;Field     ;
                Name=Password;
                ExtendedDatatype=Masked;
                CaptionML=[ENU=Password;
                           ENG=Password];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Password;
                OnValidate=BEGIN
                             NextEnabled := EmailPasswordNotEmpty;
                           END;
                            }

    { 16  ;1   ;Group     ;
                Name=Public Folders Creation;
                Visible=PublicFoldersVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=The following public mailbox and public folders will be created. (You can rename folders later):;
                                     ENG=The following public mailbox and public folders will be created. (You can rename folders later):] }

    { 22  ;2   ;Field     ;
                Name=DefaultFolderSetup;
                CaptionML=[ENU=Default Folder Setup;
                           ENG=Default Folder Setup];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=DefaultFolderSetup }

    { 21  ;2   ;Field     ;
                Name=PublicMailBoxName;
                CaptionML=[ENU=Public Mail Box Name;
                           ENG=Public Mail Box Name];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=PublicMailBoxName;
                Editable=NOT DefaultFolderSetup }

    { 20  ;2   ;Field     ;
                Name=RootQueueStorageFolder;
                CaptionML=[ENU=Root Folder;
                           ENG=Root Folder];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=RootQueueStorageFolder;
                Editable=NOT DefaultFolderSetup }

    { 17  ;2   ;Field     ;
                Name=QueueFolderName;
                CaptionML=[ENU=Queue Folder Name;
                           ENG=Queue Folder Name];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=QueueFolderName;
                Editable=NOT DefaultFolderSetup }

    { 18  ;2   ;Field     ;
                Name=StorageFolderName;
                CaptionML=[ENU=Storage Folder Name;
                           ENG=Storage Folder Name];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=StorageFolderName;
                Editable=NOT DefaultFolderSetup }

    { 24  ;1   ;Group     ;
                Name=Email Rules;
                Visible=EmailRulesVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=The following Exchange transport rules will be created, so that incoming email from outside organizations and outgoing mail to outside organization will be copied to queue public folder for later NAV processing. You can disable creation or give specific names for the rules:;
                                     ENG=The following Exchange transport rules will be created, so that incoming email from outside organisations and outgoing mail to outside organisation will be copied to queue public folder for later NAV processing. You can disable creation or give specific names for the rules:] }

    { 27  ;2   ;Field     ;
                Name=CreateIncomingEmailRule;
                CaptionML=[ENU=Create Incoming Email Rule;
                           ENG=Create Incoming Email Rule];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=CreateIncomingEmailRule;
                OnValidate=BEGIN
                             IF NOT CreateIncomingEmailRule THEN
                               CLEAR(IncomingEmailRuleName);
                           END;
                            }

    { 25  ;2   ;Field     ;
                Name=IncomingEmailRuleName;
                CaptionML=[ENU=Incoming Email Rule Name;
                           ENG=Incoming Email Rule Name];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=IncomingEmailRuleName;
                Editable=CreateIncomingEmailRule }

    { 28  ;2   ;Field     ;
                Name=CreateOutgoingEmailRule;
                CaptionML=[ENU=Create Outgoing Email Rule;
                           ENG=Create Outgoing Email Rule];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=CreateOutgoingEmailRule;
                OnValidate=BEGIN
                             IF NOT CreateOutgoingEmailRule THEN
                               CLEAR(OutgoingEmailRuleName);
                           END;
                            }

    { 26  ;2   ;Field     ;
                Name=OutgoingEmailRuleName;
                CaptionML=[ENU=Outgoing Email Rule Name;
                           ENG=Outgoing Email Rule Name];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=OutgoingEmailRuleName;
                Editable=CreateOutgoingEmailRule }

    { 14  ;1   ;Group     ;
                Name=Step4;
                CaptionML=[ENU="";
                           ENG=""];
                Visible=DoneVisible;
                GroupType=Group }

    { 15  ;2   ;Group     ;
                Name=FinalStepDesc;
                CaptionML=[ENU=That's it!;
                           ENG=That's it!];
                GroupType=Group;
                InstructionalTextML=[ENU=When you choose Finish, the following will be created:;
                                     ENG=When you choose Finish, the following will be created:] }

    { 33  ;3   ;Group     ;
                GroupType=Group }

    { 19  ;4   ;Field     ;
                Name=QueueFolderNameFinal;
                CaptionML=[ENU=Queue Folder;
                           ENG=Queue Folder];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=QueueFolderName;
                Editable=FALSE }

    { 23  ;4   ;Field     ;
                Name=StorageFolderNameFinal;
                CaptionML=[ENU=Storage Folder;
                           ENG=Storage Folder];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=StorageFolderName;
                Editable=FALSE }

    { 29  ;4   ;Field     ;
                Name=IncomingEmailRuleNameFinal;
                CaptionML=[ENU=Incoming Email Rule;
                           ENG=Incoming Email Rule];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=IncomingEmailRuleName;
                Editable=FALSE }

    { 30  ;4   ;Field     ;
                Name=OutgoingEmailRuleNameFinal;
                CaptionML=[ENU=Outgoing Email Rule;
                           ENG=Outgoing Email Rule];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=OutgoingEmailRuleName;
                Editable=FALSE }

    { 31  ;4   ;Field     ;
                Name=CreateEmailLoggingJobQueue;
                CaptionML=[ENU=Create Email Logging Job Queue;
                           ENG=Create Email Logging Job Queue];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=CreateEmailLoggingJobQueue }

    { 34  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=(Note: The creation of public folders and rules may take some time. When the folders are created, the wizard window will close.);
                                     ENG=(Note: The creation of public folders and rules may take some time. When the folders are created, the wizard window will close.)] }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      SetupEmailLogging@1015 : Codeunit 1641;
      Window@1030 : Dialog;
      Step@1008 : 'Intro,LoginPass,PublicFolders,EmailRules,Done';
      Email@1000 : Text[80];
      Password@1001 : Text[30];
      RootQueueStorageFolder@1014 : Text;
      QueueFolderName@1012 : Text;
      StorageFolderName@1011 : Text;
      PublicMailBoxName@1016 : Text;
      IncomingEmailRuleName@1021 : Text;
      OutgoingEmailRuleName@1022 : Text;
      BackEnabled@1002 : Boolean;
      NextEnabled@1003 : Boolean;
      FinishEnabled@1004 : Boolean;
      TopBannerVisible@1042 : Boolean;
      IntroVisible@1005 : Boolean;
      LoginPassVisible@1006 : Boolean;
      DoneVisible@1007 : Boolean;
      PublicFoldersVisible@1013 : Boolean;
      PublicMailBoxTxt@1010 : TextConst 'ENU=Public MailBox;ENG=Public MailBox';
      EmailLoggingFolderTxt@1009 : TextConst 'ENU=Email Logging;ENG=Email Logging';
      QueueFolderTxt@1017 : TextConst 'ENU=Queue;ENG=Queue';
      StorageFolderTxt@1018 : TextConst 'ENU=Storage;ENG=Storage';
      EmailRulesVisible@1020 : Boolean;
      DefaultFolderSetup@1019 : Boolean;
      CreateIncomingEmailRule@1023 : Boolean;
      CreateOutgoingEmailRule@1024 : Boolean;
      IncomingEmailRuleTxt@1026 : TextConst 'ENU=Log Email Sent to This Organization;ENG=Log Email Sent to This Organisation';
      OutgoingEmailRuleTxt@1025 : TextConst 'ENU=Log Email Sent from This Organization;ENG=Log Email Sent from This Organisation';
      NAVNotSetUpQst@1027 : TextConst 'ENU=Setup of Email Logging was not finished. \\Are you sure that you want to exit?;ENG=Setup of Email Logging was not finished. \\Are you sure that you want to exit?';
      CreateEmailLoggingJobQueue@1028 : Boolean;
      SetupEmailLogDialogMsg@1029 : TextConst '@@@=This is a message for dialog window. Parameters do not require translation.;ENU=Setup Email Logging    #1################## @2@@@@@@@@@@@@@@@@@@;ENG=Setup Email Logging    #1################## @2@@@@@@@@@@@@@@@@@@';
      InitializingConnectionTxt@1031 : TextConst 'ENU=Initializing connection;ENG=Initialising connection';
      PublicFoldersCreationTxt@1032 : TextConst 'ENU=Public folders creation;ENG=Public folders creation';
      EmailRulesCreationTxt@1033 : TextConst 'ENU=Email rules creation;ENG=Email rules creation';
      UpdatingMarketingSetupTxt@1034 : TextConst 'ENU=Updating Marketing Setup;ENG=Updating Marketing Setup';
      CreatingEmailLoggingJobQueueTxt@1035 : TextConst 'ENU=Creating email Logging Job Queue;ENG=Creating email Logging Job Queue';
      SkipDeployment@1038 : Boolean;

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      CASE Step OF
        Step::Intro:
          ShowIntroStep;
        Step::LoginPass:
          BEGIN
            IF Backwards THEN
              SetupEmailLogging.ClosePSConnection;
            ShowLoginPassStep;
          END;
        Step::PublicFolders:
          IF NOT SkipDeployment THEN BEGIN
            Window.OPEN(SetupEmailLogDialogMsg);
            UpdateWindow(InitializingConnectionTxt,1000);
            IF NOT Backwards THEN BEGIN
              SetupEmailLogging.SetDeployCredentials(Email,Password);
              InitializePSExchangeConnection;
            END;
            ShowPublicFoldersStep;
            Window.CLOSE;
          END;
        Step::EmailRules:
          ShowEmailRulesStep;
        Step::Done:
          ShowDoneStep;
      END;
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ShowIntroStep@1();
    BEGIN
      ResetWizardControls;
      IntroVisible := TRUE;
      BackEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowLoginPassStep@9();
    BEGIN
      ResetWizardControls;
      NextEnabled := EmailPasswordNotEmpty;
      LoginPassVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowPublicFoldersStep@4();
    BEGIN
      ResetWizardControls;
      NextEnabled := TRUE;
      PublicFoldersVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowEmailRulesStep@2();
    BEGIN
      ResetWizardControls;
      NextEnabled := TRUE;
      EmailRulesVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowDoneStep@11();
    BEGIN
      ResetWizardControls;
      DoneVisible := TRUE;
      NextEnabled := FALSE;
      FinishEnabled := TRUE;
      CreateEmailLoggingJobQueue := TRUE;
    END;

    LOCAL PROCEDURE ResetWizardControls@10();
    BEGIN
      // Buttons
      BackEnabled := TRUE;
      NextEnabled := TRUE;
      FinishEnabled := FALSE;

      // Tabs
      IntroVisible := FALSE;
      LoginPassVisible := FALSE;
      DoneVisible := FALSE;
      PublicFoldersVisible := FALSE;
      EmailRulesVisible := FALSE;
    END;

    LOCAL PROCEDURE InitializePSExchangeConnection@18();
    BEGIN
      SetupEmailLogging.InitializeExchangePSConnection;
    END;

    [TryFunction]
    LOCAL PROCEDURE CreateExchangePublicFolders@23();
    BEGIN
      UpdateWindow(PublicFoldersCreationTxt,1000);
      SetupEmailLogging.CreatePublicFolders(
        PublicMailBoxName,RootQueueStorageFolder,QueueFolderName,StorageFolderName)
    END;

    LOCAL PROCEDURE CreateMailLoggingRules@43();
    VAR
      QueueEmailAddress@1000 : Text;
    BEGIN
      UpdateWindow(EmailRulesCreationTxt,8000);
      QueueEmailAddress := QueueFolderName + '@' + SetupEmailLogging.GetDomainFromEmail(Email);
      SetupEmailLogging.CreateEmailLoggingRules(QueueEmailAddress,IncomingEmailRuleName,OutgoingEmailRuleName);
    END;

    LOCAL PROCEDURE EmailPasswordNotEmpty@53() : Boolean;
    BEGIN
      EXIT((Email <> '') AND (Password <> ''));
    END;

    LOCAL PROCEDURE UpdateMarketingSetup@21();
    VAR
      MarketingSetup@1000 : Record 5079;
    BEGIN
      UpdateWindow(UpdatingMarketingSetupTxt,6000);
      IF NOT MarketingSetup.GET THEN
        EXIT;

      MarketingSetup.VALIDATE("Exchange Service URL",SetupEmailLogging.GetDomainFromEmail(Email));
      MarketingSetup.VALIDATE("Autodiscovery E-Mail Address",Email);
      MarketingSetup.VALIDATE("Email Batch Size",10);
      MarketingSetup.VALIDATE("Exchange Account User Name",Email);
      MarketingSetup.SetExchangeAccountPassword(Password);
      MarketingSetup.MODIFY;
    END;

    LOCAL PROCEDURE UpdateWindow@5(StepText@1000 : Text;Progress@1001 : Integer);
    BEGIN
      Window.UPDATE(1,StepText);
      Window.UPDATE(2,Progress);
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      THEN
        TopBannerVisible := MediaRepositoryDone.Image.HASVALUE;
    END;

    PROCEDURE SkipDeploymentToExchange@6(Skip@1000 : Boolean);
    BEGIN
      SkipDeployment := Skip;
    END;

    BEGIN
    END.
  }
}

