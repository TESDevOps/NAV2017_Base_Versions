OBJECT Page 775 Analysis Report Chart Setup
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Analysis Report Chart Setup;
               ENG=Analysis Report Chart Setup];
    SourceTable=Table770;
    OnOpenPage=BEGIN
                 SetEnabled;
               END;

    OnAfterGetRecord=BEGIN
                       SetEnabled;
                     END;

    OnNewRecord=BEGIN
                  "Start Date" := WORKDATE;
                END;

  }
  CONTROLS
  {
    { 14  ;0   ;Container ;
                ContainerType=ContentArea }

    { 13  ;1   ;Group     ;
                Name=DataSource;
                CaptionML=[ENU=Data Source;
                           ENG=Data Source];
                GroupType=Group }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the specific chart.;
                           ENG=Specifies the name of the specific chart.];
                SourceExpr=Name;
                OnValidate=BEGIN
                             SetEnabled;
                           END;
                            }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the analysis report that is used to generate the specific chart that is shown in, for example, the Sales Performance window.;
                           ENG=Specifies the name of the analysis report that is used to generate the specific chart that is shown in, for example, the Sales Performance window.];
                SourceExpr="Analysis Report Name";
                OnValidate=BEGIN
                             SetEnabled;
                             SetAnalysisReportName("Analysis Report Name");
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the values from the selected analysis report are displayed in the specific chart.;
                           ENG=Specifies how the values from the selected analysis report are displayed in the specific chart.];
                SourceExpr="Base X-Axis on";
                OnValidate=BEGIN
                             SetEnabled;
                             SetShowPer("Base X-Axis on");
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the analysis line template that is used to generate the specific chart that is shown in, for example, the Sales Performance window.;
                           ENG=Specifies the name of the analysis line template that is used to generate the specific chart that is shown in, for example, the Sales Performance window.];
                SourceExpr="Analysis Line Template Name" }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the analysis column template that is used to generate the chart that is shown in, for example, the Sales Performance window.;
                           ENG=Specifies the name of the analysis column template that is used to generate the chart that is shown in, for example, the Sales Performance window.];
                SourceExpr="Analysis Column Template Name" }

    { 8   ;2   ;Group     ;
                GroupType=Group }

    { 7   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the first date on which analysis report values are included in the chart.;
                           ENG=Specifies the first date on which analysis report values are included in the chart.];
                SourceExpr="Start Date" }

    { 6   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the last date on which analysis report values are included in the chart.;
                           ENG=Specifies the last date on which analysis report values are included in the chart.];
                SourceExpr="End Date";
                Editable=IsEndDateEnabled }

    { 5   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the length of periods in the chart.;
                           ENG=Specifies the length of periods in the chart.];
                SourceExpr="Period Length" }

    { 4   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies how many periods are shown in the chart.;
                           ENG=Specifies how many periods are shown in the chart.];
                SourceExpr="No. of Periods";
                Enabled=IsNoOfPeriodsEnabled }

    { 3   ;1   ;Group     ;
                CaptionML=[ENU=Measures (Y-Axis);
                           ENG=Measures (Y-Axis)];
                GroupType=Group }

    { 2   ;2   ;Part      ;
                Name=SetupYAxis;
                CaptionML=[ENU=" ";
                           ENG=" "];
                ApplicationArea=#Suite;
                PagePartID=Page778;
                PartType=Page }

    { 11  ;1   ;Group     ;
                CaptionML=[ENU=Dimensions (X-Axis);
                           ENG=Dimensions (X-Axis)];
                Visible=IsXAxisVisible;
                GroupType=Group }

    { 1   ;2   ;Part      ;
                Name=SetupXAxis;
                CaptionML=[ENU=" ";
                           ENG=" "];
                PagePartID=Page778;
                Visible=IsXAxisVisible;
                PartType=Page }

  }
  CODE
  {
    VAR
      IsEndDateEnabled@1002 : Boolean;
      IsNoOfPeriodsEnabled@1001 : Boolean;
      IsXAxisVisible@1000 : Boolean;

    LOCAL PROCEDURE SetEnabled@1();
    BEGIN
      IsNoOfPeriodsEnabled := "Base X-Axis on" = "Base X-Axis on"::Period;
      IsXAxisVisible := "Base X-Axis on" <> "Base X-Axis on"::Period;
      IsEndDateEnabled := "Base X-Axis on" <> "Base X-Axis on"::Period;
      CurrPage.SetupYAxis.PAGE.SetViewAsMeasure(TRUE);
      CurrPage.SetupYAxis.PAGE.SetSetupRec(Rec);
      CurrPage.SetupXAxis.PAGE.SetViewAsMeasure(FALSE);
      CurrPage.SetupXAxis.PAGE.SetSetupRec(Rec);
    END;

    BEGIN
    END.
  }
}

