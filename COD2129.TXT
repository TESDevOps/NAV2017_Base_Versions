OBJECT Codeunit 2129 O365 Export Invoices + Email
{
  OBJECT-PROPERTIES
  {
    Date=23/01/17;
    Time=12:00:00;
    Version List=NAVW110.00.00.15052;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SalesInvoiceHeader@1022 : Record 112;
      SalesInvoiceLine@1021 : Record 113;
      TempExcelBuffer@1001 : TEMPORARY Record 370;
      NoInvoicesExportedErr@1005 : TextConst 'ENU=There were no invoices to export.;ENG=There were no invoices to export.';
      InvoicesExportedMsg@1004 : TextConst 'ENU=Your exported invoices have been sent.;ENG=Your exported invoices have been sent.';
      AttachmentNameTxt@1002 : TextConst 'ENU=Invoices.xlsx;ENG=Invoices.xlsx';
      ExportInvoicesEmailSubjectTxt@1007 : TextConst '@@@="%1 = Start Date, %2 =End Date";ENU=Please find the invoices summary and item details from %1 date until %2 date in the attached Excel book.;ENG=Please find the invoices summary and item details from %1 date until %2 date in the attached Excel book.';
      InvoiceNoFieldTxt@1003 : TextConst 'ENU=Invoice No.;ENG=Invoice No.';
      CustomerNameFieldTxt@1006 : TextConst 'ENU=Customer Name;ENG=Customer Name';
      AddressFieldTxt@1008 : TextConst 'ENU=Address;ENG=Address';
      CityFieldTxt@1009 : TextConst 'ENU=City;ENG=City';
      CountyFieldTxt@1010 : TextConst 'ENU=County;ENG=County';
      CountryRegionCodeFieldTxt@1011 : TextConst 'ENU=Country/Region Code;ENG=Country/Region Code';
      InvoiceDateFieldTxt@1012 : TextConst 'ENU=Invoice Date;ENG=Invoice Date';
      NetTotalFieldTxt@1013 : TextConst 'ENU=Net Total;ENG=Net Total';
      TotalIncludingTaxFieldTxt@1014 : TextConst 'ENU=Total Including Tax;ENG=Total Including VAT';
      TaxPercentFieldTxt@1015 : TextConst 'ENU=Tax %;ENG=VAT %';
      InvoicesSummaryHeaderTxt@1016 : TextConst 'ENU=Invoices Summary;ENG=Invoices Summary';
      ItemsHeaderTxt@1017 : TextConst 'ENU=Items;ENG=Items';
      InvoicesSheetNameTxt@1018 : TextConst 'ENU=Invoices;ENG=Invoices';
      CellBold@1000 : Boolean;
      RowNo@1019 : Integer;
      LineRowNo@1020 : Integer;

    PROCEDURE ExportInvoicesToExcelandEmail@2(StartDate@1000 : Date;EndDate@1002 : Date;Email@1012 : Text[80]);
    VAR
      TempEmailItem@1011 : TEMPORARY Record 9500;
      FileManagement@1006 : Codeunit 419;
      EmailSuccess@1001 : Boolean;
      ServerFileName@1005 : Text;
    BEGIN
      TempExcelBuffer.RESET;
      SalesInvoiceHeader.SETRANGE("Document Date",StartDate,EndDate);

      InsertHeaderTextForSalesInvoices;
      InsertHeaderTextForSalesLines;

      InsertSalesInvoices;

      ServerFileName := FileManagement.ServerTempFileName('xlsx');
      TempExcelBuffer.CreateBook(ServerFileName,InvoicesSheetNameTxt);
      TempExcelBuffer.WriteSheet(InvoicesSheetNameTxt,COMPANYNAME,USERID);
      TempExcelBuffer.CloseBook;

      WITH TempEmailItem DO BEGIN
        VALIDATE("Send to",Email);
        VALIDATE(Subject,STRSUBSTNO(ExportInvoicesEmailSubjectTxt,StartDate,EndDate));
        "Attachment File Path" := COPYSTR(ServerFileName,1,250);
        VALIDATE("Attachment Name",AttachmentNameTxt);
        EmailSuccess := Send(TRUE);
      END;

      IF EmailSuccess THEN
        MESSAGE(InvoicesExportedMsg);
    END;

    LOCAL PROCEDURE EnterCell@3(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Variant);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);

      IF CellValue.ISDECIMAL OR CellValue.ISINTEGER THEN
        TempExcelBuffer.VALIDATE("Cell Type",TempExcelBuffer."Cell Type"::Number)
      ELSE
        IF CellValue.ISDATE THEN
          TempExcelBuffer.VALIDATE("Cell Type",TempExcelBuffer."Cell Type"::Date)
        ELSE
          TempExcelBuffer.VALIDATE("Cell Type",TempExcelBuffer."Cell Type"::Text);

      TempExcelBuffer."Cell Value as Text" := FORMAT(CellValue);
      TempExcelBuffer.Bold := CellBold;
      TempExcelBuffer.INSERT(TRUE);
    END;

    LOCAL PROCEDURE InsertSalesInvoiceSummary@8();
    BEGIN
      EnterCell(RowNo,1,SalesInvoiceHeader."No.");
      EnterCell(RowNo,2,SalesInvoiceHeader."Sell-to Customer Name");
      EnterCell(RowNo,3,SalesInvoiceHeader."Sell-to Address");
      EnterCell(RowNo,4,SalesInvoiceHeader."Sell-to City");
      EnterCell(RowNo,5,SalesInvoiceHeader."Sell-to County");
      EnterCell(RowNo,6,SalesInvoiceHeader."Sell-to Country/Region Code");
      EnterCell(RowNo,7,SalesInvoiceHeader."Document Date");
      EnterCell(RowNo,8,SalesInvoiceHeader."Due Date");
      EnterCell(RowNo,9,SalesInvoiceHeader."Tax Liable");
      EnterCell(RowNo,10,SalesInvoiceHeader."Work Description");
      EnterCell(RowNo,11,SalesInvoiceHeader.Amount);
      EnterCell(RowNo,12,SalesInvoiceHeader."Amount Including VAT");
    END;

    LOCAL PROCEDURE InsertSalesLineItem@9();
    BEGIN
      EnterCell(LineRowNo,1,SalesInvoiceLine."Document No.");
      EnterCell(LineRowNo,2,SalesInvoiceHeader."Sell-to Customer Name");
      EnterCell(LineRowNo,3,SalesInvoiceLine.Description);
      EnterCell(LineRowNo,4,SalesInvoiceLine.Quantity);
      EnterCell(LineRowNo,5,SalesInvoiceLine."Unit of Measure");
      EnterCell(LineRowNo,6,SalesInvoiceLine."Unit Price");
      EnterCell(LineRowNo,7,SalesInvoiceLine."Tax Group Code");
      EnterCell(LineRowNo,8,SalesInvoiceLine."VAT %");
      EnterCell(LineRowNo,9,SalesInvoiceLine.Amount);
      EnterCell(LineRowNo,10,SalesInvoiceLine."Amount Including VAT");
    END;

    LOCAL PROCEDURE InsertHeaderTextForSalesInvoices@11();
    BEGIN
      CellBold := TRUE;
      RowNo := 1;
      EnterCell(RowNo,1,InvoicesSummaryHeaderTxt);

      RowNo := RowNo + 1;
      EnterCell(RowNo,1,InvoiceNoFieldTxt);
      EnterCell(RowNo,2,CustomerNameFieldTxt);
      EnterCell(RowNo,3,AddressFieldTxt);
      EnterCell(RowNo,4,CityFieldTxt);
      EnterCell(RowNo,5,CountyFieldTxt);
      EnterCell(RowNo,6,CountryRegionCodeFieldTxt);
      EnterCell(RowNo,7,InvoiceDateFieldTxt);
      EnterCell(RowNo,8,SalesInvoiceHeader.FIELDCAPTION("Due Date"));
      EnterCell(RowNo,9,SalesInvoiceHeader.FIELDCAPTION("Tax Liable"));
      EnterCell(RowNo,10,SalesInvoiceHeader.FIELDCAPTION("Work Description"));
      EnterCell(RowNo,11,NetTotalFieldTxt);
      EnterCell(RowNo,12,TotalIncludingTaxFieldTxt);
      CellBold := FALSE;
    END;

    LOCAL PROCEDURE InsertHeaderTextForSalesLines@12();
    VAR
      NumberOfEmptyLines@1000 : Integer;
    BEGIN
      CellBold := TRUE;
      NumberOfEmptyLines := 5;
      LineRowNo := SalesInvoiceHeader.COUNT + NumberOfEmptyLines;
      EnterCell(LineRowNo,1,ItemsHeaderTxt);

      LineRowNo := LineRowNo + 1;
      EnterCell(LineRowNo,1,InvoiceNoFieldTxt);
      EnterCell(LineRowNo,2,CustomerNameFieldTxt);
      EnterCell(LineRowNo,3,SalesInvoiceLine.FIELDCAPTION(Description));
      EnterCell(LineRowNo,4,SalesInvoiceLine.FIELDCAPTION(Quantity));
      EnterCell(LineRowNo,5,SalesInvoiceLine.FIELDCAPTION("Unit of Measure"));
      EnterCell(LineRowNo,6,SalesInvoiceLine.FIELDCAPTION("Unit Price"));
      EnterCell(LineRowNo,7,SalesInvoiceLine.FIELDCAPTION("Tax Group Code"));
      EnterCell(LineRowNo,8,TaxPercentFieldTxt);
      EnterCell(LineRowNo,9,SalesInvoiceLine.FIELDCAPTION(Amount));
      EnterCell(LineRowNo,10,SalesInvoiceLine.FIELDCAPTION("Amount Including VAT"));
      CellBold := FALSE;
    END;

    LOCAL PROCEDURE InsertSalesInvoices@16();
    BEGIN
      IF SalesInvoiceHeader.FINDSET THEN BEGIN
        REPEAT
          RowNo := RowNo + 1;
          SalesInvoiceHeader.CALCFIELDS(Amount,"Amount Including VAT");
          InsertSalesInvoiceSummary;
          SalesInvoiceLine.SETRANGE("Document No.",SalesInvoiceHeader."No.");
          IF SalesInvoiceLine.FINDSET THEN BEGIN
            REPEAT
              LineRowNo := LineRowNo + 1;
              InsertSalesLineItem;
            UNTIL SalesInvoiceLine.NEXT = 0;
          END;
        UNTIL SalesInvoiceHeader.NEXT = 0;
      END ELSE
        ERROR(NoInvoicesExportedErr);
    END;

    BEGIN
    END.
  }
}

