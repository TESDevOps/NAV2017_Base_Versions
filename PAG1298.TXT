OBJECT Page 1298 Bank Statement Filter
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Bank Statement Filter;
               ENG=Bank Statement Filter];
    PageType=StandardDialog;
    OnQueryClosePage=BEGIN
                       IF NOT (CloseAction IN [ACTION::OK,ACTION::LookupOK]) THEN
                         EXIT(TRUE);

                       IF FromDate > ToDate THEN BEGIN
                         MESSAGE(DateInputTxt);
                         EXIT(FALSE);
                       END;
                     END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=FromDate;
                CaptionML=[ENU=From Date;
                           ENG=From Date];
                ToolTipML=[ENU=Specifies the first date that the bank statement must contain transactions for.;
                           ENG=Specifies the first date that the bank statement must contain transactions for.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=FromDate }

    { 3   ;1   ;Field     ;
                Name=ToDate;
                CaptionML=[ENU=To Date;
                           ENG=To Date];
                ToolTipML=[ENU=Specifies the last date that the bank statement must contain transactions for.;
                           ENG=Specifies the last date that the bank statement must contain transactions for.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ToDate }

  }
  CODE
  {
    VAR
      FromDate@1000 : Date;
      ToDate@1001 : Date;
      DateInputTxt@1002 : TextConst 'ENU=The value in the From Date field must not be greater than the value in the To Date field.;ENG=The value in the From Date field must not be greater than the value in the To Date field.';

    PROCEDURE GetDates@1(VAR ResultFromDate@1000 : Date;VAR ResultToDate@1001 : Date);
    BEGIN
      ResultFromDate := FromDate;
      ResultToDate := ToDate;
    END;

    PROCEDURE SetDates@2(NewFromDate@1000 : Date;NewToDate@1001 : Date);
    BEGIN
      IF NewFromDate > NewToDate THEN
        ERROR(DateInputTxt);

      FromDate := NewFromDate;
      ToDate := NewToDate;
    END;

    BEGIN
    END.
  }
}

