OBJECT Codeunit 1330 Instruction Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00,NAVGB10.00;
  }
  PROPERTIES
  {
    Permissions=TableData 1518=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NotAllowedToPostOutsideFiscalYearErr@1000 : TextConst 'ENU=You cannot post when one or more dates is outside the current fiscal year.;ENG=You cannot post when one or more dates is outside the current fiscal year.';
      WarnUnpostedDocumentsTxt@1006 : TextConst 'ENU=Warn about unposted documents.;ENG=Warn about unposted documents.';
      WarnUnpostedDocumentsDescriptionTxt@1005 : TextConst 'ENU=Show warning when you close a document that you have not posted.;ENG=Show warning when you close a document that you have not posted.';
      ConfirmAfterPostingDocumentsTxt@1004 : TextConst 'ENU=Confirm after posting documents.;ENG=Confirm after posting documents.';
      ConfirmAfterPostingDocumentsDescriptionTxt@1003 : TextConst 'ENU=Show warning when you post a document where you can choose to view the posted document.;ENG=Show warning when you post a document where you can choose to view the posted document.';
      ConfirmPostingOutsideFiscalYearTxt@1002 : TextConst 'ENU=Confirm posting outside the fiscal year.;ENG=Confirm posting outside the fiscal year.';
      ConfirmPostingOutsideFiscalYearDescriptionTxt@1001 : TextConst 'ENU=Show warning when you post entries where the posting date is in another fiscal year.;ENG=Show warning when you post entries where the posting date is in another fiscal year.';

    PROCEDURE ShowConfirm@8(ConfirmQst@1000 : Text;InstructionType@1001 : Code[50]) : Boolean;
    BEGIN
      IF GUIALLOWED AND IsEnabled(InstructionType) THEN
        EXIT(CONFIRM(ConfirmQst));

      EXIT(TRUE);
    END;

    PROCEDURE ConfirmPostingOutsideFiscalYear@9(ConfirmQst@1003 : Text;PostingDate@1001 : Date;InstructionType@1000 : Code[50]) : Boolean;
    VAR
      AccountingPeriod@1002 : Record 10560;
    BEGIN
      IF GUIALLOWED AND NOT IsEnabled(InstructionType) THEN BEGIN
        FindNextFYStartingDate(AccountingPeriod);
        IF PostingDate >= AccountingPeriod."Period Start" THEN BEGIN
          IF CONFIRM(ConfirmQst,FALSE) THEN
            EXIT(TRUE);
          ERROR(NotAllowedToPostOutsideFiscalYearErr);
        END;
      END;
    END;

    PROCEDURE DisableMessageForCurrentUser@4(InstructionType@1002 : Code[50]);
    VAR
      UserPreference@1000 : Record 1306;
    BEGIN
      UserPreference.DisableInstruction(InstructionType);
    END;

    PROCEDURE EnableMessageForCurrentUser@10(InstructionType@1002 : Code[50]);
    VAR
      UserPreference@1000 : Record 1306;
    BEGIN
      UserPreference.EnableInstruction(InstructionType);
    END;

    PROCEDURE IsEnabled@1(InstructionType@1003 : Code[50]) : Boolean;
    VAR
      UserPreference@1000 : Record 1306;
    BEGIN
      EXIT(NOT UserPreference.GET(USERID,InstructionType));
    END;

    PROCEDURE ShowPostedConfirmationMessageCode@6() : Code[50];
    BEGIN
      EXIT(UPPERCASE('ShowPostedConfirmationMessage'));
    END;

    PROCEDURE QueryPostOnCloseCode@2() : Code[50];
    BEGIN
      EXIT(UPPERCASE('QueryPostOnClose'));
    END;

    PROCEDURE OfficeNoCompanyDlgCode@7() : Code[50];
    BEGIN
      EXIT(UPPERCASE('OfficeNoCompanyDlg'));
    END;

    PROCEDURE OfficeUpdateNotificationCode@3() : Code[50];
    BEGIN
      EXIT(UPPERCASE('OfficeUpdateNotification'));
    END;

    PROCEDURE PostingOutsideFiscalYearNotAllowedCode@5() : Code[50];
    BEGIN
      EXIT(UPPERCASE('PostingOutsideFiscalYearNotAllowed'));
    END;

    PROCEDURE MarkBookingAsInvoicedWarningCode@15() : Code[50];
    BEGIN
      EXIT(UPPERCASE('MarkBookingAaInvoicedWarning'));
    END;

    LOCAL PROCEDURE FindNextFYStartingDate@11(VAR AccountingPeriod@1000 : Record 10560);
    BEGIN
      AccountingPeriod.SETRANGE("Period Type",AccountingPeriod."Period Type"::Year);
      AccountingPeriod.SETRANGE(Closed,FALSE);
      AccountingPeriod.FINDSET;
      // Try to get starting period of next opened fiscal year
      IF AccountingPeriod.NEXT = 0 THEN
        AccountingPeriod."Period Start" := CALCDATE('<CY+1D>',AccountingPeriod."Period Start");
    END;

    PROCEDURE GetClosingUnpostedDocumentNotificationId@16() : GUID;
    BEGIN
      EXIT('612A2701-4BBB-4C5B-B4C0-629D96B60644');
    END;

    PROCEDURE GetOpeningPostedDocumentNotificationId@17() : GUID;
    BEGIN
      EXIT('0C6ED8F1-7408-4352-8DD1-B9F17332607D');
    END;

    PROCEDURE GetPostingOutsideFiscalYeartNotificationId@14() : GUID;
    BEGIN
      EXIT('F76D6004-5EC5-4DEA-B14D-71B2AEB53ACF');
    END;

    [EventSubscriber(Page,1518,OnInitializingNotificationWithDefaultState)]
    LOCAL PROCEDURE OnInitializingNotificationWithDefaultState@13();
    VAR
      MyNotifications@1000 : Record 1518;
    BEGIN
      MyNotifications.InsertDefault(GetClosingUnpostedDocumentNotificationId,
        WarnUnpostedDocumentsTxt,
        WarnUnpostedDocumentsDescriptionTxt,
        IsEnabled(QueryPostOnCloseCode));
      MyNotifications.InsertDefault(GetOpeningPostedDocumentNotificationId,
        ConfirmAfterPostingDocumentsTxt,
        ConfirmAfterPostingDocumentsDescriptionTxt,
        IsEnabled(ShowPostedConfirmationMessageCode));
      MyNotifications.InsertDefault(GetPostingOutsideFiscalYeartNotificationId,
        ConfirmPostingOutsideFiscalYearTxt,
        ConfirmPostingOutsideFiscalYearDescriptionTxt,
        IsEnabled(PostingOutsideFiscalYearNotAllowedCode));
    END;

    [EventSubscriber(Table,1518,OnStateChanged)]
    LOCAL PROCEDURE OnStateChanged@12(NotificationId@1000 : GUID;NewEnabledState@1001 : Boolean);
    BEGIN
      CASE NotificationId OF
        GetClosingUnpostedDocumentNotificationId:
          IF NewEnabledState THEN
            EnableMessageForCurrentUser(QueryPostOnCloseCode)
          ELSE
            DisableMessageForCurrentUser(QueryPostOnCloseCode);
        GetOpeningPostedDocumentNotificationId:
          IF NewEnabledState THEN
            EnableMessageForCurrentUser(ShowPostedConfirmationMessageCode)
          ELSE
            DisableMessageForCurrentUser(ShowPostedConfirmationMessageCode);
        GetPostingOutsideFiscalYeartNotificationId:
          IF NewEnabledState THEN
            EnableMessageForCurrentUser(PostingOutsideFiscalYearNotAllowedCode)
          ELSE
            DisableMessageForCurrentUser(PostingOutsideFiscalYearNotAllowedCode);
      END;
    END;

    BEGIN
    END.
  }
}

