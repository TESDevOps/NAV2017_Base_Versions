OBJECT Page 695 Confirm Financial Void
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Confirm Financial Void;
               ENG=Confirm Financial Void];
    PageType=ConfirmationDialog;
    OnInit=BEGIN
             CurrPage.LOOKUPMODE := TRUE;
           END;

    OnOpenPage=BEGIN
                 WITH CheckLedgerEntry DO BEGIN
                   VoidDate := "Check Date";
                   IF "Bal. Account Type" IN ["Bal. Account Type"::Vendor,"Bal. Account Type"::Customer] THEN
                     VoidType := VoidType::"Unapply and void check"
                   ELSE
                     VoidType := VoidType::"Void check only";
                 END;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 19  ;1   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                CaptionClass=FORMAT(Text002);
                Editable=FALSE }

    { 12  ;1   ;Field     ;
                CaptionML=[ENU=Void Date;
                           ENG=Void Date];
                ToolTipML=[ENU=Specifies the date that the void entry will be posted regardless of the void type that is selected. All of the unapply postings will also use the Void Date, if the Unapply and Void Check type is selected.;
                           ENG=Specifies the date that the void entry will be posted regardless of the void type that is selected. All of the unapply postings will also use the Void Date, if the Unapply and Void Cheque type is selected.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VoidDate;
                OnValidate=BEGIN
                             IF VoidDate < CheckLedgerEntry."Check Date" THEN
                               ERROR(Text000,CheckLedgerEntry.FIELDCAPTION("Check Date"));
                           END;
                            }

    { 14  ;1   ;Field     ;
                CaptionML=[ENU=Type of Void;
                           ENG=Type of Void];
                ToolTipML=[ENU=Specifies how checks are voided. Unapply and Void Check: The payment will be unapplied so that the vendor ledger entry for the invoice will be open, and the payment will be reversed by the voided check. Void Check Only: The vendor ledger entry will still be closed by the payment entry, and the voided check entry will be open.;
                           ENG=Specifies how cheques are voided. Unapply and Void Cheque: The payment will be unapplied so that the vendor ledger entry for the invoice will be open, and the payment will be reversed by the voided cheque. Void Cheque Only: The vendor ledger entry will still be closed by the payment entry, and the voided cheque entry will be open.];
                OptionCaptionML=[ENU=Unapply and void check,Void check only;
                                 ENG=Unapply and void cheque,Void cheque only];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VoidType }

    { 17  ;1   ;Group     ;
                CaptionML=[ENU=Details;
                           ENG=Details] }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Bank Account No.;
                           ENG=Bank Account No.];
                ToolTipML=[ENU=Specifies the bank account.;
                           ENG=Specifies the bank account.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CheckLedgerEntry."Bank Account No.";
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Check No.;
                           ENG=Cheque No.];
                ToolTipML=[ENU=Specifies the check number to be voided.;
                           ENG=Specifies the cheque number to be voided.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CheckLedgerEntry."Check No.";
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CheckLedgerEntry."Bal. Account No.";
                CaptionClass=FORMAT(STRSUBSTNO(Text001,CheckLedgerEntry."Bal. Account Type"));
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           ENG=Amount];
                ToolTipML=[ENU=Specifies the amount to be voided.;
                           ENG=Specifies the amount to be voided.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CheckLedgerEntry.Amount;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      CheckLedgerEntry@1002 : Record 272;
      VoidDate@1001 : Date;
      VoidType@1000 : 'Unapply and void check,Void check only';
      Text000@1003 : TextConst 'ENU=Void Date must not be before the original %1.;ENG=Void Date must not be before the original %1.';
      Text001@1004 : TextConst 'ENU=%1 No.;ENG=%1 No.';
      Text002@1005 : TextConst 'ENU=Do you want to void this check?;ENG=Do you want to void this cheque?';

    PROCEDURE SetCheckLedgerEntry@1(VAR NewCheckLedgerEntry@1000 : Record 272);
    BEGIN
      CheckLedgerEntry := NewCheckLedgerEntry;
    END;

    PROCEDURE GetVoidDate@2() : Date;
    BEGIN
      EXIT(VoidDate);
    END;

    PROCEDURE GetVoidType@3() : Integer;
    BEGIN
      EXIT(VoidType);
    END;

    PROCEDURE InitializeRequest@4(VoidCheckdate@1000 : Date;VoiceCheckType@1001 : Option);
    BEGIN
      VoidDate := VoidCheckdate;
      VoidType := VoiceCheckType;
    END;

    BEGIN
    END.
  }
}

