OBJECT Page 5335 Integration Table Mapping List
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Integration Table Mappings;
               ENG=Integration Table Mappings];
    InsertAllowed=No;
    SourceTable=Table5335;
    PageType=List;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Synchronization,Mapping;
                                ENG=New,Process,Report,Synchronisation,Mapping];
    OnAfterGetRecord=BEGIN
                       IntegrationTableCaptionValue := ObjectTranslation.TranslateObject(ObjectTranslation."Object Type"::Table,"Integration Table ID");
                       TableCaptionValue := ObjectTranslation.TranslateObject(ObjectTranslation."Object Type"::Table,"Table ID");
                       IntegrationFieldCaptionValue := GetFieldCaption;
                       IntegrationFieldTypeValue := GetFieldType;

                       TableFilter := GetTableFilter;
                       IntegrationTableFilter := GetIntegrationTableFilter;

                       HasRecords := NOT ISEMPTY;
                     END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 18      ;1   ;Action    ;
                      Name=FieldMapping;
                      CaptionML=[ENU=Fields;
                                 ENG=Fields];
                      ToolTipML=[ENU=View fields in Dynamics CRM integration tables that are mapped to fields in Dynamics NAV.;
                                 ENG=View fields in Dynamics CRM integration tables that are mapped to fields in Dynamics NAV.];
                      RunObject=Page 5361;
                      RunPageLink=Integration Table Mapping Name=FIELD(Name);
                      Promoted=Yes;
                      Enabled=HasRecords;
                      PromotedIsBig=Yes;
                      Image=Relationship;
                      PromotedCategory=Category5;
                      RunPageMode=View }
      { 10      ;1   ;Action    ;
                      Name=View Integration Synch. Job Log;
                      CaptionML=[ENU=Integration Synch. Job Log;
                                 ENG=Integration Synch. Job Log];
                      Promoted=Yes;
                      Enabled=HasRecords;
                      PromotedIsBig=Yes;
                      Image=Log;
                      PromotedCategory=Category4;
                      RunPageMode=View;
                      OnAction=VAR
                                 IntegrationSynchJob@1000 : Record 5338;
                               BEGIN
                                 IF ISEMPTY THEN
                                   EXIT;

                                 IntegrationSynchJob.SETCURRENTKEY("Start Date/Time",ID);
                                 IntegrationSynchJob.ASCENDING := FALSE;
                                 IntegrationSynchJob.FILTERGROUP(2);
                                 IntegrationSynchJob.SETRANGE("Integration Table Mapping Name",Name);
                                 IntegrationSynchJob.FILTERGROUP(0);
                                 IntegrationSynchJob.FINDFIRST;
                                 PAGE.RUN(PAGE::"Integration Synch. Job List",IntegrationSynchJob);
                               END;
                                }
      { 6       ;1   ;Action    ;
                      Name=SynchronizeNow;
                      CaptionML=[ENU=Synchronize Modified Records;
                                 ENG=Synchronise Modified Records];
                      ToolTipML=[ENU=Synchronize records that have been modified since the last time they were synchronized.;
                                 ENG=Synchronise records that have been modified since the last time they were synchronised.];
                      Promoted=Yes;
                      Enabled=HasRecords AND ("Parent Name" = '');
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 IntegrationSynchJobList@1000 : Page 5338;
                               BEGIN
                                 IF ISEMPTY THEN
                                   EXIT;

                                 SynchronizeNow(FALSE);
                                 MESSAGE(SynchronizedModifiedCompletedMsg,IntegrationSynchJobList.CAPTION);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=SynchronizeAll;
                      CaptionML=[ENU=Run Full Synchronization;
                                 ENG=Run Full Synchronisation];
                      ToolTipML=[ENU=Start all the default integration jobs for synchronizing Dynamics NAV record types and Dynamics CRM entities, as defined in the Integration Table Mappings window.;
                                 ENG=Start all the default integration jobs for synchronising Dynamics NAV record types and Dynamics CRM entities, as defined in the Integration Table Mappings window.];
                      Promoted=Yes;
                      Enabled=HasRecords AND ("Parent Name" = '');
                      Image=RefreshLines;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 IntegrationSynchJobList@1000 : Page 5338;
                               BEGIN
                                 IF ISEMPTY THEN
                                   EXIT;

                                 IF NOT CONFIRM(StartFullSynchronizationQst) THEN
                                   EXIT;
                                 SynchronizeNow(TRUE);
                                 MESSAGE(FullSynchronizationCompletedMsg,IntegrationSynchJobList.CAPTION);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the integration table mapping entry.;
                           ENG=Specifies the name of the integration table mapping entry.];
                ApplicationArea=#Suite;
                SourceExpr=Name;
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Table;
                           ENG=Table];
                ToolTipML=[ENU=Specifies the name of the business data table in Microsoft Dynamics NAV to map to the integration table.;
                           ENG=Specifies the name of the business data table in Microsoft Dynamics NAV to map to the integration table.];
                ApplicationArea=#Suite;
                SourceExpr=TableCaptionValue;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                Name=TableFilterValue;
                CaptionML=[ENU=Table Filter;
                           ENG=Table Filter];
                ToolTipML=[ENU=Specifies a filter on the business data table in Microsoft Dynamics NAV to control which records can be synchronized with the corresponding records in the integration table that is specified by the Integration Table ID field.;
                           ENG=Specifies a filter on the business data table in Microsoft Dynamics NAV to control which records can be synchronised with the corresponding records in the integration table that is specified by the Integration Table ID field.];
                ApplicationArea=#Suite;
                SourceExpr=TableFilter;
                OnAssistEdit=VAR
                               FilterPageBuilder@1000 : FilterPageBuilder;
                             BEGIN
                               FilterPageBuilder.ADDTABLE(TableCaptionValue,"Table ID");
                               IF TableFilter <> '' THEN
                                 FilterPageBuilder.SETVIEW(TableCaptionValue,TableFilter);
                               IF FilterPageBuilder.RUNMODAL THEN BEGIN
                                 TableFilter := FilterPageBuilder.GETVIEW(TableCaptionValue,TRUE);
                                 SetTableFilter(TableFilter);
                               END;
                             END;
                              }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the synchronization direction.;
                           ENG=Specifies the synchronisation direction.];
                SourceExpr=Direction;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Integration Table;
                           ENG=Integration Table];
                ToolTipML=[ENU=Specifies the ID of the integration table to map to the business table.;
                           ENG=Specifies the ID of the integration table to map to the business table.];
                ApplicationArea=#Suite;
                SourceExpr=IntegrationTableCaptionValue;
                Enabled=FALSE }

    { 16  ;2   ;Field     ;
                Name=IntegrationFieldCaption;
                CaptionML=[ENU=Integration Field;
                           ENG=Integration Field];
                ToolTipML=[ENU=Specifies the ID of the field in the integration table to map to the business table.;
                           ENG=Specifies the ID of the field in the integration table to map to the business table.];
                ApplicationArea=#Suite;
                SourceExpr=IntegrationFieldCaptionValue;
                Editable=FALSE;
                OnDrillDown=VAR
                              CRMOptionMapping@1002 : Record 5334;
                              Field@1001 : Record 2000000041;
                            BEGIN
                              IF "Int. Table UID Field Type" = Field.Type::Option THEN BEGIN
                                CRMOptionMapping.FILTERGROUP(2);
                                CRMOptionMapping.SETRANGE("Table ID","Table ID");
                                CRMOptionMapping.FILTERGROUP(0);
                                PAGE.RUNMODAL(PAGE::"CRM Option Mapping",CRMOptionMapping);
                              END;
                            END;
                             }

    { 17  ;2   ;Field     ;
                Name=IntegrationFieldType;
                CaptionML=[ENU=Integration Field Type;
                           ENG=Integration Field Type];
                ToolTipML=[ENU=Specifies the type of the field in the integration table to map to the business table.;
                           ENG=Specifies the type of the field in the integration table to map to the business table.];
                ApplicationArea=#Suite;
                SourceExpr=IntegrationFieldTypeValue;
                Editable=FALSE }

    { 13  ;2   ;Field     ;
                Name=IntegrationTableFilter;
                CaptionML=[ENU=Integration Table Filter;
                           ENG=Integration Table Filter];
                ToolTipML=[ENU=Specifies a filter on the integration table to control which records can be synchronized with the corresponding records in the business data table that is specified by the Table field.;
                           ENG=Specifies a filter on the integration table to control which records can be synchronised with the corresponding records in the business data table that is specified by the Table field.];
                ApplicationArea=#Suite;
                SourceExpr=IntegrationTableFilter;
                OnAssistEdit=VAR
                               FilterPageBuilder@1000 : FilterPageBuilder;
                             BEGIN
                               FilterPageBuilder.ADDTABLE(IntegrationTableCaptionValue,"Integration Table ID");
                               IF IntegrationTableFilter <> '' THEN
                                 FilterPageBuilder.SETVIEW(IntegrationTableCaptionValue,IntegrationTableFilter);
                               IF FilterPageBuilder.RUNMODAL THEN BEGIN
                                 IntegrationTableFilter := FilterPageBuilder.GETVIEW(IntegrationTableCaptionValue,TRUE);
                                 SetIntegrationTableFilter(IntegrationTableFilter);
                               END;
                             END;
                              }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a configuration template to use when creating new records in the Microsoft Dynamics NAV business table (specified by the Table ID field) during synchronization.;
                           ENG=Specifies a configuration template to use when creating new records in the Microsoft Dynamics NAV business table (specified by the Table ID field) during synchronisation.];
                ApplicationArea=#Suite;
                SourceExpr="Table Config Template Code" }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a configuration template to use for creating new records in the external database table, such as Microsoft Dynamics CRM.;
                           ENG=Specifies a configuration template to use for creating new records in the external database table, such as Microsoft Dynamics CRM.];
                ApplicationArea=#Suite;
                SourceExpr="Int. Tbl. Config Template Code" }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how to handle uncoupled records in Microsoft Dynamics CRM entities and Microsoft Dynamics NAV tables when synchronization is performed by an integration synchronization job.;
                           ENG=Specifies how to handle uncoupled records in Microsoft Dynamics CRM entities and Microsoft Dynamics NAV tables when synchronisation is performed by an integration synchronisation job.];
                ApplicationArea=#Suite;
                SourceExpr="Synch. Only Coupled Records" }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies text that appears before the caption of the integration table wherever the caption is used.;
                           ENG=Specifies text that appears before the caption of the integration table wherever the caption is used.];
                ApplicationArea=#Suite;
                SourceExpr="Int. Tbl. Caption Prefix";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      ObjectTranslation@1002 : Record 377;
      TableCaptionValue@1000 : Text[250];
      IntegrationFieldCaptionValue@1009 : Text;
      IntegrationFieldTypeValue@1010 : Text;
      IntegrationTableCaptionValue@1001 : Text[250];
      TableFilter@1003 : Text;
      IntegrationTableFilter@1004 : Text;
      StartFullSynchronizationQst@1005 : TextConst 'ENU=You are about synchronize all data within the mapping. This process may take several minutes.\\Do you want to continue?;ENG=You are about synchronise all data within the mapping. This process may take several minutes.\\Do you want to continue?';
      SynchronizedModifiedCompletedMsg@1006 : TextConst '@@@=%1 caption from page 5338;ENU=Synchronized Modified Records completed.\See the %1 window for details.;ENG=Synchronised Modified Records completed.\See the %1 window for details.';
      FullSynchronizationCompletedMsg@1007 : TextConst '@@@=%1 caption from page 5338;ENU=Full Synchronization completed.\See the %1 window for details.;ENG=Full Synchronisation completed.\See the %1 window for details.';
      HasRecords@1008 : Boolean;

    LOCAL PROCEDURE GetFieldCaption@4() : Text;
    VAR
      Field@1000 : Record 2000000041;
    BEGIN
      IF Field.GET("Integration Table ID","Integration Table UID Fld. No.") THEN
        EXIT(Field."Field Caption");
    END;

    LOCAL PROCEDURE GetFieldType@1() : Text;
    VAR
      Field@1000 : Record 2000000041;
    BEGIN
      Field.Type := "Int. Table UID Field Type";
      EXIT(FORMAT(Field.Type))
    END;

    BEGIN
    END.
  }
}

