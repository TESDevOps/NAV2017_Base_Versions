OBJECT Codeunit 81 Sales-Post (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    TableNo=36;
    EventSubscriberInstance=Manual;
    OnRun=VAR
            SalesHeader@1000 : Record 36;
          BEGIN
            IF NOT FIND THEN
              ERROR(NothingToPostErr);

            SalesHeader.COPY(Rec);
            Code(SalesHeader);
            Rec := SalesHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice;ENG=&Ship,&Invoice,Ship &and Invoice';
      Text001@1001 : TextConst 'ENU=Do you want to post the %1?;ENG=Do you want to post the %1?';
      Text002@1002 : TextConst 'ENU=&Receive,&Invoice,Receive &and Invoice;ENG=&Receive,&Invoice,Receive &and Invoice';
      Selection@1005 : Integer;
      NothingToPostErr@1006 : TextConst 'ENU=There is nothing to post.;ENG=There is nothing to post.';

    LOCAL PROCEDURE Code@1(VAR SalesHeader@1001 : Record 36);
    VAR
      SalesSetup@1002 : Record 311;
      SalesPostViaJobQueue@1000 : Codeunit 88;
    BEGIN
      WITH SalesHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              Selection := STRMENU(Text000,3);
              Ship := Selection IN [1,3];
              Invoice := Selection IN [2,3];
              IF Selection = 0 THEN
                EXIT;
            END;
          "Document Type"::"Return Order":
            BEGIN
              Selection := STRMENU(Text002,3);
              IF Selection = 0 THEN
                EXIT;
              Receive := Selection IN [1,3];
              Invoice := Selection IN [2,3];
            END
          ELSE
            IF NOT CONFIRM(Text001,FALSE,LOWERCASE(FORMAT("Document Type"))) THEN
              EXIT;
        END;
        "Print Posted Documents" := FALSE;

        SalesSetup.GET;
        IF SalesSetup."Post with Job Queue" THEN
          SalesPostViaJobQueue.EnqueueSalesDoc(SalesHeader)
        ELSE
          CODEUNIT.RUN(CODEUNIT::"Sales-Post",SalesHeader);
      END;
    END;

    PROCEDURE Preview@2(VAR SalesHeader@1000 : Record 36);
    VAR
      SalesPostYesNo@1001 : Codeunit 81;
      GenJnlPostPreview@1002 : Codeunit 19;
    BEGIN
      BINDSUBSCRIPTION(SalesPostYesNo);
      GenJnlPostPreview.Preview(SalesPostYesNo,SalesHeader);
    END;

    [EventSubscriber(Codeunit,19,OnRunPreview)]
    LOCAL PROCEDURE OnRunPreview@3(VAR Result@1000 : Boolean;Subscriber@1001 : Variant;RecVar@1002 : Variant);
    VAR
      SalesHeader@1004 : Record 36;
      SalesPost@1003 : Codeunit 80;
    BEGIN
      WITH SalesHeader DO BEGIN
        COPY(RecVar);
        Receive := "Document Type" = "Document Type"::"Return Order";
        Ship := "Document Type" = "Document Type"::Order;
        Invoice := TRUE;
      END;
      SalesPost.SetPreviewMode(TRUE);
      Result := SalesPost.RUN(SalesHeader);
    END;

    BEGIN
    END.
  }
}

