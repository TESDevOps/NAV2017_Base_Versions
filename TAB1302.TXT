OBJECT Table 1302 Dimensions Template
{
  OBJECT-PROPERTIES
  {
    Date=04/08/17;
    Time=12:00:00;
    Version List=NAVW110.00.00.17972;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Master Record Template Code" := GetParentTemplateCode;
               VALIDATE(Description);
               VALIDATE("Table Id");
               InsertConfigurationTemplateHeaderAndLines(Code,Description,Rec,GetParentTemplateCode);
             END;

    OnModify=VAR
               TempRecordBuffer@1002 : TEMPORARY Record 6529;
             BEGIN
               TESTFIELD(Code);
               VALIDATE("Table Id");

               CreateFieldNoList(TempRecordBuffer);
               ConfigTemplateManagement.UpdateConfigTemplateAndLines(Code,Description,DATABASE::"Default Dimension",Rec,TempRecordBuffer);
             END;

    OnDelete=VAR
               ConfigTemplateHeader@1000 : Record 8618;
             BEGIN
               IF ConfigTemplateHeader.GET(Code) THEN BEGIN
                 ConfigTemplateManagement.RemoveRelatedTemplate("Master Record Template Code",Code);
                 ConfigTemplateHeader.DELETE(TRUE);
               END;
             END;

    CaptionML=[ENU=Dimensions Template;
               ENG=Dimensions Template];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ENG=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF xRec."Dimension Code" <> "Dimension Code" THEN BEGIN
                                                                  "Dimension Value Code" := '';
                                                                  "Value Posting" := "Value Posting"::" ";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Dimension Code;
                                                              ENG=Dimension Code];
                                                   NotBlank=Yes }
    { 4   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   CaptionML=[ENU=Dimension Value Code;
                                                              ENG=Dimension Value Code] }
    { 5   ;   ;Value Posting       ;Option        ;OnValidate=BEGIN
                                                                IF "Value Posting" = "Value Posting"::"No Code" THEN
                                                                  TESTFIELD("Dimension Value Code",'');
                                                              END;

                                                   CaptionML=[ENU=Value Posting;
                                                              ENG=Value Posting];
                                                   OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                                                    ENG=" ,Code Mandatory,Same Code,No Code"];
                                                   OptionString=[ ,Code Mandatory,Same Code,No Code] }
    { 50  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                Description := GetParentTemplateCode;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              ENG=Description] }
    { 51  ;   ;Table Id            ;Integer       ;OnValidate=VAR
                                                                TableIdFilter@1000 : Text;
                                                              BEGIN
                                                                IF "Table Id" = 0 THEN BEGIN
                                                                  TableIdFilter := GETFILTER("Table Id");
                                                                  EVALUATE("Table Id",TableIdFilter);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Table Id;
                                                              ENG=Table Id] }
    { 52  ;   ;Master Record Template Code;Code10 ;CaptionML=[ENU=Master Record Template Code;
                                                              ENG=Master Record Template Code] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ConfigTemplateManagement@1000 : Codeunit 8612;

    LOCAL PROCEDURE CreateFieldNoList@31(VAR TempRecordBuffer@1000 : TEMPORARY Record 6529);
    BEGIN
      AddFieldNo(TempRecordBuffer,FIELDNO("Dimension Code"));
      AddFieldNo(TempRecordBuffer,FIELDNO("Dimension Value Code"));
      AddFieldNo(TempRecordBuffer,FIELDNO("Value Posting"));
    END;

    LOCAL PROCEDURE AddFieldNo@32(VAR TempRecordBuffer@1000 : TEMPORARY Record 6529;FieldNo@1001 : Integer);
    BEGIN
      TempRecordBuffer."Entry No." += 1;
      TempRecordBuffer."Primary Key Field 1 No." := FieldNo;
      TempRecordBuffer.INSERT;
    END;

    PROCEDURE InitializeTemplatesFromMasterRecordTemplate@20(MasterRecordTemplateCode@1001 : Code[10];VAR TempDimensionsTemplate@1003 : TEMPORARY Record 1302;TableID@1004 : Integer);
    VAR
      ConfigTemplateHeader@1002 : Record 8618;
      ConfigTemplateLine@1000 : Record 8619;
    BEGIN
      ConfigTemplateLine.SETRANGE("Data Template Code",MasterRecordTemplateCode);
      ConfigTemplateLine.SETRANGE(Type,ConfigTemplateLine.Type::"Related Template");

      IF ConfigTemplateLine.FINDSET THEN
        REPEAT
          ConfigTemplateHeader.GET(ConfigTemplateLine."Template Code");
          InitializeTempRecordFromConfigTemplate(TempDimensionsTemplate,ConfigTemplateHeader,MasterRecordTemplateCode,TableID);
        UNTIL ConfigTemplateLine.NEXT = 0;
    END;

    PROCEDURE InitializeTempRecordFromConfigTemplate@1(VAR TempDimensionsTemplate@1000 : TEMPORARY Record 1302;ConfigTemplateHeader@1001 : Record 8618;MasterRecordTemplateCode@1004 : Code[10];TableID@1002 : Integer);
    VAR
      RecRef@1003 : RecordRef;
    BEGIN
      TempDimensionsTemplate.INIT;
      TempDimensionsTemplate.Code := ConfigTemplateHeader.Code;
      TempDimensionsTemplate.Description := ConfigTemplateHeader.Description;
      TempDimensionsTemplate."Master Record Template Code" := MasterRecordTemplateCode;
      TempDimensionsTemplate."Dimension Code" := GetDefaultDimensionCode(ConfigTemplateHeader);
      TempDimensionsTemplate."Table Id" := TableID;
      TempDimensionsTemplate.INSERT;

      RecRef.GETTABLE(TempDimensionsTemplate);

      ConfigTemplateManagement.ApplyTemplateLinesWithoutValidation(ConfigTemplateHeader,RecRef);

      RecRef.SETTABLE(TempDimensionsTemplate);
    END;

    LOCAL PROCEDURE InsertConfigurationTemplateHeaderAndLines@2(VAR TemplateCode@1003 : Code[10];TemplateDescription@1004 : Text[50];RecVar@1002 : Variant;ParentTemplateCode@1005 : Code[10]);
    VAR
      TempRecordBuffer@1001 : TEMPORARY Record 6529;
    BEGIN
      CreateFieldNoList(TempRecordBuffer);
      ConfigTemplateManagement.CreateConfigTemplateAndLines(
        TemplateCode,TemplateDescription,DATABASE::"Default Dimension",RecVar,TempRecordBuffer);
      ConfigTemplateManagement.AddRelatedTemplate(ParentTemplateCode,TemplateCode);
    END;

    PROCEDURE InsertDimensionsFromTemplates@17(ConfigTemplateHeader@1003 : Record 8618;MasterRecordNo@1005 : Code[20];TableID@1006 : Integer);
    VAR
      ConfigTemplateLine@1000 : Record 8619;
    BEGIN
      ConfigTemplateLine.SETRANGE(Type,ConfigTemplateLine.Type::"Related Template");
      ConfigTemplateLine.SETRANGE("Data Template Code",ConfigTemplateHeader.Code);

      IF ConfigTemplateLine.FINDSET THEN
        REPEAT
          ConfigTemplateHeader.GET(ConfigTemplateLine."Template Code");
          IF ConfigTemplateHeader."Table ID" = DATABASE::"Default Dimension" THEN
            InsertDimensionFromTemplate(ConfigTemplateHeader,MasterRecordNo,TableID);
        UNTIL ConfigTemplateLine.NEXT = 0;
    END;

    LOCAL PROCEDURE InsertDimensionFromTemplate@16(ConfigTemplateHeader@1006 : Record 8618;MasterRecordNo@1001 : Code[20];TableID@1004 : Integer);
    VAR
      DefaultDimension@1003 : Record 352;
      ConfigTemplateMgt@1002 : Codeunit 8612;
      RecRef@1000 : RecordRef;
    BEGIN
      DefaultDimension.INIT;
      DefaultDimension."No." := MasterRecordNo;
      DefaultDimension."Table ID" := TableID;
      DefaultDimension."Dimension Code" := GetDefaultDimensionCode(ConfigTemplateHeader);
      DefaultDimension.INSERT;

      RecRef.GETTABLE(DefaultDimension);
      ConfigTemplateMgt.UpdateRecord(ConfigTemplateHeader,RecRef);
      RecRef.SETTABLE(DefaultDimension);
    END;

    LOCAL PROCEDURE GetDefaultDimensionCode@9(ConfigTemplateHeader@1000 : Record 8618) : Text[20];
    VAR
      ConfigTemplateLine@1001 : Record 8619;
    BEGIN
      ConfigTemplateLine.SETRANGE("Data Template Code",ConfigTemplateHeader.Code);
      ConfigTemplateLine.SETRANGE("Field ID",FIELDNO("Dimension Code"));
      ConfigTemplateLine.FINDFIRST;

      EXIT(ConfigTemplateLine."Default Value");
    END;

    LOCAL PROCEDURE GetParentTemplateCode@8() : Text[10];
    BEGIN
      EXIT(GETFILTER("Master Record Template Code"));
    END;

    PROCEDURE CreateTemplatesFromExistingMasterRecord@3(MasterRecordNo@1001 : Code[20];MasterRecordTemplateCode@1003 : Code[10];TableID@1000 : Integer);
    VAR
      DefaultDimension@1002 : Record 352;
    BEGIN
      DefaultDimension.SETRANGE("No.",MasterRecordNo);
      DefaultDimension.SETRANGE("Table ID",TableID);

      IF DefaultDimension.FINDSET THEN
        REPEAT
          CreateTemplateFromExistingDefaultDimension(DefaultDimension,MasterRecordTemplateCode);
        UNTIL DefaultDimension.NEXT = 0;
    END;

    LOCAL PROCEDURE CreateTemplateFromExistingDefaultDimension@10(DefaultDimension@1010 : Record 352;MasterRecordTemplateCode@1011 : Code[10]);
    VAR
      NewTemplateCode@1009 : Code[10];
    BEGIN
      InsertConfigurationTemplateHeaderAndLines(NewTemplateCode,MasterRecordTemplateCode,DefaultDimension,MasterRecordTemplateCode);
    END;

    BEGIN
    END.
  }
}

