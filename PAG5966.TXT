OBJECT Page 5966 Service Quote Lines
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Quote Lines;
               ENG=Service Quote Lines];
    SourceTable=Table5902;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    DataCaptionFields=Document Type,Document No.;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 CLEAR(SelectionFilter);
                 SetSelectionFilter;

                 ServMgtSetup.GET;
                 CASE ServMgtSetup."Fault Reporting Level" OF
                   ServMgtSetup."Fault Reporting Level"::None:
                     BEGIN
                       FaultAreaCodeVisible := FALSE;
                       SymptomCodeVisible := FALSE;
                       FaultCodeVisible := FALSE;
                       ResolutionCodeVisible := FALSE;
                     END;
                   ServMgtSetup."Fault Reporting Level"::Fault:
                     BEGIN
                       FaultAreaCodeVisible := FALSE;
                       SymptomCodeVisible := FALSE;
                       FaultCodeVisible := TRUE;
                       ResolutionCodeVisible := TRUE;
                     END;
                   ServMgtSetup."Fault Reporting Level"::"Fault+Symptom":
                     BEGIN
                       FaultAreaCodeVisible := FALSE;
                       SymptomCodeVisible := TRUE;
                       FaultCodeVisible := TRUE;
                       ResolutionCodeVisible := TRUE;
                     END;
                   ServMgtSetup."Fault Reporting Level"::"Fault+Symptom+Area (IRIS)":
                     BEGIN
                       FaultAreaCodeVisible := TRUE;
                       SymptomCodeVisible := TRUE;
                       FaultCodeVisible := TRUE;
                       ResolutionCodeVisible := TRUE;
                     END;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  CLEAR(ShortcutDimCode);
                  ServHeader.GET("Document Type","Document No.");
                  IF ServHeader."Link Service to Service Item" THEN
                    IF SelectionFilter <> SelectionFilter::"Lines Not Item Related" THEN
                      VALIDATE("Service Item Line No.",ServItemLineNo)
                    ELSE
                      VALIDATE("Service Item Line No.",0)
                  ELSE
                    VALIDATE("Service Item Line No.",0);
                END;

    OnInsertRecord=BEGIN
                     "Line No." := GetNextLineNo(xRec,BelowxRec);
                   END;

    OnDeleteRecord=VAR
                     ReserveServLine@1000 : Codeunit 99000842;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReserveServLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReserveServLine.DeleteLine(Rec);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 109     ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 116     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 129     ;2   ;Separator ;
                      CaptionML=[ENU="";
                                 ENG=""] }
      { 115     ;2   ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ENG=Item Availability by];
                      Image=ItemAvailability }
      { 2       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 125     ;3   ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 126     ;3   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 127     ;3   ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 3       ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ENG=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 27      ;2   ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ENG=Item &Tracking Lines];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 130     ;2   ;Separator ;
                      CaptionML=[ENU="";
                                 ENG=""] }
      { 132     ;2   ;Action    ;
                      CaptionML=[ENU=Select Item &Substitution;
                                 ENG=Select Item &Substitution];
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 ShowItemSub;
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 94      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 111     ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 ENG=Calculate &Invoice Discount];
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Service-Disc. (Yes/No)",Rec);
                               END;
                                }
      { 123     ;2   ;Action    ;
                      CaptionML=[ENU=Get Price;
                                 ENG=Get Price];
                      Image=Price;
                      OnAction=BEGIN
                                 ShowPrices;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 124     ;2   ;Action    ;
                      CaptionML=[ENU=Get Li&ne Discount;
                                 ENG=Get Li&ne Discount];
                      Image=LineDiscount;
                      OnAction=BEGIN
                                 ShowLineDisc;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 131     ;2   ;Separator  }
      { 97      ;2   ;Action    ;
                      AccessByPermission=TableData 279=R;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 ENG=Insert &Ext. Texts];
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 98      ;2   ;Action    ;
                      CaptionML=[ENU=Insert &Starting Fee;
                                 ENG=Insert &Starting Fee];
                      Image=InsertStartingFee;
                      OnAction=BEGIN
                                 InsertStartFee;
                               END;
                                }
      { 16      ;2   ;Action    ;
                      CaptionML=[ENU=Insert &Travel Fee;
                                 ENG=Insert &Travel Fee];
                      Image=InsertTravelFee;
                      OnAction=BEGIN
                                 InsertTravelFee;
                               END;
                                }
      { 99      ;2   ;Action    ;
                      CaptionML=[ENU=Split &Resource Line;
                                 ENG=Split &Resource Line];
                      Image=Split;
                      OnAction=BEGIN
                                 SplitResourceLine;
                               END;
                                }
      { 17      ;2   ;Action    ;
                      AccessByPermission=TableData 5718=R;
                      CaptionML=[ENU=Nonstoc&k Items;
                                 ENG=Nonstoc&k Items];
                      Image=NonStockItem;
                      OnAction=BEGIN
                                 ShowNonstock;
                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 107 ;1   ;Field     ;
                CaptionML=[ENU=Service Quote Lines Filter;
                           ENG=Service Quote Lines Filter];
                ToolTipML=[ENU=Specifies a selection filter.;
                           ENG=Specifies a selection filter.];
                OptionCaptionML=[ENU=All,Per Selected Service Item Line,Service Item Line Non-Related;
                                 ENG=All,Per Selected Service Item Line,Service Item Line Non-Related];
                SourceExpr=SelectionFilter;
                OnValidate=BEGIN
                             SelectionFilterOnAfterValidate;
                           END;
                            }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service item line number linked to this service line.;
                           ENG=Specifies the service item line number linked to this service line.];
                SourceExpr="Service Item Line No.";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service item number linked to this service line.;
                           ENG=Specifies the service item number linked to this service line.];
                SourceExpr="Service Item No." }

    { 70  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service item serial number linked to this line.;
                           ENG=Specifies the service item serial number linked to this line.];
                SourceExpr="Service Item Serial No.";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the description of the service item line in the service order.;
                           ENG=Specifies the description of the service item line in the service order.];
                SourceExpr="Service Item Line Description";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the service line.;
                           ENG=Specifies the type of the service line.];
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of an item, general ledger account, resource code, cost, or standard text.;
                           ENG=Specifies the number of an item, general ledger account, resource code, cost, or standard text.];
                SourceExpr="No.";
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;
                            }

    { 93  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code of a variant set up for the item on this line.;
                           ENG=Specifies a code of a variant set up for the item on this line.];
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of an item, resource, cost, or a standard text on the line.;
                           ENG=Specifies the description of an item, resource, cost, or a standard text on the line.];
                SourceExpr=Description }

    { 112 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the item is a nonstock item.;
                           ENG=Specifies that the item is a nonstock item.];
                SourceExpr=Nonstock }

    { 128 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of one unit of measure of the item, resource time, or cost on this line.;
                           ENG=Specifies the code of one unit of measure of the item, resource time, or cost on this line.];
                SourceExpr="Unit of Measure Code" }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an additional description of the item, resource, or cost.;
                           ENG=Specifies an additional description of the item, resource, or cost.];
                SourceExpr="Description 2";
                Visible=FALSE }

    { 79  ;2   ;Field     ;
                ToolTipML=[ENU=Indicates whether a substitute is available for the item.;
                           ENG=Indicates whether a substitute is available for the item.];
                SourceExpr="Substitution Available";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the type of work performed by the resource registered on this line.;
                           ENG=Specifies a code for the type of work performed by the resource registered on this line.];
                SourceExpr="Work Type Code";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Indicates the inventory location from where the items on the line should be taken and where they should be registered.;
                           ENG=Indicates the inventory location from where the items on the line should be taken and where they should be registered.];
                SourceExpr="Location Code" }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of item units, resource hours, cost on the service line.;
                           ENG=Specifies the number of item units, resource hours, cost on the service line.];
                DecimalPlaces=0:5;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the fault reason for this service line.;
                           ENG=Specifies the code of the fault reason for this service line.];
                SourceExpr="Fault Reason Code";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the fault area associated with this line.;
                           ENG=Specifies the code of the fault area associated with this line.];
                SourceExpr="Fault Area Code";
                Visible=FaultAreaCodeVisible }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the symptom associated with this line.;
                           ENG=Specifies the code of the symptom associated with this line.];
                SourceExpr="Symptom Code";
                Visible=SymptomCodeVisible }

    { 76  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the fault associated with this line.;
                           ENG=Specifies the code of the fault associated with this line.];
                SourceExpr="Fault Code";
                Visible=FaultCodeVisible }

    { 119 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the resolution associated with this line.;
                           ENG=Specifies the code of the resolution associated with this line.];
                SourceExpr="Resolution Code";
                Visible=ResolutionCodeVisible }

    { 121 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service price adjustment group code that applies to this line.;
                           ENG=Specifies the service price adjustment group code that applies to this line.];
                SourceExpr="Serv. Price Adjmt. Gr. Code";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price per item unit, resource, or cost on the line.;
                           ENG=Specifies the price per item unit, resource, or cost on the line.];
                BlankZero=Yes;
                SourceExpr="Unit Price" }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the discount defined for a particular group, item, or combination of the two.;
                           ENG=Specifies the discount defined for a particular group, item, or combination of the two.];
                BlankZero=Yes;
                SourceExpr="Line Discount %" }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of discount calculated for this line.;
                           ENG=Specifies the amount of discount calculated for this line.];
                BlankZero=Yes;
                SourceExpr="Line Discount Amount" }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the line discount assigned to this line.;
                           ENG=Specifies the type of the line discount assigned to this line.];
                SourceExpr="Line Discount Type" }

    { 135 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the invoice discount will be calculated for the line.;
                           ENG=Specifies that the invoice discount will be calculated for the line.];
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 137 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice discount amount that is calculated on the line.;
                           ENG=Specifies the invoice discount amount that is calculated on the line.];
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net amount (excluding the invoice discount amount) on the line, in the currency of the service document.;
                           ENG=Specifies the net amount (excluding the invoice discount amount) on the line, in the currency of the service document.];
                BlankZero=Yes;
                SourceExpr="Line Amount" }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the warranty discount is excluded on this line.;
                           ENG=Specifies that the warranty discount is excluded on this line.];
                SourceExpr="Exclude Warranty" }

    { 117 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the contract discount is excluded for the item, resource, or cost on this line.;
                           ENG=Specifies that the contract discount is excluded for the item, resource, or cost on this line.];
                SourceExpr="Exclude Contract Discount" }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that a warranty discount is available on this line of type Item or Resource.;
                           ENG=Specifies that a warranty discount is available on this line of type Item or Resource.];
                SourceExpr=Warranty }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the percentage of the warranty discount that is valid for the items or resources on this line.;
                           ENG=Specifies the percentage of the warranty discount that is valid for the items or resources on this line.];
                BlankZero=Yes;
                SourceExpr="Warranty Disc. %";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the contract, if the service order originated from a service contract.;
                           ENG=Specifies the number of the contract, if the service order originated from a service contract.];
                SourceExpr="Contract No.";
                Editable=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the contract discount percentage that is valid for the items, resources, and costs on this line.;
                           ENG=Specifies the contract discount percentage that is valid for the items, resources, and costs on this line.];
                BlankZero=Yes;
                SourceExpr="Contract Disc. %";
                Visible=FALSE }

    { 100 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the VAT percentage used to calculate Amount Including VAT on this line.;
                           ENG=Specifies the VAT percentage used to calculate Amount Including VAT on this line.];
                BlankZero=Yes;
                SourceExpr="VAT %";
                Visible=FALSE }

    { 105 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount that serves as a base for calculating Amount Including VAT.;
                           ENG=Specifies the amount that serves as a base for calculating Amount Including VAT.];
                BlankZero=Yes;
                SourceExpr="VAT Base Amount";
                Visible=FALSE }

    { 103 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net amount, including VAT, for this line.;
                           ENG=Specifies the net amount, including VAT, for this line.];
                SourceExpr="Amount Including VAT";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cost per item unit, resource, or cost on the line.;
                           ENG=Specifies the cost per item unit, resource, or cost on the line.];
                BlankZero=Yes;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the customer general business posting group.;
                           ENG=Specifies the code for the customer general business posting group.];
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 64  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the general product posting group.;
                           ENG=Specifies the code for the general product posting group.];
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the inventory posting group assigned to the item.;
                           ENG=Specifies the inventory posting group assigned to the item.];
                SourceExpr="Posting Group";
                Visible=FALSE }

    { 68  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the service line should be posted.;
                           ENG=Specifies the date when the service line should be posted.];
                SourceExpr="Posting Date" }

    { 72  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the Shortcut Dimension 1, which is defined in the Shortcut Dimension 1 Code field in the General Ledger Setup window.;
                           ENG=Specifies the code of the Shortcut Dimension 1, which is defined in the Shortcut Dimension 1 Code field in the General Ledger Setup window.];
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the Shortcut Dimension 2, which is specified in the Shortcut Dimension 2 Code field in the General Ledger Setup window.;
                           ENG=Specifies the code of the Shortcut Dimension 2, which is specified in the Shortcut Dimension 2 Code field in the General Ledger Setup window.];
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 81  ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 83  ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 85  ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 87  ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 89  ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 91  ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1904739907;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9124;
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServMgtSetup@1002 : Record 5911;
      ServHeader@1003 : Record 5900;
      SalesPriceCalcMgt@1006 : Codeunit 7000;
      ItemAvailFormsMgt@1000 : Codeunit 353;
      ShortcutDimCode@1012 : ARRAY [8] OF Code[20];
      ServItemLineNo@1013 : Integer;
      SelectionFilter@1014 : 'All Service Lines,Lines per Selected Service Item,Lines Not Item Related';
      FaultAreaCodeVisible@19067961 : Boolean INDATASET;
      SymptomCodeVisible@19078417 : Boolean INDATASET;
      FaultCodeVisible@19037502 : Boolean INDATASET;
      ResolutionCodeVisible@19021279 : Boolean INDATASET;

    PROCEDURE Initialize@5(ServItemLine@1000 : Integer);
    BEGIN
      ServItemLineNo := ServItemLine;
    END;

    PROCEDURE SetSelectionFilter@2();
    BEGIN
      CASE SelectionFilter OF
        SelectionFilter::"All Service Lines":
          SETRANGE("Service Item Line No.");
        SelectionFilter::"Lines per Selected Service Item":
          SETRANGE("Service Item Line No.",ServItemLineNo);
        SelectionFilter::"Lines Not Item Related":
          SETRANGE("Service Item Line No.",0);
      END;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE InsertExtendedText@7(Unconditionally@1000 : Boolean);
    VAR
      TransferExtendedText@1001 : Codeunit 378;
    BEGIN
      IF TransferExtendedText.ServCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertServExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InsertStartFee@8();
    VAR
      ServOrderMgt@1000 : Codeunit 5900;
    BEGIN
      CLEAR(ServOrderMgt);
      IF ServOrderMgt.InsertServCost(Rec,1,FALSE) THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InsertTravelFee@6();
    VAR
      ServOrderMgt@1000 : Codeunit 5900;
    BEGIN
      CLEAR(ServOrderMgt);
      IF ServOrderMgt.InsertServCost(Rec,0,FALSE) THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShowPrices@4();
    BEGIN
      ServHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetServLinePrice(ServHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      ServHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetServLineLineDisc(ServHeader,Rec);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    LOCAL PROCEDURE SelectionFilterOnAfterValidate@19033692();
    BEGIN
      CurrPage.UPDATE;
      SetSelectionFilter;
    END;

    BEGIN
    END.
  }
}

