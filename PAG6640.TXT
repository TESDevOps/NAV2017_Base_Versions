OBJECT Page 6640 Purchase Return Order
{
  OBJECT-PROPERTIES
  {
    Date=04/08/17;
    Time=12:00:00;
    Version List=NAVW110.00.00.17972,NAVGB10.00.00.17972;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Return Order;
               ENG=Purchase Return Order];
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=FILTER(Return Order));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Release,Posting,Prepare,Invoice,Request Approval;
                                ENG=New,Process,Report,Approve,Release,Posting,Prepare,Invoice,Request Approval];
    OnInit=VAR
             PurchasesPayablesSetup@1000 : Record 312;
           BEGIN
             JobQueueUsed := PurchasesPayablesSetup.JobQueueActive;
           END;

    OnOpenPage=BEGIN
                 IF UserMgt.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetPurchasesFilter);
                   FILTERGROUP(0);
                 END;

                 SetDocNoVisible;
               END;

    OnAfterGetRecord=BEGIN
                       SetControlAppearance;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetPurchasesFilter;
                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetBuyFromVendorFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Return Order;
                                 ENG=&Return Order];
                      Image=Return }
      { 49      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ENG=Statistics];
                      ToolTipML=[ENU=View statistical information, such as the value of posted entries, for the record.;
                                 ENG=View statistical information, such as the value of posted entries, for the record.];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenPurchaseOrderStatistics;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 50      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Vendor;
                                 ENG=Vendor];
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Image=Vendor }
      { 105     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      Enabled="No." <> '';
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 33      ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 ENG=Approvals];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 ENG=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.];
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1000 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Purchase Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 51      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      ToolTipML=[ENU=View or add notes about the purchase return order.;
                                 ENG=View or add notes about the purchase return order.];
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Documents;
                                 ENG=Documents];
                      Image=Documents }
      { 5801    ;2   ;Action    ;
                      CaptionML=[ENU=Return Shipments;
                                 ENG=Return Shipments];
                      RunObject=Page 6652;
                      RunPageView=SORTING(Return Order No.);
                      RunPageLink=Return Order No.=FIELD(No.);
                      Image=Shipment }
      { 117     ;2   ;Action    ;
                      CaptionML=[ENU=Cred&it Memos;
                                 ENG=Cred&it Memos];
                      RunObject=Page 147;
                      RunPageView=SORTING(Return Order No.);
                      RunPageLink=Return Order No.=FIELD(No.);
                      Image=CreditMemo }
      { 136     ;2   ;Separator  }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ENG=Warehouse];
                      Image=Warehouse }
      { 114     ;2   ;Action    ;
                      CaptionML=[ENU=Whse. Shipment Lines;
                                 ENG=Whse. Shipment Lines];
                      RunObject=Page 7341;
                      RunPageView=SORTING(Source Type,Source Subtype,Source No.,Source Line No.);
                      RunPageLink=Source Type=CONST(39),
                                  Source Subtype=FIELD(Document Type),
                                  Source No.=FIELD(No.);
                      Image=ShipmentLines }
      { 129     ;2   ;Action    ;
                      CaptionML=[ENU=In&vt. Put-away/Pick Lines;
                                 ENG=In&vt. Put-away/Pick Lines];
                      RunObject=Page 5774;
                      RunPageView=SORTING(Source Document,Source No.,Location Code);
                      RunPageLink=Source Document=CONST(Purchase Return Order),
                                  Source No.=FIELD(No.);
                      Image=PickLines }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 31      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 ENG=Approval] }
      { 29      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 ENG=Approve];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 ENG=Approve the requested changes.];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 27      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 ENG=Reject];
                      ToolTipML=[ENU=Reject the approval request.;
                                 ENG=Reject the approval request.];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 ENG=Delegate];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 ENG=Delegate the approval to a substitute approver.];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 ENG=Comments];
                      ToolTipML=[ENU=View or add comments.;
                                 ENG=View or add comments.];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 104     ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENG=&Print];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DocPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 ENG=Release];
                      Image=ReleaseDoc }
      { 112     ;2   ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 ENG=Re&lease];
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 113     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 ENG=Re&open];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed;
                                 ENG=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed];
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 690     ;2   ;Separator  }
      { 52      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 285     ;2   ;Action    ;
                      Name=GetPostedDocumentLinesToReverse;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Posted Doc&ument Lines to Reverse;
                                 ENG=Get Posted Doc&ument Lines to Reverse];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReverseLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GetPstdDocLinesToRevere;
                               END;
                                }
      { 119     ;2   ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=[ENU=Apply Entries;
                                 ENG=Apply Entries];
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Purchase Header Apply",Rec);
                               END;
                                }
      { 130     ;2   ;Separator  }
      { 53      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 24=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 ENG=Calculate &Invoice Discount];
                      ToolTipML=[ENU=Calculate the invoice discount for the entire purchase invoice.;
                                 ENG=Calculate the invoice discount for the entire purchase invoice.];
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 132     ;2   ;Separator  }
      { 54      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENG=Copy Document];
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 120     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 ENG=Move Negative Lines];
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegPurchLines);
                                 MoveNegPurchLines.SetPurchHeader(Rec);
                                 MoveNegPurchLines.RUNMODAL;
                                 MoveNegPurchLines.ShowDocument;
                               END;
                                }
      { 142     ;2   ;Action    ;
                      CaptionML=[ENU=Archive Document;
                                 ENG=Archive Document];
                      Image=Archive;
                      OnAction=BEGIN
                                 ArchiveManagement.ArchivePurchDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 138     ;2   ;Action    ;
                      AccessByPermission=TableData 410=R;
                      CaptionML=[ENU=Send IC Return Order;
                                 ENG=Send IC Return Order];
                      Image=IntercompanyOrder;
                      OnAction=VAR
                                 ICInOutMgt@1000 : Codeunit 427;
                                 ApprovalsMgmt@1003 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   ICInOutMgt.SendPurchDoc(Rec,FALSE);
                               END;
                                }
      { 134     ;2   ;Separator  }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 ENG=Request Approval];
                      Image=Approval }
      { 37      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 ENG=Send A&pproval Request];
                      ToolTipML=[ENU=Send an approval request.;
                                 ENG=Send an approval request.];
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckPurchaseApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 35      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ENG=Cancel Approval Re&quest];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 ENG=Cancel the approval request.];
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=Yes;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                               END;
                                }
      { 137     ;2   ;Separator  }
      { 19      ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 ENG=Warehouse];
                      Image=Warehouse }
      { 93      ;2   ;Action    ;
                      AccessByPermission=TableData 7320=R;
                      CaptionML=[ENU=Create &Whse. Shipment;
                                 ENG=Create &Whse. Shipment];
                      Image=NewShipment;
                      OnAction=VAR
                                 GetSourceDocOutbound@1000 : Codeunit 5752;
                               BEGIN
                                 GetSourceDocOutbound.CreateFromPurchaseReturnOrder(Rec);
                               END;
                                }
      { 118     ;2   ;Action    ;
                      AccessByPermission=TableData 7342=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Inventor&y Put-away/Pick;
                                 ENG=Create Inventor&y Put-away/Pick];
                      Image=CreateInventoryPickup;
                      OnAction=BEGIN
                                 CreateInvtPutAwayPick;
                               END;
                                }
      { 135     ;2   ;Separator  }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENG=P&osting];
                      Image=Post }
      { 59      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=P&ost;
                                 ENG=P&ost];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 ENG=Preview Posting];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 ENG=Review the different types of entries that will be created when you post the document or journal.];
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit 91;
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 58      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ENG=Test Report];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 ENG=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 60      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and &Print;
                                 ENG=Post and &Print];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post + Print");
                               END;
                                }
      { 61      ;2   ;Action    ;
                      Name=PostBatch;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 ENG=Post &Batch];
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Purch. Ret. Orders",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=RemoveFromJobQueue;
                      CaptionML=[ENU=Remove From Job Queue;
                                 ENG=Remove From Job Queue];
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the purchase document. The field is only visible if you have not set up a number series for the type of purchase document, or if the Manual Nos. field is selected for the number series.;
                           ENG=Specifies the number of the purchase document. The field is only visible if you have not set up a number series for the type of purchase document, or if the Manual Nos. field is selected for the number series.];
                SourceExpr="No.";
                Importance=Promoted;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Vendor;
                           ENG=Vendor];
                ToolTipML=[ENU=Specifies the name of the vendor who sends the items. The field is filled automatically when you fill the Buy-from Vendor No. field.;
                           ENG=Specifies the name of the vendor who sends the items. The field is filled automatically when you fill the Buy-from Vendor No. field.];
                SourceExpr="Buy-from Vendor Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF GETFILTER("Buy-from Vendor No.") = xRec."Buy-from Vendor No." THEN
                               IF "Buy-from Vendor No." <> xRec."Buy-from Vendor No." THEN
                                 SETRANGE("Buy-from Vendor No.");

                             CurrPage.UPDATE;
                           END;

                QuickEntry=FALSE }

    { 43  ;2   ;Group     ;
                CaptionML=[ENU=Buy-from;
                           ENG=Buy-from];
                GroupType=Group }

    { 63  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address of the vendor who ships the items.;
                           ENG=Specifies the address of the vendor who ships the items.];
                SourceExpr="Buy-from Address";
                Importance=Additional;
                QuickEntry=FALSE }

    { 65  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ENG=Specifies additional address information.];
                SourceExpr="Buy-from Address 2";
                Importance=Additional;
                QuickEntry=FALSE }

    { 68  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Postcode];
                ToolTipML=[ENU=Specifies the postal code.;
                           ENG=Specifies the postal code.];
                SourceExpr="Buy-from Post Code";
                Importance=Additional;
                QuickEntry=FALSE }

    { 67  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ToolTipML=[ENU=Specifies the city of the vendor who ships the items.;
                           ENG=Specifies the city of the vendor who ships the items.];
                SourceExpr="Buy-from City";
                Importance=Additional;
                QuickEntry=FALSE }

    { 1040002;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                SourceExpr="Buy-from County" }

    { 125 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ENG=Contact No.];
                ToolTipML=[ENU=Specifies the number of your contact at the vendor.;
                           ENG=Specifies the number of your contact at the vendor.];
                SourceExpr="Buy-from Contact No.";
                Importance=Additional;
                QuickEntry=FALSE }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact about shipment of the item from this vendor.;
                           ENG=Specifies the name of the person to contact about shipment of the item from this vendor.];
                SourceExpr="Buy-from Contact";
                QuickEntry=FALSE }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the vendor created the purchase document.;
                           ENG=Specifies the date on which the vendor created the purchase document.];
                SourceExpr="Document Date";
                QuickEntry=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the purchase document will be recorded.;
                           ENG=Specifies the date when the posting of the purchase document will be recorded.];
                SourceExpr="Posting Date";
                QuickEntry=FALSE }

    { 146 ;2   ;Field     ;
                SourceExpr="No. of Archived Versions";
                QuickEntry=FALSE }

    { 121 ;2   ;Field     ;
                SourceExpr="Order Date";
                Importance=Promoted;
                QuickEntry=FALSE }

    { 115 ;2   ;Field     ;
                SourceExpr="Vendor Authorization No.";
                Importance=Promoted }

    { 14  ;2   ;Field     ;
                SourceExpr="Vendor Cr. Memo No.";
                Importance=Promoted }

    { 72  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the order address code linked to the relevant vendor's order address.;
                           ENG=Specifies the order address code linked to the relevant vendor's order address.];
                SourceExpr="Order Address Code";
                QuickEntry=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which purchaser is assigned to the vendor.;
                           ENG=Specifies which purchaser is assigned to the vendor.];
                SourceExpr="Purchaser Code";
                OnValidate=BEGIN
                             PurchaserCodeOnAfterValidate;
                           END;

                QuickEntry=FALSE }

    { 1102601000;2;Field  ;
                ToolTipML=[ENU=Specifies the campaign number the document is linked to.;
                           ENG=Specifies the campaign number the document is linked to.];
                SourceExpr="Campaign No.";
                QuickEntry=FALSE }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the responsibility center that is associated with the user, company, or vendor.;
                           ENG=Specifies the code of the responsibility center that is associated with the user, company, or vendor.];
                SourceExpr="Responsibility Center";
                QuickEntry=FALSE }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           ENG=Specifies the ID of the user who is responsible for the document.];
                SourceExpr="Assigned User ID";
                QuickEntry=FALSE }

    { 7   ;2   ;Field     ;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueueUsed;
                QuickEntry=FALSE }

    { 101 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the record is open, waiting to be approved, invoiced for prepayment, or released to the next stage of processing.;
                           ENG=Specifies whether the record is open, waiting to be approved, invoiced for prepayment, or released to the next stage of processing.];
                SourceExpr=Status;
                Importance=Promoted;
                QuickEntry=FALSE }

    { 46  ;1   ;Part      ;
                Name=PurchLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page6641;
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           ENG=Invoice Details];
                GroupType=Group }

    { 91  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code for amounts on the purchase lines.;
                           ENG=Specifies the currency code for amounts on the purchase lines.];
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 96  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to receive the items on the purchase document.;
                           ENG=Specifies the date you expect to receive the items on the purchase document.];
                SourceExpr="Expected Receipt Date";
                Importance=Promoted }

    { 110 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           ENG=Specifies whether the unit price on the line should be displayed including or excluding VAT.];
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 139 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.;
                           ENG=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.];
                SourceExpr="VAT Bus. Posting Group" }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.;
                           ENG=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.];
                SourceExpr="Transaction Type" }

    { 76  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the purchase header.;
                           ENG=Specifies the dimension value code associated with the purchase header.];
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 78  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the purchase header.;
                           ENG=Specifies the dimension value code associated with the purchase header.];
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the location where you want the items to be placed when they are received.;
                           ENG=Specifies a code for the location where you want the items to be placed when they are received.];
                SourceExpr="Location Code";
                Importance=Promoted }

    { 16  ;2   ;Field     ;
                SourceExpr="Applies-to Doc. Type";
                Importance=Promoted }

    { 18  ;2   ;Field     ;
                SourceExpr="Applies-to Doc. No.";
                Importance=Promoted }

    { 94  ;2   ;Field     ;
                SourceExpr="Applies-to ID" }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping and Payment;
                           ENG=Shipping and Payment];
                GroupType=Group }

    { 45  ;2   ;Group     ;
                CaptionML=[ENU=Ship-to;
                           ENG=Ship-to];
                GroupType=Group }

    { 32  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENG=Name];
                ToolTipML=[ENU=Specifies the name of the company at the address to which you want the items in the purchase order to be shipped.;
                           ENG=Specifies the name of the company at the address to which you want the items in the purchase order to be shipped.];
                SourceExpr="Ship-to Name";
                Importance=Additional }

    { 34  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address that you want the items in the purchase order to be shipped to.;
                           ENG=Specifies the address that you want the items in the purchase order to be shipped to.];
                SourceExpr="Ship-to Address";
                Importance=Additional }

    { 36  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ENG=Specifies additional address information.];
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 83  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Postcode];
                ToolTipML=[ENU=Specifies the postal code.;
                           ENG=Specifies the postal code.];
                SourceExpr="Ship-to Post Code";
                Importance=Additional }

    { 38  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ToolTipML=[ENU=Specifies the city the items in the purchase order will be shipped to.;
                           ENG=Specifies the city the items in the purchase order will be shipped to.];
                SourceExpr="Ship-to City";
                Importance=Additional }

    { 1040010;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                SourceExpr="Ship-to County" }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of a contact person for the address where the items in the purchase order should be shipped.;
                           ENG=Specifies the name of a contact person for the address where the items in the purchase order should be shipped.];
                SourceExpr="Ship-to Contact";
                Importance=Additional }

    { 20  ;2   ;Group     ;
                CaptionML=[ENU=Pay-to;
                           ENG=Pay-to];
                GroupType=Group }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENG=Name];
                ToolTipML=[ENU=Specifies the name of the vendor sending the invoice.;
                           ENG=Specifies the name of the vendor sending the invoice.];
                SourceExpr="Pay-to Name";
                Importance=Promoted }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address of the vendor sending the invoice.;
                           ENG=Specifies the address of the vendor sending the invoice.];
                SourceExpr="Pay-to Address";
                Importance=Additional }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ENG=Specifies additional address information.];
                SourceExpr="Pay-to Address 2";
                Importance=Additional }

    { 73  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Postcode];
                ToolTipML=[ENU=Specifies the postal code.;
                           ENG=Specifies the postal code.];
                SourceExpr="Pay-to Post Code";
                Importance=Additional }

    { 28  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ToolTipML=[ENU=Specifies the city of the vendor sending the invoice.;
                           ENG=Specifies the city of the vendor sending the invoice.];
                SourceExpr="Pay-to City";
                Importance=Additional }

    { 1040006;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                SourceExpr="Pay-to County" }

    { 127 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ENG=Contact No.];
                ToolTipML=[ENU=Specifies the number of the contact who sends the invoice.;
                           ENG=Specifies the number of the contact who sends the invoice.];
                SourceExpr="Pay-to Contact No.";
                Importance=Additional }

    { 30  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact about an invoice from this vendor.;
                           ENG=Specifies the name of the person to contact about an invoice from this vendor.];
                SourceExpr="Pay-to Contact";
                Importance=Additional }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           ENG=Foreign Trade] }

    { 89  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the purchase header's transaction specification here.;
                           ENG=Specifies a code for the purchase header's transaction specification here.];
                SourceExpr="Transaction Specification" }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the transport method to be used with this purchase header.;
                           ENG=Specifies the code for the transport method to be used with this purchase header.];
                SourceExpr="Transport Method" }

    { 85  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the port of entry where the items pass into your country/region.;
                           ENG=Specifies the code of the port of entry where the items pass into your country/region.];
                SourceExpr="Entry Point" }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the area of the vendor's address.;
                           ENG=Specifies the code for the area of the vendor's address.];
                SourceExpr=Area }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 21  ;1   ;Part      ;
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1901138007;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9093;
                PartType=Page }

    { 1904651607;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9094;
                Visible=FALSE;
                PartType=Page }

    { 1903435607;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9095;
                PartType=Page }

    { 1906949207;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9096;
                Visible=FALSE;
                PartType=Page }

    { 3   ;1   ;Part      ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9100;
                ProviderID=46;
                Visible=FALSE;
                PartType=Page }

    { 41  ;1   ;Part      ;
                Name=WorkflowStatus;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopyPurchDoc@1002 : Report 492;
      MoveNegPurchLines@1006 : Report 6698;
      DocPrint@1005 : Codeunit 229;
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1004 : Codeunit 5700;
      ArchiveManagement@1007 : Codeunit 5063;
      PurchCalcDiscByType@1009 : Codeunit 66;
      ChangeExchangeRate@1001 : Page 511;
      JobQueueVisible@1000 : Boolean INDATASET;
      JobQueueUsed@1016 : Boolean INDATASET;
      DocNoVisible@1008 : Boolean;
      OpenApprovalEntriesExist@1010 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1012 : Boolean;
      ShowWorkflowStatus@1011 : Boolean;
      CanCancelApprovalForRecord@1013 : Boolean;
      DocumentIsPosted@1014 : Boolean;
      OpenPostedPurchaseReturnOrderQst@1015 : TextConst 'ENU=The return order has been posted and moved to the Posted Purchase Credit Memos window.\\Do you want to open the posted credit memo?;ENG=The return order has been posted and moved to the Posted Purchase Credit Memos window.\\Do you want to open the posted credit memo?';

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PurchaseHeader@1001 : Record 38;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      SendToPosting(PostingCodeunitID);

      DocumentIsPosted := NOT PurchaseHeader.GET("Document Type","No.");

      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);

      IF PostingCodeunitID <> CODEUNIT::"Purch.-Post (Yes/No)" THEN
        EXIT;

      IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
        ShowPostedConfirmationMessage;
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.PurchLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE PurchaserCodeOnAfterValidate@19046120();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1001 : Codeunit 1400;
      DocType@1000 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.PurchaseDocumentNoIsVisible(DocType::"Return Order","No.");
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17();
    VAR
      ReturnOrderPurchaseHeader@1003 : Record 38;
      PurchCrMemoHdr@1000 : Record 124;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      IF NOT ReturnOrderPurchaseHeader.GET("Document Type","No.") THEN BEGIN
        PurchCrMemoHdr.SETRANGE("No.","Last Posting No.");
        IF PurchCrMemoHdr.FINDFIRST THEN
          IF InstructionMgt.ShowConfirm(OpenPostedPurchaseReturnOrderQst,InstructionMgt.ShowPostedConfirmationMessageCode) THEN
            PAGE.RUN(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHdr);
      END;
    END;

    BEGIN
    END.
  }
}

