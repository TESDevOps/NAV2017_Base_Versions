OBJECT Page 189 Incoming Document
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Incoming Document;
               ENG=Incoming Document];
    SourceTable=Table130;
    PageType=Document;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Release,Status,Incoming Document,OCR,Approve,Request Approval;
                                ENG=New,Process,Report,Release,Status,Incoming Document,OCR,Approve,Request Approval];
    OnInit=BEGIN
             IsDataExchTypeEditable := TRUE;
             EnableReceiveFromOCR := WaitingToReceiveFromOCR;
           END;

    OnOpenPage=BEGIN
                 HasCamera := CameraProvider.IsAvailable;
                 IF HasCamera THEN
                   CameraProvider := CameraProvider.Create;
               END;

    OnAfterGetRecord=BEGIN
                       URL := GetURL;
                       ShowErrors;
                       EnableReceiveFromOCR := WaitingToReceiveFromOCR;
                       CurrPage.EDITABLE(NOT Processed);
                     END;

    OnNewRecord=BEGIN
                  URL := '';
                END;

    OnInsertRecord=BEGIN
                     AttachEnabled := TRUE;
                   END;

    OnModifyRecord=VAR
                     IncomingDocumentAttachment@1000 : Record 133;
                   BEGIN
                     OCRDataCorrectionEnabled := GetGeneratedFromOCRAttachment(IncomingDocumentAttachment);
                     RecordHasAttachment := AttachmentFileName <> '';
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IsDataExchTypeEditable := NOT (Status IN [Status::Created,Status::Posted]);
                           ShowErrors;
                           SetCalculatedFields;
                           RecordHasAttachment := AttachmentFileName <> '';
                           SetControlVisibility;
                           AttachEnabled := "Entry No." <> 0;
                         END;

    ActionList=ACTIONS
    {
      { 52      ;    ;ActionContainer;
                      CaptionML=[ENU=New;
                                 ENG=New];
                      ActionContainerType=NewDocumentItems }
      { 46      ;    ;ActionContainer;
                      CaptionML=[ENU=Related Information;
                                 ENG=Related Information];
                      ActionContainerType=RelatedInformation }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=Setup;
                                 ENG=Setup] }
      { 44      ;2   ;Action    ;
                      Name=Setup;
                      CaptionML=[ENU=Setup;
                                 ENG=Setup];
                      ToolTipML=[ENU=Define the general journal type to use when creating journal lines. You can also specify whether it requires approval to create documents and journal lines.;
                                 ENG=Define the general journal type to use when creating journal lines. You can also specify whether it requires approval to create documents and journal lines.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 191;
                      Image=Setup }
      { 22      ;2   ;Action    ;
                      Name=DataExchangeTypes;
                      CaptionML=[ENU=Data Exchange Types;
                                 ENG=Data Exchange Types];
                      ToolTipML=[ENU=View the data exchange types that are available to convert electronic documents to documents in Dynamics NAV.;
                                 ENG=View the data exchange types that are available to convert electronic documents to documents in Dynamics NAV.];
                      RunObject=Page 1213;
                      Promoted=Yes;
                      Image=Entries;
                      PromotedCategory=Category6 }
      { 73      ;2   ;Action    ;
                      Name=ActivityLog;
                      CaptionML=[ENU=Activity Log;
                                 ENG=Activity Log];
                      ToolTipML=[ENU=View the status and any errors if the document was sent as an electronic document or OCR file through the document exchange service.;
                                 ENG=View the status and any errors if the document was sent as an electronic document or OCR file through the document exchange service.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Log;
                      OnAction=VAR
                                 ActivityLog@1002 : Record 710;
                               BEGIN
                                 ActivityLog.ShowEntries(RECORDID);
                               END;
                                }
      { 69      ;2   ;Action    ;
                      Name=OCRSetup;
                      CaptionML=[ENU=OCR Setup;
                                 ENG=OCR Setup];
                      ToolTipML=[ENU=Open the OCR Service Setup window, for example to change credentials or enable the service.;
                                 ENG=Open the OCR Service Setup window, for example to change credentials or enable the service.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=ShowOCRSetup;
                      PromotedIsBig=Yes;
                      Image=ServiceSetup;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"OCR Service Setup");
                                 CurrPage.UPDATE;
                                 IF CURRENTCLIENTTYPE = CLIENTTYPE::Web THEN
                                   IF OCRIsEnabled THEN BEGIN
                                     OnCloseIncomingDocumentFromAction(Rec);
                                     CurrPage.CLOSE;
                                   END;
                               END;
                                }
      { 91      ;2   ;Action    ;
                      Name=ApprovalEntries;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 ENG=Approvals];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 ENG=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.];
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OpenApprovalEntriesPage(RECORDID);
                               END;
                                }
      { 43      ;    ;ActionContainer;
                      CaptionML=[ENU=Process;
                                 ENG=Process];
                      ActionContainerType=ActionItems }
      { 121     ;1   ;Action    ;
                      Name=CreateDocument;
                      CaptionML=[ENU=Create Document;
                                 ENG=Create Document];
                      ToolTipML=[ENU=Create a document, such as a purchase invoice, automatically by converting the electronic document that is attached to the incoming document record.;
                                 ENG=Create a document, such as a purchase invoice, automatically by converting the electronic document that is attached to the incoming document record.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=Yes;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 "Created Doc. Error Msg. Type" := "Created Doc. Error Msg. Type"::Warning;
                                 MODIFY;
                                 CreateDocumentWithDataExchange;
                               END;
                                }
      { 31      ;1   ;Action    ;
                      Name=CreateGenJnlLine;
                      CaptionML=[ENU=Create Journal Line;
                                 ENG=Create Journal Line];
                      ToolTipML=[ENU=Create a journal line automatically by converting the electronic document that is attached to the incoming document record.;
                                 ENG=Create a journal line automatically by converting the electronic document that is attached to the incoming document record.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=Yes;
                      Image=TransferToGeneralJournal;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 CreateGeneralJournalLineWithDataExchange;
                               END;
                                }
      { 285     ;1   ;Action    ;
                      Name=CreateManually;
                      CaptionML=[ENU=Create Manually;
                                 ENG=Create Manually];
                      ToolTipML=[ENU=Create a document, such as a purchase invoice, manually from information in the file that is attached to the incoming document record.;
                                 ENG=Create a document, such as a purchase invoice, manually from information in the file that is attached to the incoming document record.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreateCreditMemo;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreateManually;
                               END;
                                }
      { 21      ;1   ;Action    ;
                      Name=AttachFile;
                      CaptionML=[ENU=Attach File;
                                 ENG=Attach File];
                      ToolTipML=[ENU=Attach a file to the incoming document record.;
                                 ENG=Attach a file to the incoming document record.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Attach;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ImportAttachment(Rec);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 85      ;1   ;Action    ;
                      Name=ReplaceMainAttachment;
                      CaptionML=[ENU=Replace Main Attachment;
                                 ENG=Replace Main Attachment];
                      ToolTipML=[ENU=Attach another file to be used as the main file attachment on the incoming document record.;
                                 ENG=Attach another file to be used as the main file attachment on the incoming document record.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordHasAttachment;
                      Image=Interaction;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ReplaceOrInsertMainAttachment;
                                 CLEAR("Data Exchange Type");
                               END;
                                }
      { 30      ;1   ;Action    ;
                      Name=AttachFromCamera;
                      CaptionML=[ENU=Attach Image from Camera;
                                 ENG=Attach Image from Camera];
                      ToolTipML=[ENU=Add a picture from your device camera to the document.;
                                 ENG=Add a picture from your device camera to the document.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=HasCamera;
                      Enabled=AttachEnabled;
                      PromotedIsBig=Yes;
                      Image=Camera;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                               BEGIN
                                 IF NOT HasCamera THEN
                                   EXIT;
                                 CameraOptions := CameraOptions.CameraOptions;
                                 CameraOptions.Quality := 100; // 100%
                                 CameraProvider.RequestPictureAsync(CameraOptions);
                               END;
                                }
      { 64      ;1   ;Action    ;
                      Name=TextToAccountMapping;
                      CaptionML=[ENU=Map Text to Account;
                                 ENG=Map Text to Account];
                      ToolTipML=[ENU=Create a mapping of text on incoming documents to identical text on specific debit, credit, and balancing accounts in the general ledger or on bank accounts so that the resulting document or journal lines are prefilled with the specified information.;
                                 ENG=Create a mapping of text on incoming documents to identical text on specific debit, credit, and balancing accounts in the general ledger or on bank accounts so that the resulting document or journal lines are prefilled with the specified information.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 1254;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MapAccounts;
                      PromotedCategory=Process;
                      PromotedOnly=Yes }
      { 45      ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 ENG=Release] }
      { 12      ;2   ;Action    ;
                      Name=Release;
                      CaptionML=[ENU=Release;
                                 ENG=Release];
                      ToolTipML=[ENU=Release the incoming document to indicate that it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                                 ENG=Release the incoming document to indicate that it has been approved by the incoming document approver. Note that this is not related to approval workflows.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordHasAttachment;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleaseIncomingDocument@1000 : Codeunit 132;
                               BEGIN
                                 ReleaseIncomingDocument.PerformManualRelease(Rec);
                               END;
                                }
      { 82      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Reopen;
                                 ENG=Reopen];
                      ToolTipML=[ENU=Reopen the incoming document record after it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                                 ENG=Reopen the incoming document record after it has been approved by the incoming document approver. Note that this is not related to approval workflows.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordHasAttachment;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleaseIncomingDocument@1000 : Codeunit 132;
                               BEGIN
                                 ReleaseIncomingDocument.PerformManualReopen(Rec);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 ENG=Reject];
                      ToolTipML=[ENU=Reject to approve the incoming document. Note that this is not related to approval workflows.;
                                 ENG=Reject to approve the incoming document. Note that this is not related to approval workflows.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordHasAttachment;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleaseIncomingDocument@1000 : Codeunit 132;
                               BEGIN
                                 ReleaseIncomingDocument.PerformManualReject(Rec);
                               END;
                                }
      { 92      ;1   ;ActionGroup;
                      CaptionML=[ENU=Status;
                                 ENG=Status] }
      { 88      ;2   ;Action    ;
                      Name=SetToProcessed;
                      CaptionML=[ENU=Set To Processed;
                                 ENG=Set To Processed];
                      ToolTipML=[ENU=Set the incoming document to processed. It will then be moved to the Processed Incoming Documents window.;
                                 ENG=Set the incoming document to processed. It will then be moved to the Processed Incoming Documents window.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=NOT Processed;
                      PromotedIsBig=Yes;
                      Image=Archive;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 VALIDATE(Processed,TRUE);
                                 MODIFY(TRUE);
                               END;
                                }
      { 89      ;2   ;Action    ;
                      Name=SetToUnprocessed;
                      CaptionML=[ENU=Set To Unprocessed;
                                 ENG=Set To Unprocessed];
                      ToolTipML=[ENU=Set the incoming document to unprocessed. This allows you to edit information or perform actions for the incoming document.;
                                 ENG=Set the incoming document to unprocessed. This allows you to edit information or perform actions for the incoming document.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=Processed;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 VALIDATE(Processed,FALSE);
                                 MODIFY(TRUE);
                               END;
                                }
      { 74      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 ENG=Approval] }
      { 75      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 ENG=Approve];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 ENG=Approve the requested changes.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 TestReadyForApproval;
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 76      ;2   ;Action    ;
                      Name=RejectApproval;
                      CaptionML=[ENU=Reject;
                                 ENG=Reject];
                      ToolTipML=[ENU=Reject to approve the incoming document. Note that this is not related to approval workflows.;
                                 ENG=Reject to approve the incoming document. Note that this is not related to approval workflows.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 77      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 ENG=Delegate];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 ENG=Delegate the approval to a substitute approver.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 78      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 ENG=Comments];
                      ToolTipML=[ENU=View or add comments.;
                                 ENG=View or add comments.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 81      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 ENG=Request Approval];
                      Image=SendApprovalRequest }
      { 80      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 ENG=Send A&pproval Request];
                      ToolTipML=[ENU=Request approval of the incoming document. You can send an approval request as part of a workflow if this has been set up in your organization.;
                                 ENG=Request approval of the incoming document. You can send an approval request as part of a workflow if this has been set up in your organisation.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 TestReadyForApproval;
                                 IF ApprovalsMgmt.CheckIncomingDocApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsMgmt.OnSendIncomingDocForApproval(Rec);
                               END;
                                }
      { 79      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ENG=Cancel Approval Re&quest];
                      ToolTipML=[ENU=Cancel requesting approval of the incoming document.;
                                 ENG=Cancel requesting approval of the incoming document.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelIncomingDocApprovalRequest(Rec);
                               END;
                                }
      { 66      ;1   ;ActionGroup;
                      CaptionML=[ENU=Incoming Document;
                                 ENG=Incoming Document] }
      { 67      ;2   ;Action    ;
                      Name=OpenDocument;
                      CaptionML=[ENU=Open Record;
                                 ENG=Open Record];
                      ToolTipML=[ENU=Open the document, journal line, or entry that the incoming document is linked to.;
                                 ENG=Open the document, journal line, or entry that the incoming document is linked to.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordLinkExists;
                      PromotedIsBig=Yes;
                      Image=ViewDetails;
                      PromotedCategory=Category6;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ShowNAVRecord;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=RemoveReferencedRecord;
                      CaptionML=[ENU=Remove Reference to Record;
                                 ENG=Remove Reference to Record];
                      ToolTipML=[ENU=Remove the link that exists from the incoming document to a document, journal line, or entry.;
                                 ENG=Remove the link that exists from the incoming document to a document, journal line, or entry.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordLinkExists;
                      PromotedIsBig=Yes;
                      Image=ClearLog;
                      PromotedCategory=Category6;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 RemoveReferencedRecords;
                               END;
                                }
      { 68      ;2   ;Action    ;
                      Name=Navigate;
                      CaptionML=[ENU=Navigate;
                                 ENG=Navigate];
                      ToolTipML=[ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                                 ENG=Find all entries and documents that exist for the document number and posting date on the selected entry or document.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Navigate;
                      OnAction=VAR
                                 NavigatePage@1000 : Page 344;
                               BEGIN
                                 IF NOT Posted THEN
                                   ERROR(NoPostedDocumentsErr);
                                 NavigatePage.SetDoc("Posting Date","Document No.");
                                 NavigatePage.RUN;
                               END;
                                }
      { 51      ;2   ;ActionGroup;
                      CaptionML=[ENU=Record;
                                 ENG=Record];
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=Document }
      { 65      ;3   ;Action    ;
                      Name=Journal;
                      CaptionML=[ENU=Journal Line;
                                 ENG=Journal Line];
                      Image=Journal;
                      OnAction=VAR
                                 GenJournalBatch@1001 : Record 232;
                                 GenJnlManagement@1002 : Codeunit 230;
                               BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreateGenJnlLine;
                                 IncomingDocumentsSetup.Fetch;
                                 GenJournalBatch.GET(IncomingDocumentsSetup."General Journal Template Name",IncomingDocumentsSetup."General Journal Batch Name");
                                 GenJnlManagement.TemplateSelectionFromBatch(GenJournalBatch);
                               END;
                                }
      { 49      ;3   ;Action    ;
                      Name=PurchaseInvoice;
                      CaptionML=[ENU=Purchase Invoice;
                                 ENG=Purchase Invoice];
                      Image=Purchase;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreatePurchInvoice;
                               END;
                                }
      { 50      ;3   ;Action    ;
                      Name=PurchaseCreditMemo;
                      CaptionML=[ENU=Purchase Credit Memo;
                                 ENG=Purchase Credit Memo];
                      Image=CreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreatePurchCreditMemo;
                               END;
                                }
      { 47      ;3   ;Action    ;
                      Name=SalesInvoice;
                      CaptionML=[ENU=Sales Invoice;
                                 ENG=Sales Invoice];
                      Image=Sales;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreateSalesInvoice;
                               END;
                                }
      { 48      ;3   ;Action    ;
                      Name=SalesCreditMemo;
                      CaptionML=[ENU=Sales Credit Memo;
                                 ENG=Sales Credit Memo];
                      Image=CreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreateSalesCreditMemo;
                               END;
                                }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=OCR;
                                 ENG=OCR] }
      { 42      ;2   ;Action    ;
                      Name=SendToJobQueue;
                      CaptionML=[ENU=Send to Job Queue;
                                 ENG=Send to Job Queue];
                      ToolTipML=[ENU=Send the attached PDF or image file to the OCR service by the job queue according to the schedule, provided that no errors exist.;
                                 ENG=Send the attached PDF or image file to the OCR service by the job queue according to the schedule, provided that no errors exist.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Enabled=RecordHasAttachment;
                      Image=Translation;
                      OnAction=BEGIN
                                 SendToJobQueue(TRUE);
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Name=RemoveFromJobQueue;
                      CaptionML=[ENU=Remove from Job Queue;
                                 ENG=Remove from Job Queue];
                      ToolTipML=[ENU=Remove the scheduled processing of this record from the job queue.;
                                 ENG=Remove the scheduled processing of this record from the job queue.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Enabled=RecordHasAttachment;
                      Image=Translation;
                      OnAction=BEGIN
                                 RemoveFromJobQueue(TRUE);
                               END;
                                }
      { 54      ;2   ;Action    ;
                      Name=SendToOcr;
                      CaptionML=[ENU=Send to OCR Service;
                                 ENG=Send to OCR Service];
                      ToolTipML=[ENU=Send the attached PDF or image file to the OCR service immediately.;
                                 ENG=Send the attached PDF or image file to the OCR service immediately.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=OCRServiceIsEnabled;
                      Enabled=CanBeSentToOCR;
                      PromotedIsBig=Yes;
                      Image=Translations;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 SendToOCR(TRUE);
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=ReceiveFromOCR;
                      CaptionML=[ENU=Receive from OCR Service;
                                 ENG=Receive from OCR Service];
                      ToolTipML=[ENU=Get any electronic documents that are ready to receive from the OCR service.;
                                 ENG=Get any electronic documents that are ready to receive from the OCR service.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=OCRServiceIsEnabled;
                      Enabled=EnableReceiveFromOCR;
                      PromotedIsBig=Yes;
                      Image=Translations;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 RetrieveFromOCR(TRUE);
                               END;
                                }
      { 35      ;2   ;Action    ;
                      Name=CorrectOCRData;
                      CaptionML=[ENU=Correct OCR Data;
                                 ENG=Correct OCR Data];
                      ToolTipML=[ENU=Open a window where you can teach the OCR service how to interpret data on PDF and image files so that future documents created by the OCR service are more correct.;
                                 ENG=Open a window where you can teach the OCR service how to interpret data on PDF and image files so that future documents created by the OCR service are more correct.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 1272;
                      RunPageOnRec=Yes;
                      Promoted=Yes;
                      Visible=OCRServiceIsEnabled;
                      Enabled=OCRDataCorrectionEnabled;
                      PromotedIsBig=Yes;
                      Image=EditAttachment;
                      PromotedCategory=Category7 }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=[ENU=General;
                           ENG=General];
                GroupType=Group }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of the incoming document. You must enter the description manually.;
                           ENG=Specifies the description of the incoming document. You must enter the description manually.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Importance=Promoted }

    { 53  ;2   ;Field     ;
                Name=URL;
                ExtendedDatatype=URL;
                CaptionML=[ENU=Link to Document;
                           ENG=Link to Document];
                ToolTipML=[ENU=Specifies a link to the attached file.;
                           ENG=Specifies a link to the attached file.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=URL;
                Importance=Additional;
                OnValidate=BEGIN
                             SetURL(URL);
                             CurrPage.UPDATE;
                           END;
                            }

    { 90  ;2   ;Field     ;
                Name=MainAttachment;
                CaptionML=[ENU=Main Attachment;
                           ENG=Main Attachment];
                ToolTipML=[ENU=Specifies the main attachment. Only this attachment is processed by the OCR and document exchange services.;
                           ENG=Specifies the main attachment. Only this attachment is processed by the OCR and document exchange services.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AttachmentFileName;
                Enabled=RecordHasAttachment;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              MainAttachmentDrillDown;
                              CurrPage.UPDATE;
                            END;
                             }

    { 115 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the data exchange type that is used to process the incoming document when it is an electronic document.;
                           ENG=Specifies the data exchange type that is used to process the incoming document when it is an electronic document.];
                SourceExpr="Data Exchange Type";
                Importance=Additional;
                Editable=IsDataExchTypeEditable;
                OnValidate=BEGIN
                             IF NOT DefaultAttachmentIsXML THEN
                               ERROR(InvalidTypeErr);
                           END;
                            }

    { 58  ;2   ;Field     ;
                Name=Record;
                CaptionML=[ENU=Record;
                           ENG=Record];
                ToolTipML=[ENU=Specifies the record, document, journal line, or ledger entry, that is linked to the incoming document.;
                           ENG=Specifies the record, document, journal line, or ledger entry, that is linked to the incoming document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RecordLinkTxt;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowNAVRecord;
                              CurrPage.UPDATE;
                            END;
                             }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document or journal that the incoming document can be connected to.;
                           ENG=Specifies the type of document or journal that the incoming document can be connected to.];
                SourceExpr="Document Type";
                Importance=Promoted;
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the related document or journal line that is created for the incoming document.;
                           ENG=Specifies the number of the related document or journal line that is created for the incoming document.];
                SourceExpr="Document No.";
                Importance=Promoted;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the incoming document record.;
                           ENG=Specifies the status of the incoming document record.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                Importance=Promoted }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the incoming document record when it takes part in the OCR process.;
                           ENG=Specifies the status of the incoming document record when it takes part in the OCR process.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Status";
                OnDrillDown=VAR
                              OCRServiceSetup@1000 : Record 1270;
                              OCRServiceMgt@1001 : Codeunit 1294;
                            BEGIN
                              IF NOT OCRServiceSetup.ISEMPTY THEN
                                HYPERLINK(OCRServiceMgt.GetStatusHyperLink(Rec));
                            END;
                             }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the job queue entry that is processing the incoming document.;
                           ENG=Specifies the status of the job queue entry that is processing the incoming document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Job Queue Status" }

    { 71  ;2   ;Group     ;
                GroupType=Group }

    { 29  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the document template that you want the OCR service provider to use when they convert the incoming-document file to an electronic document. Chose the field to pick a supported document template from the OCR Service Setup window.;
                           ENG=Specifies the code of the document template that you want the OCR service provider to use when they convert the incoming-document file to an electronic document. Chose the field to pick a supported document template from the OCR Service Setup window.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Service Doc. Template Code";
                Importance=Additional }

    { 41  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the document template that you want the OCR service provider to use when they convert the incoming-document file to an electronic document. Chose the field to pick a supported document template from the OCR Service Setup window.;
                           ENG=Specifies the name of the document template that you want the OCR service provider to use when they convert the incoming-document file to an electronic document. Chose the field to pick a supported document template from the OCR Service Setup window.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Service Doc. Template Name";
                Importance=Additional }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=OCR Result;
                           ENG=OCR Result];
                ToolTipML=[ENU=Specifies what process stage the attached PDF or image file is in relation to the OCR service.;
                           ENG=Specifies what process stage the attached PDF or image file is in relation to the OCR service.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OCRResultFileName;
                Importance=Additional;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              OCRResultDrillDown;
                              CurrPage.UPDATE;
                            END;
                             }

    { 72  ;2   ;Group     ;
                GroupType=Group }

    { 4   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the incoming document line was created.;
                           ENG=Specifies when the incoming document line was created.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created Date-Time";
                Importance=Additional }

    { 6   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the user who created the incoming document line.;
                           ENG=Specifies the name of the user who created the incoming document line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created By User Name";
                Importance=Additional }

    { 7   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies if the incoming document has been approved.;
                           ENG=Specifies if the incoming document has been approved.];
                SourceExpr=Released;
                Visible=FALSE }

    { 8   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the incoming document was approved.;
                           ENG=Specifies when the incoming document was approved.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Released Date-Time";
                Importance=Additional }

    { 10  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the user who approved the incoming document.;
                           ENG=Specifies the name of the user who approved the incoming document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Released By User Name";
                Importance=Additional }

    { 11  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the incoming document line was last modified.;
                           ENG=Specifies when the incoming document line was last modified.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Date-Time Modified";
                Importance=Additional }

    { 13  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the user who last modified the incoming document line.;
                           ENG=Specifies the name of the user who last modified the incoming document line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Modified By User Name";
                Importance=Additional }

    { 14  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies if the document or journal line that was created for this incoming document has been posted.;
                           ENG=Specifies if the document or journal line that was created for this incoming document has been posted.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Posted }

    { 15  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the related document or journal line was posted.;
                           ENG=Specifies when the related document or journal line was posted.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posted Date-Time";
                Importance=Additional }

    { 18  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the document or journal line that relates to the incoming document was posted.;
                           ENG=Specifies when the document or journal line that relates to the incoming document was posted.];
                SourceExpr="Posting Date";
                Visible=FALSE }

    { 37  ;1   ;Part      ;
                Name=SupportingAttachments;
                CaptionML=[ENU=Supporting Attachments;
                           ENG=Supporting Attachments];
                ApplicationArea=#All;
                PagePartID=Page194;
                Visible=AdditionalAttachmentsPresent;
                PartType=Page;
                ShowFilter=No }

    { 70  ;1   ;Group     ;
                Name=FinancialInformation;
                CaptionML=[ENU=Financial Information;
                           ENG=Financial Information];
                GroupType=Group }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the vendor on the incoming document. The field may be filled automatically.;
                           ENG=Specifies the name of the vendor on the incoming document. The field may be filled automatically.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Name";
                Importance=Promoted;
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the VAT registration number of the vendor, if the document contains that number. The field may be filled automatically.;
                           ENG=Specifies the VAT registration number of the vendor, if the document contains that number. The field may be filled automatically.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor VAT Registration No.";
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the IBAN of the vendor on the incoming document.;
                           ENG=Specifies the IBAN of the vendor on the incoming document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor IBAN";
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bank branch number of the vendor on the incoming document.;
                           ENG=Specifies the bank branch number of the vendor on the incoming document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Bank Branch No.";
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bank account number of the vendor on the incoming document.;
                           ENG=Specifies the bank account number of the vendor on the incoming document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Bank Account No.";
                Editable=FALSE }

    { 86  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the phone number of the vendor on the incoming document.;
                           ENG=Specifies the phone number of the vendor on the incoming document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Phone No.";
                Editable=FALSE }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice number, if the document contains that number. The field may be filled automatically.;
                           ENG=Specifies the invoice number, if the document contains that number. The field may be filled automatically.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Invoice No.";
                Editable=FALSE }

    { 33  ;2   ;Field     ;
                CaptionML=[ENU=Vendor Order No.;
                           ENG=Vendor Order No.];
                ToolTipML=[ENU=Specifies the order number, if the document contains that number. The field may be filled automatically.;
                           ENG=Specifies the order number, if the document contains that number. The field may be filled automatically.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order No.";
                Editable=FALSE }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that is printed on the incoming document. This is the date when the vendor created the invoice, for example. The field may be filled automatically.;
                           ENG=Specifies the date that is printed on the incoming document. This is the date when the vendor created the invoice, for example. The field may be filled automatically.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Promoted;
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the vendor document must be paid. The field may be filled automatically.;
                           ENG=Specifies the date when the vendor document must be paid. The field may be filled automatically.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Editable=FALSE }

    { 61  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code, if the document contains that code. The field may be filled automatically.;
                           ENG=Specifies the currency code, if the document contains that code. The field may be filled automatically.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Editable=FALSE }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount excluding VAT for the whole document. The field may be filled automatically.;
                           ENG=Specifies the amount excluding VAT for the whole document. The field may be filled automatically.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Excl. VAT";
                Editable=FALSE }

    { 63  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount including VAT for the whole document. The field may be filled automatically.;
                           ENG=Specifies the amount including VAT for the whole document. The field may be filled automatically.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Incl. VAT";
                Editable=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total VAT on the purchase document represented by the incoming document record.;
                           ENG=Specifies the total VAT on the purchase document represented by the incoming document record.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Amount";
                Editable=FALSE }

    { 20  ;1   ;Part      ;
                Name=ErrorMessagesPart;
                CaptionML=[ENU=Errors and Warnings;
                           ENG=Errors and Warnings];
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page701;
                PartType=Page;
                ShowFilter=No }

    { 36  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 83  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 38  ;1   ;Part      ;
                PartType=System;
                SystemPartID=RecordLinks }

    { 39  ;1   ;Part      ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      IncomingDocumentsSetup@1000 : Record 131;
      AutomaticProcessingQst@1004 : TextConst '@@@=%1 is Data Exchange Type;ENU=The Data Exchange Type field is filled on at least one of the selected Incoming Documents.\\Are you sure you want to create documents manually?;ENG=The Data Exchange Type field is filled on at least one of the selected Incoming Documents.\\Are you sure you want to create documents manually?';
      CameraProvider@1005 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      HasCamera@1001 : Boolean;
      URL@1003 : Text;
      AttachmentFileName@1008 : Text;
      RecordLinkTxt@1007 : Text;
      OCRResultFileName@1009 : Text;
      IsDataExchTypeEditable@1002 : Boolean;
      OCRDataCorrectionEnabled@1006 : Boolean;
      AdditionalAttachmentsPresent@1010 : Boolean;
      InvalidTypeErr@1013 : TextConst 'ENU=The default attachment is not an XML document.;ENG=The default attachment is not an XML document.';
      OpenApprovalEntriesExistForCurrUser@1012 : Boolean;
      OpenApprovalEntriesExist@1015 : Boolean;
      ShowWorkflowStatus@1014 : Boolean;
      EnableReceiveFromOCR@1011 : Boolean;
      CanCancelApprovalForRecord@1016 : Boolean;
      OCRServiceIsEnabled@1017 : Boolean;
      ShowOCRSetup@1018 : Boolean;
      AutomaticCreationActionsAreEnabled@1019 : Boolean;
      RecordHasAttachment@1020 : Boolean;
      RecordLinkExists@1021 : Boolean;
      NoPostedDocumentsErr@1022 : TextConst 'ENU=There are no posted documents.;ENG=There are no posted documents.';
      CanBeSentToOCR@1023 : Boolean;
      AttachEnabled@1026 : Boolean;

    LOCAL PROCEDURE AskUserPermission@1() : Boolean;
    BEGIN
      IF "Data Exchange Type" = '' THEN
        EXIT(TRUE);

      IF Status <> Status::New THEN
        EXIT(TRUE);

      EXIT(CONFIRM(AutomaticProcessingQst));
    END;

    LOCAL PROCEDURE ShowErrors@2();
    VAR
      ErrorMessage@1001 : Record 700;
      TempErrorMessage@1000 : TEMPORARY Record 700;
    BEGIN
      ErrorMessage.SETRANGE("Context Record ID",RECORDID);
      ErrorMessage.CopyToTemp(TempErrorMessage);
      CurrPage.ErrorMessagesPart.PAGE.SetRecords(TempErrorMessage);
      CurrPage.ErrorMessagesPart.PAGE.UPDATE;
    END;

    LOCAL PROCEDURE SetCalculatedFields@6();
    VAR
      IncomingDocumentAttachment@1000 : Record 133;
    BEGIN
      OCRDataCorrectionEnabled := GetGeneratedFromOCRAttachment(IncomingDocumentAttachment);
      AttachmentFileName := GetMainAttachmentFileName;
      RecordLinkTxt := GetRecordLinkText;
      OCRResultFileName := GetOCRResutlFileName;
      AdditionalAttachmentsPresent := GetAdditionalAttachments(IncomingDocumentAttachment);
      IF AdditionalAttachmentsPresent THEN
        CurrPage.SupportingAttachments.PAGE.LoadDataIntoPart(Rec);
    END;

    LOCAL PROCEDURE SetControlVisibility@9();
    VAR
      ApprovalsMgmt@1000 : Codeunit 1535;
      RelatedRecord@1002 : Variant;
    BEGIN
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      OCRServiceIsEnabled := OCRIsEnabled;
      ShowOCRSetup := NOT OCRServiceIsEnabled;
      AutomaticCreationActionsAreEnabled := "Data Exchange Type" <> '';
      RecordLinkExists := GetNAVRecord(RelatedRecord);
      CanBeSentToOCR := VerifyCanBeSentToOCR;
    END;

    [Integration(TRUE,TRUE)]
    LOCAL PROCEDURE OnCloseIncomingDocumentFromAction@3(VAR IncomingDocument@1000 : Record 130);
    BEGIN
    END;

    LOCAL PROCEDURE VerifyCanBeSentToOCR@4() : Boolean;
    BEGIN
      IF NOT RecordHasAttachment THEN
        EXIT(FALSE);

      EXIT(NOT ("OCR Status" IN
                ["OCR Status"::Sent,"OCR Status"::Success,"OCR Status"::"Awaiting Verification"]));
    END;

    EVENT CameraProvider@1005::PictureAvailable@11(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    BEGIN
      AddAttachmentFromServerFile(PictureName,PictureFilePath);
    END;

    BEGIN
    END.
  }
}

