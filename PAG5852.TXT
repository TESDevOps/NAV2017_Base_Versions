OBJECT Page 5852 Get Post.Doc - S.InvLn Subform
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Lines;
               ENG=Lines];
    LinksAllowed=No;
    SourceTable=Table113;
    PageType=ListPart;
    OnFindRecord=BEGIN
                   IF NOT Visible THEN
                     EXIT(FALSE);

                   IF FIND(Which) THEN BEGIN
                     SalesInvLine := Rec;
                     WHILE TRUE DO BEGIN
                       ShowRec := IsShowRec(Rec);
                       IF ShowRec THEN
                         EXIT(TRUE);
                       IF NEXT(1) = 0 THEN BEGIN
                         Rec := SalesInvLine;
                         IF FIND(Which) THEN
                           WHILE TRUE DO BEGIN
                             ShowRec := IsShowRec(Rec);
                             IF ShowRec THEN
                               EXIT(TRUE);
                             IF NEXT(-1) = 0 THEN
                               EXIT(FALSE);
                           END;
                       END;
                     END;
                   END;
                   EXIT(FALSE);
                 END;

    OnNextRecord=VAR
                   RealSteps@1001 : Integer;
                   NextSteps@1000 : Integer;
                 BEGIN
                   IF Steps = 0 THEN
                     EXIT;

                   SalesInvLine := Rec;
                   REPEAT
                     NextSteps := NEXT(Steps / ABS(Steps));
                     ShowRec := IsShowRec(Rec);
                     IF ShowRec THEN BEGIN
                       RealSteps := RealSteps + NextSteps;
                       SalesInvLine := Rec;
                     END;
                   UNTIL (NextSteps = 0) OR (RealSteps = Steps);
                   Rec := SalesInvLine;
                   FIND;
                   EXIT(RealSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       DocumentNoHideValue := FALSE;
                       DocumentNoOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 1903099004;2 ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Show Document;
                                 ENG=Show Document];
                      ToolTipML=[ENU=Open the document that the selected line exists on.;
                                 ENG=Open the document that the selected line exists on.];
                      ApplicationArea=#Basic,#Suite;
                      Image=View;
                      OnAction=BEGIN
                                 ShowDocument;
                               END;
                                }
      { 1900545404;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1901991804;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ENG=Item &Tracking Lines];
                      ToolTipML=[ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                                 ENG=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 ItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Lookup=No;
                ToolTipML=[ENU=Specifies the invoice number.;
                           ENG=Specifies the invoice number.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                HideValue=DocumentNoHideValue;
                StyleExpr='Strong' }

    { 36  ;2   ;Field     ;
                CaptionML=[ENU=Posting Date;
                           ENG=Posting/Tax Point Date];
                ToolTipML=[ENU=Specifies the posting date of the record.;
                           ENG=Specifies the posting date of the record.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInvHeader."Posting Date" }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Copies the date for this field from the Shipment Date field on the sales line, which is used for planning purposes.;
                           ENG=Copies the date for this field from the Shipment Date field on the sales line, which is used for planning purposes.];
                SourceExpr="Shipment Date";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer who paid you for the items.;
                           ENG=Specifies the number of the customer who paid you for the items.];
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer the invoice was sent to.;
                           ENG=Specifies the number of the customer the invoice was sent to.];
                SourceExpr="Sell-to Customer No.";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line type.;
                           ENG=Specifies the line type.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of a general ledger account, item, resource, additional cost, or fixed asset, depending on the contents of the Type field.;
                           ENG=Specifies the number of a general ledger account, item, resource, additional cost, or fixed asset, depending on the contents of the Type field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No." }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cross-reference number of the item specified on the line.;
                           ENG=Specifies the cross-reference number of the item specified on the line.];
                SourceExpr="Cross-Reference No.";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant number of the items sold.;
                           ENG=Specifies the variant number of the items sold.];
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that this item is a nonstock item.;
                           ENG=Specifies that this item is a nonstock item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the item or general ledger account, or some descriptive text.;
                           ENG=Specifies the name of the item or general ledger account, or some descriptive text.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code that explains why the item is returned.;
                           ENG=Specifies a code that explains why the item is returned.];
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the location in which the invoice line was registered.;
                           ENG=Specifies the location in which the invoice line was registered.];
                SourceExpr="Location Code";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the bin from which the items were sold.;
                           ENG=Specifies the code of the bin from which the items were sold.];
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the invoice.;
                           ENG=Specifies the dimension value code associated with the invoice.];
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the invoice.;
                           ENG=Specifies the dimension value code associated with the invoice.];
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure code for the items sold.;
                           ENG=Specifies the unit of measure code for the items sold.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code" }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of units of the item specified on the line.;
                           ENG=Specifies the number of units of the item specified on the line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Quantity }

    { 44  ;2   ;Field     ;
                CaptionML=[ENU=Qty. Not Returned;
                           ENG=Qty. Not Returned];
                ToolTipML=[ENU=Specifies the quantity from the posted document line that has been shipped to the customer and not returned by the customer.;
                           ENG=Specifies the quantity from the posted document line that has been shipped to the customer and not returned by the customer.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=QtyNotReturned }

    { 38  ;2   ;Field     ;
                CaptionML=[ENU=Qty. Returned;
                           ENG=Qty. Returned];
                ToolTipML=[ENU=Specifies the quantity that was returned.;
                           ENG=Specifies the quantity that was returned.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyReturned }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure for the item (bottle or piece, for example).;
                           ENG=Specifies the unit of measure for the item (bottle or piece, for example).];
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit cost of the item on the invoice line.;
                           ENG=Specifies the unit cost of the item on the invoice line.];
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                CaptionML=[ENU=Reverse Unit Cost (LCY);
                           ENG=Reverse Unit Cost (LCY)];
                ToolTipML=[ENU=Specifies the unit cost that will appear on the new document lines.;
                           ENG=Specifies the unit cost that will appear on the new document lines.];
                SourceExpr=RevUnitCostLCY;
                AutoFormatType=2;
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                CaptionML=[ENU=Unit Price;
                           ENG=Unit Price];
                SourceExpr=UnitPrice;
                AutoFormatType=2;
                AutoFormatExpr=SalesInvHeader."Currency Code";
                Visible=FALSE }

    { 76  ;2   ;Field     ;
                CaptionML=[ENU=Line Amount;
                           ENG=Line Amount];
                ToolTipML=[ENU=Specifies the amount on the line.;
                           ENG=Specifies the amount on the line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LineAmount;
                AutoFormatType=1;
                AutoFormatExpr=SalesInvHeader."Currency Code" }

    { 78  ;2   ;Field     ;
                CaptionML=[ENU=Currency Code;
                           ENG=Currency Code];
                SourceExpr=SalesInvHeader."Currency Code";
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                CaptionML=[ENU=Prices Including VAT;
                           ENG=Prices Including VAT];
                SourceExpr=SalesInvHeader."Prices Including VAT";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line discount % that was given on the line.;
                           ENG=Specifies the line discount % that was given on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Line Discount %" }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the discount given on the line.;
                           ENG=Specifies the amount of the discount given on the line.];
                SourceExpr="Line Discount Amount";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the invoice line could have been included in a possible invoice discount calculation.;
                           ENG=Specifies whether the invoice line could have been included in a possible invoice discount calculation.];
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice discount amount calculated on the line.;
                           ENG=Specifies the invoice discount amount calculated on the line.];
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the job number that the sales invoice line is linked to.;
                           ENG=Specifies the job number that the sales invoice line is linked to.];
                SourceExpr="Job No.";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the blanket order that the invoice originates from.;
                           ENG=Specifies the number of the blanket order that the invoice originates from.];
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 72  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the blanket order line that the invoice line originates from.;
                           ENG=Specifies the number of the blanket order line that the invoice line originates from.];
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item ledger entry that the sales invoice line is applied from.;
                           ENG=Specifies the number of the item ledger entry that the sales invoice line is applied from.];
                SourceExpr="Appl.-from Item Entry";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item ledger entry this invoice line was applied to.;
                           ENG=Specifies the number of the item ledger entry this invoice line was applied to.];
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      ToSalesHeader@1010 : Record 36;
      SalesInvHeader@1008 : Record 112;
      SalesInvLine@1003 : Record 113;
      TempSalesInvLine@1002 : TEMPORARY Record 113;
      QtyNotReturned@1004 : Decimal;
      RevUnitCostLCY@1000 : Decimal;
      UnitPrice@1009 : Decimal;
      LineAmount@1005 : Decimal;
      RevQtyFilter@1001 : Boolean;
      FillExactCostReverse@1006 : Boolean;
      Visible@1011 : Boolean;
      ShowRec@1013 : Boolean;
      DocumentNoHideValue@19020538 : Boolean INDATASET;

    LOCAL PROCEDURE IsFirstDocLine@2() : Boolean;
    VAR
      SalesInvHeader2@1003 : Record 112;
      SalesInvLine2@1000 : Record 113;
      QtyNotReturned2@1001 : Decimal;
      RevUnitCostLCY2@1002 : Decimal;
    BEGIN
      TempSalesInvLine.RESET;
      TempSalesInvLine.COPYFILTERS(Rec);
      TempSalesInvLine.SETRANGE("Document No.","Document No.");
      IF NOT TempSalesInvLine.FINDFIRST THEN BEGIN
        SalesInvHeader2 := SalesInvHeader;
        QtyNotReturned2 := QtyNotReturned;
        RevUnitCostLCY2 := RevUnitCostLCY;
        SalesInvLine2.COPYFILTERS(Rec);
        SalesInvLine2.SETRANGE("Document No.","Document No.");
        IF NOT SalesInvLine2.FINDSET THEN
          EXIT(FALSE);
        REPEAT
          ShowRec := IsShowRec(SalesInvLine2);
          IF ShowRec THEN BEGIN
            TempSalesInvLine := SalesInvLine2;
            TempSalesInvLine.INSERT;
          END;
        UNTIL (SalesInvLine2.NEXT = 0) OR ShowRec;
        SalesInvHeader := SalesInvHeader2;
        QtyNotReturned := QtyNotReturned2;
        RevUnitCostLCY := RevUnitCostLCY2;
      END;

      IF "Document No." <> SalesInvHeader."No." THEN
        SalesInvHeader.GET("Document No.");

      UnitPrice := "Unit Price";
      LineAmount := "Line Amount";

      EXIT("Line No." = TempSalesInvLine."Line No.");
    END;

    LOCAL PROCEDURE IsShowRec@3(SalesInvLine2@1000 : Record 113) : Boolean;
    BEGIN
      WITH SalesInvLine2 DO BEGIN
        QtyNotReturned := 0;
        IF "Document No." <> SalesInvHeader."No." THEN
          SalesInvHeader.GET("Document No.");
        IF SalesInvHeader."Prepayment Invoice" THEN
          EXIT(FALSE);
        IF RevQtyFilter THEN BEGIN
          IF SalesInvHeader."Currency Code" <> ToSalesHeader."Currency Code" THEN
            EXIT(FALSE);
          IF Type = Type::" " THEN
            EXIT("Attached to Line No." = 0);
        END;
        IF Type <> Type::Item THEN
          EXIT(TRUE);
        CalcShippedSaleNotReturned(QtyNotReturned,RevUnitCostLCY,FillExactCostReverse);
        IF NOT RevQtyFilter THEN
          EXIT(TRUE);
        EXIT(QtyNotReturned > 0);
      END;
    END;

    LOCAL PROCEDURE CalcQtyReturned@6() : Decimal;
    BEGIN
      IF (Type = Type::Item) AND (Quantity - QtyNotReturned > 0) THEN
        EXIT(Quantity - QtyNotReturned);
      EXIT(0);
    END;

    PROCEDURE Initialize@4(NewToSalesHeader@1002 : Record 36;NewRevQtyFilter@1000 : Boolean;NewFillExactCostReverse@1001 : Boolean;NewVisible@1003 : Boolean);
    BEGIN
      ToSalesHeader := NewToSalesHeader;
      RevQtyFilter := NewRevQtyFilter;
      FillExactCostReverse := NewFillExactCostReverse;
      Visible := NewVisible;

      IF Visible THEN BEGIN
        TempSalesInvLine.RESET;
        TempSalesInvLine.DELETEALL;
      END;
    END;

    PROCEDURE GetSelectedLine@1(VAR FromSalesInvLine@1000 : Record 113);
    BEGIN
      FromSalesInvLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(FromSalesInvLine);
    END;

    LOCAL PROCEDURE ShowDocument@7();
    BEGIN
      IF NOT SalesInvHeader.GET("Document No.") THEN
        EXIT;
      PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvHeader);
    END;

    LOCAL PROCEDURE ItemTrackingLines@12();
    VAR
      FromSalesInvLine@1000 : Record 113;
    BEGIN
      GetSelectedLine(FromSalesInvLine);
      FromSalesInvLine.ShowItemTrackingLines;
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    BEGIN
      IF NOT IsFirstDocLine THEN
        DocumentNoHideValue := TRUE;
    END;

    BEGIN
    END.
  }
}

