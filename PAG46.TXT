OBJECT Page 46 Sales Order Subform
{
  OBJECT-PROPERTIES
  {
    Date=30/06/17;
    Time=12:00:00;
    Version List=NAVW110.00.00.17501;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ENG=Lines];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table37;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Order));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             SalesSetup.GET;
             Currency.InitRoundingPrecision;
           END;

    OnOpenPage=VAR
                 Location@1000 : Record 14;
               BEGIN
                 IF Location.READPERMISSION THEN
                   LocationCodeVisible := NOT Location.ISEMPTY;
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  IF ApplicationAreaSetup.IsFoundationEnabled THEN
                    Type := Type::Item
                  ELSE
                    InitType;
                  CLEAR(ShortcutDimCode);
                END;

    OnInsertRecord=BEGIN
                     IF ApplicationAreaSetup.IsFoundationEnabled THEN
                       Type := Type::Item;
                   END;

    OnDeleteRecord=VAR
                     ReserveSalesLine@1000 : Codeunit 99000832;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReserveSalesLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReserveSalesLine.DeleteLine(Rec);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           CalculateTotals;
                           SetLocationCodeMandatory;
                           UpdateEditableOnRow;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENG=&Line];
                      Image=Line }
      { 1906587504;2 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 1905623604;3 ;Action    ;
                      Name=GetPrice;
                      AccessByPermission=TableData 7002=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Price;
                                 ENG=Get Price];
                      Image=Price;
                      OnAction=BEGIN
                                 ShowPrices;
                               END;
                                }
      { 1901770504;3 ;Action    ;
                      AccessByPermission=TableData 7004=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Li&ne Discount;
                                 ENG=Get Li&ne Discount];
                      Image=LineDiscount;
                      OnAction=BEGIN
                                 ShowLineDisc
                               END;
                                }
      { 1901741804;3 ;Action    ;
                      Name=ExplodeBOM_Functions;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=E&xplode BOM;
                                 ENG=E&xplode BOM];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1903099004;3 ;Action    ;
                      Name=Insert Ext. Texts;
                      AccessByPermission=TableData 279=R;
                      CaptionML=[ENU=Insert &Ext. Texts;
                                 ENG=Insert &Ext. Texts];
                      ToolTipML=[ENU=Insert the extended item description that is set up for the item on the sales document line.;
                                 ENG=Insert the extended item description that is set up for the item on the sales document line.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1905427504;3 ;Action    ;
                      Name=Reserve;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Reserve;
                                 ENG=&Reserve];
                      Image=Reserve;
                      OnAction=BEGIN
                                 FIND;
                                 ShowReservation;
                               END;
                                }
      { 1903502504;3 ;Action    ;
                      Name=OrderTracking;
                      CaptionML=[ENU=Order &Tracking;
                                 ENG=Order &Tracking];
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 ShowTracking;
                               END;
                                }
      { 1905968604;3 ;Action    ;
                      AccessByPermission=TableData 5718=R;
                      CaptionML=[ENU=Nonstoc&k Items;
                                 ENG=Nonstoc&k Items];
                      ApplicationArea=#Basic,#Suite;
                      Image=NonStockItem;
                      OnAction=BEGIN
                                 ShowNonstockItems;
                               END;
                                }
      { 1900580804;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 ENG=Item Availability by];
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      Name=<Action3>;
                      CaptionML=[ENU=Event;
                                 ENG=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1904522204;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 ENG=Period];
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1902056104;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 ENG=Variant];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1900639404;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 ENG=Location];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 15      ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 ENG=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 33      ;2   ;ActionGroup;
                      CaptionML=[ENU=Related Information;
                                 ENG=Related Information] }
      { 1900186704;3 ;Action    ;
                      AccessByPermission=TableData 27=R;
                      CaptionML=[ENU=Reservation Entries;
                                 ENG=Reservation Entries];
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 ShowReservationEntries(TRUE);
                               END;
                                }
      { 1905987604;3 ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 ENG=Item &Tracking Lines];
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1901633104;3 ;Action    ;
                      Name=SelectItemSubstitution;
                      AccessByPermission=TableData 5715=R;
                      CaptionML=[ENU=Select Item Substitution;
                                 ENG=Select Item Substitution];
                      ToolTipML=[ENU=Select another item that has been set up to be sold instead of the original item if it is unavailable.;
                                 ENG=Select another item that has been set up to be sold instead of the original item if it is unavailable.];
                      ApplicationArea=#Suite;
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 CurrPage.SAVERECORD;
                                 ShowItemSub;
                                 CurrPage.UPDATE(TRUE);
                                 AutoReserve;
                               END;
                                }
      { 1902085804;3 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1903418704;3 ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;3 ;Action    ;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=[ENU=Item Charge &Assignment;
                                 ENG=Item Charge &Assignment];
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ItemChargeAssgnt;
                               END;
                                }
      { 1905403704;3 ;Action    ;
                      Name=OrderPromising;
                      AccessByPermission=TableData 99000880=R;
                      CaptionML=[ENU=Order &Promising;
                                 ENG=Order &Promising];
                      Image=OrderPromising;
                      OnAction=BEGIN
                                 OrderPromisingLine;
                               END;
                                }
      { 7       ;3   ;ActionGroup;
                      CaptionML=[ENU=Assemble to Order;
                                 ENG=Assemble to Order];
                      ActionContainerType=NewDocumentItems;
                      Image=AssemblyBOM }
      { 9       ;4   ;Action    ;
                      Name=AssembleToOrderLines;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[ENU=Assemble-to-Order Lines;
                                 ENG=Assemble-to-Order Lines];
                      OnAction=BEGIN
                                 ShowAsmToOrderLines;
                               END;
                                }
      { 11      ;4   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Roll Up &Price;
                                 ENG=Roll Up &Price];
                      OnAction=BEGIN
                                 RollupAsmPrice;
                               END;
                                }
      { 13      ;4   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Roll Up &Cost;
                                 ENG=Roll Up &Cost];
                      OnAction=BEGIN
                                 RollUpAsmCost;
                               END;
                                }
      { 31      ;3   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=[ENU=Deferral Schedule;
                                 ENG=Deferral Schedule];
                      ToolTipML=[ENU=View or edit the deferral schedule that governs how revenue made with this sales document is deferred to different accounting periods when the document is posted.;
                                 ENG=View or edit the deferral schedule that governs how revenue made with this sales document is deferred to different accounting periods when the document is posted.];
                      ApplicationArea=#Suite;
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 SalesHeader.GET("Document Type","Document No.");
                                 ShowDeferrals(SalesHeader."Posting Date",SalesHeader."Currency Code");
                               END;
                                }
      { 1905926804;1 ;ActionGroup;
                      CaptionML=[ENU=O&rder;
                                 ENG=O&rder];
                      Image=Order }
      { 1903645604;2 ;ActionGroup;
                      CaptionML=[ENU=Dr&op Shipment;
                                 ENG=Dr&op Shipment];
                      Image=Delivery }
      { 1907981104;3 ;Action    ;
                      AccessByPermission=TableData 120=R;
                      CaptionML=[ENU=Purchase &Order;
                                 ENG=Purchase &Order];
                      ToolTipML=[ENU=View the purchase order that is linked to the sales order, for drop shipment.;
                                 ENG=View the purchase order that is linked to the sales order, for drop shipment.];
                      ApplicationArea=#Suite;
                      Image=Document;
                      OnAction=BEGIN
                                 OpenPurchOrderForm;
                               END;
                                }
      { 1903587004;2 ;ActionGroup;
                      CaptionML=[ENU=Speci&al Order;
                                 ENG=Speci&al Order];
                      Image=SpecialOrder }
      { 1903192904;3 ;Action    ;
                      Name=OpenSpecialPurchaseOrder;
                      AccessByPermission=TableData 120=R;
                      CaptionML=[ENU=Purchase &Order;
                                 ENG=Purchase &Order];
                      Image=Document;
                      OnAction=BEGIN
                                 OpenSpecialPurchOrderForm;
                               END;
                                }
      { 666     ;2   ;Action    ;
                      Name=BlanketOrder;
                      CaptionML=[ENU=Blanket Order;
                                 ENG=Blanket Order];
                      ToolTipML=[ENU=View the blanket sales order.;
                                 ENG=View the blanket sales order.];
                      Image=BlanketOrder;
                      OnAction=VAR
                                 SalesHeader@1000 : Record 36;
                                 BlanketSalesOrder@1001 : Page 507;
                               BEGIN
                                 TESTFIELD("Blanket Order No.");
                                 SalesHeader.SETRANGE("No.","Blanket Order No.");
                                 IF NOT SalesHeader.ISEMPTY THEN BEGIN
                                   BlanketSalesOrder.SETTABLEVIEW(SalesHeader);
                                   BlanketSalesOrder.EDITABLE := FALSE;
                                   BlanketSalesOrder.RUN;
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of entity that will be posted for this sales line, such as Item, Resource, or G/L Account.;
                           ENG=Specifies the type of entity that will be posted for this sales line, such as Item, Resource, or G/L Account.];
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                             SetLocationCodeMandatory;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of a general ledger account, item, resource, additional cost, or fixed asset, depending on the contents of the Type field.;
                           ENG=Specifies the number of a general ledger account, item, resource, additional cost, or fixed asset, depending on the contents of the Type field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No.";
                OnValidate=BEGIN
                             NoOnAfterValidate;
                             UpdateEditableOnRow;
                             ShowShortcutDimCode(ShortcutDimCode);

                             QuantityOnAfterValidate;
                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 68  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.;
                           ENG=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           NoOnAfterValidate;
                         END;
                          }

    { 1136;2   ;Field     ;
                ToolTipML=[ENU=Specifies the IC partner code of the partner to whom you want to distribute the revenue of the sales line.;
                           ENG=Specifies the IC partner code of the partner to whom you want to distribute the revenue of the sales line.];
                SourceExpr="IC Partner Code";
                Visible=FALSE }

    { 130 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.;
                           ENG=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.];
                SourceExpr="IC Partner Ref. Type";
                Visible=FALSE }

    { 132 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.;
                           ENG=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.];
                SourceExpr="IC Partner Reference";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a variant code for the item.;
                           ENG=Specifies a variant code for the item.];
                SourceExpr="Variant Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             VariantCodeOnAfterValidate;
                           END;
                            }

    { 104 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that a substitute is available for the item on the sales line.;
                           ENG=Specifies that a substitute is available for the item on the sales line.];
                ApplicationArea=#Suite;
                SourceExpr="Substitution Available";
                Visible=FALSE }

    { 74  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the purchasing code for the item.;
                           ENG=Specifies the purchasing code for the item.];
                SourceExpr="Purchasing Code";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that this item is a nonstock item.;
                           ENG=Specifies that this item is a nonstock item.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 78  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the VAT product posting group of the item, resource, or general ledger account on this line.;
                           ENG=Specifies the code for the VAT product posting group of the item, resource, or general ledger account on this line.];
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the entry, which is based on the contents of the Type and No. fields.;
                           ENG=Specifies a description of the entry, which is based on the contents of the Type and No. fields.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                OnValidate=BEGIN
                             UpdateEditableOnRow;

                             IF "No." = xRec."No." THEN
                               EXIT;

                             NoOnAfterValidate;
                             ShowShortcutDimCode(ShortcutDimCode);
                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TRUE;
                QuickEntry=FALSE }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if your vendor will ship the items on the line directly to your customer.;
                           ENG=Specifies if your vendor will ship the items on the line directly to your customer.];
                ApplicationArea=#Suite;
                SourceExpr="Drop Shipment";
                Visible=FALSE }

    { 106 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the item on the sales line is a special-order item.;
                           ENG=Specifies that the item on the sales line is a special-order item.];
                SourceExpr="Special Order";
                Visible=FALSE }

    { 110 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code that explains why the item is returned.;
                           ENG=Specifies a code that explains why the item is returned.];
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the inventory location from which the items sold should be picked and where the inventory decrease is registered.;
                           ENG=Specifies the inventory location from which the items sold should be picked and where the inventory decrease is registered.];
                SourceExpr="Location Code";
                Visible=LocationCodeVisible;
                OnValidate=BEGIN
                             LocationCodeOnAfterValidate;
                           END;

                ShowMandatory=LocationCodeMandatory;
                QuickEntry=FALSE }

    { 114 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bin from where items on the sales order line are taken from when they are shipped.;
                           ENG=Specifies the bin from where items on the sales order line are taken from when they are shipped.];
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether a reservation can be made for items on this line.;
                           ENG=Specifies whether a reservation can be made for items on this line.];
                SourceExpr=Reserve;
                Visible=FALSE;
                OnValidate=BEGIN
                             ReserveOnAfterValidate;
                           END;
                            }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units are being sold.;
                           ENG=Specifies how many units are being sold.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=Quantity;
                Enabled=RowIsNotText;
                Editable=RowIsNotText;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory="No." <> '' }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the sales line quantity that you want to supply by assembly.;
                           ENG=Specifies how many units of the sales line quantity that you want to supply by assembly.];
                BlankZero=Yes;
                SourceExpr="Qty. to Assemble to Order";
                Visible=FALSE;
                OnValidate=BEGIN
                             QtyToAsmToOrderOnAfterValidate;
                           END;

                OnDrillDown=BEGIN
                              ShowAsmToOrderLines;
                            END;
                             }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item on the line have been reserved.;
                           ENG=Specifies how many units of the item on the line have been reserved.];
                BlankZero=Yes;
                SourceExpr="Reserved Quantity";
                QuickEntry=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure that is used to determine the value in the Unit Price field on the sales line.;
                           ENG=Specifies the unit of measure that is used to determine the value in the Unit Price field on the sales line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code";
                Enabled=UnitofMeasureCodeIsChangeable;
                Editable=UnitofMeasureCodeIsChangeable;
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                             RedistributeTotalsOnAfterValidate;
                           END;

                QuickEntry=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure for the item or resource on the sales line.;
                           ENG=Specifies the unit of measure for the item or resource on the sales line.];
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit cost of the item on the line.;
                           ENG=Specifies the unit cost of the item on the line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 112 ;2   ;Field     ;
                Name=SalesPriceExist;
                CaptionML=[ENU=Sales Price Exists;
                           ENG=Sales Price Exists];
                ToolTipML=[ENU=Specifies that there is a specific price for this customer.;
                           ENG=Specifies that there is a specific price for this customer.];
                SourceExpr=PriceExists;
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price for one unit on the sales line.;
                           ENG=Specifies the price for one unit on the sales line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Unit Price";
                Enabled=RowIsNotText;
                Editable=RowIsNotText;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory="No." <> '' }

    { 76  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net amount (before subtracting the invoice discount amount) that must be paid for the items on the line.;
                           ENG=Specifies the net amount (before subtracting the invoice discount amount) that must be paid for the items on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                Enabled=RowIsNotText;
                Editable=RowIsNotText;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 116 ;2   ;Field     ;
                Name=SalesLineDiscExists;
                CaptionML=[ENU=Sales Line Disc. Exists;
                           ENG=Sales Line Disc. Exists];
                ToolTipML=[ENU=Specifies that there is a specific discount for this customer.;
                           ENG=Specifies that there is a specific discount for this customer.];
                SourceExpr=LineDiscExists;
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line discount percentage that is valid for the item quantity on the line.;
                           ENG=Specifies the line discount percentage that is valid for the item quantity on the line.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                Enabled=RowIsNotText;
                Editable=RowIsNotText;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the discount that will be given on the invoice line.;
                           ENG=Specifies the amount of the discount that will be given on the invoice line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 136 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the prepayment percentage if a prepayment should apply to the sales line.;
                           ENG=Specifies the prepayment percentage if a prepayment should apply to the sales line.];
                SourceExpr="Prepayment %";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 138 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the prepayment amount of the line in the currency of the sales document if a prepayment percentage is specified for the sales line.;
                           ENG=Specifies the prepayment amount of the line in the currency of the sales document if a prepayment percentage is specified for the sales line.];
                SourceExpr="Prepmt. Line Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 140 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the prepayment amount that has already been invoiced to the customer for this sales line.;
                           ENG=Specifies the prepayment amount that has already been invoiced to the customer for this sales line.];
                SourceExpr="Prepmt. Amt. Inv.";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the invoice line is included when the invoice discount is calculated.;
                           ENG=Specifies whether the invoice line is included when the invoice discount is calculated.];
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 90  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice discount amount for the line.;
                           ENG=Specifies the invoice discount amount for the line.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item are to be shipped when the sales order is posted.;
                           ENG=Specifies how many units of the item are to be shipped when the sales order is posted.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Qty. to Ship";
                OnValidate=BEGIN
                             IF "Qty. to Asm. to Order (Base)" <> 0 THEN BEGIN
                               CurrPage.SAVERECORD;
                               CurrPage.UPDATE(FALSE);
                             END;
                           END;
                            }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of units of the ordered item that have been shipped.;
                           ENG=Specifies the number of units of the ordered item that have been shipped.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Quantity Shipped";
                QuickEntry=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how much of the line should be invoiced.;
                           ENG=Specifies how much of the line should be invoiced.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Qty. to Invoice" }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item on the line have already been invoiced.;
                           ENG=Specifies how many units of the item on the line have already been invoiced.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Quantity Invoiced" }

    { 142 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the prepayment amount that will be deducted from the next ordinary invoice for this line.;
                           ENG=Specifies the prepayment amount that will be deducted from the next ordinary invoice for this line.];
                SourceExpr="Prepmt Amt to Deduct";
                Visible=FALSE }

    { 144 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the prepayment amount that has already been deducted from ordinary invoices posted for this sales order line.;
                           ENG=Specifies the prepayment amount that has already been deducted from ordinary invoices posted for this sales order line.];
                SourceExpr="Prepmt Amt Deducted";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that you can assign item charges to this line.;
                           ENG=Specifies that you can assign item charges to this line.];
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 5800;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of the item charge that will be assigned to a specified item when you post this sales line. You fill this field through the Qty. to Assign field in the Item Charge Assignment (Sales) window that you open with the Item Charge Assignment action on the Lines FastTab.;
                           ENG=Specifies the quantity of the item charge that will be assigned to a specified item when you post this sales line. You fill this field through the Qty. to Assign field in the Item Charge Assignment (Sales) window that you open with the Item Charge Assignment action on the Lines FastTab.];
                BlankZero=Yes;
                SourceExpr="Qty. to Assign";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;

                QuickEntry=FALSE }

    { 102 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of the item charge that was assigned to a specified item when you posted this sales line.;
                           ENG=Specifies the quantity of the item charge that was assigned to a specified item when you posted this sales line.];
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              CurrPage.UPDATE(FALSE);
                            END;

                QuickEntry=FALSE }

    { 82  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that the customer has asked for the order to be delivered.;
                           ENG=Specifies the date that the customer has asked for the order to be delivered.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Requested Delivery Date";
                Visible=FALSE;
                OnValidate=BEGIN
                             UpdateForm(TRUE);
                           END;
                            }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that you have promised to deliver the order, as a result of the Order Promising function.;
                           ENG=Specifies the date that you have promised to deliver the order, as a result of the Order Promising function.];
                SourceExpr="Promised Delivery Date";
                Visible=FALSE;
                OnValidate=BEGIN
                             UpdateForm(TRUE);
                           END;
                            }

    { 86  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the planned date that the shipment will be delivered at the customer's address.;
                           ENG=Specifies the planned date that the shipment will be delivered at the customer's address.];
                SourceExpr="Planned Delivery Date";
                OnValidate=BEGIN
                             UpdateForm(TRUE);
                           END;

                QuickEntry=FALSE }

    { 88  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that the shipment should ship from the warehouse.;
                           ENG=Specifies the date that the shipment should ship from the warehouse.];
                SourceExpr="Planned Shipment Date";
                OnValidate=BEGIN
                             UpdateForm(TRUE);
                           END;
                            }

    { 100 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that the items on the line are in inventory and available to be picked.;
                           ENG=Specifies the date that the items on the line are in inventory and available to be picked.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date";
                OnValidate=BEGIN
                             ShipmentDateOnAfterValidate;
                           END;

                QuickEntry=FALSE }

    { 92  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that represents the shipping agent.;
                           ENG=Specifies the code that represents the shipping agent.];
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Code";
                Visible=FALSE }

    { 94  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that represents a shipping agent service.;
                           ENG=Specifies the code that represents a shipping agent service.];
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Service Code";
                Visible=FALSE }

    { 96  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how long it takes from when the sales order line is shipped from the warehouse to when the order is delivered.;
                           ENG=Specifies how long it takes from when the sales order line is shipped from the warehouse to when the order is delivered.];
                SourceExpr="Shipping Time";
                Visible=FALSE }

    { 134 ;2   ;Field     ;
                ToolTipML=[ENU=Belongs to the Job application area.;
                           ENG=Belongs to the Job application area.];
                SourceExpr="Work Type Code";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units on the sales order line remain to be handled in warehouse documents.;
                           ENG=Specifies how many units on the sales order line remain to be handled in warehouse documents.];
                SourceExpr="Whse. Outstanding Qty.";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units on the sales order line remain to be handled in warehouse documents.;
                           ENG=Specifies how many units on the sales order line remain to be handled in warehouse documents.];
                SourceExpr="Whse. Outstanding Qty. (Base)";
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many assemble-to-order units on the sales order line need to be assembled and handled in warehouse documents.;
                           ENG=Specifies how many assemble-to-order units on the sales order line need to be assembled and handled in warehouse documents.];
                SourceExpr="ATO Whse. Outstanding Qty.";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many assemble-to-order units on the sales order line remain to be assembled and handled in warehouse documents.;
                           ENG=Specifies how many assemble-to-order units on the sales order line remain to be assembled and handled in warehouse documents.];
                SourceExpr="ATO Whse. Outstd. Qty. (Base)";
                Visible=FALSE }

    { 98  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the outbound warehouse handling time.;
                           ENG=Specifies the outbound warehouse handling time.];
                SourceExpr="Outbound Whse. Handling Time";
                Visible=FALSE }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document number of the blanket order from which this sales line originates.;
                           ENG=Specifies the document number of the blanket order from which this sales line originates.];
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 66  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line number of the blanket order line from which this sales line originates.;
                           ENG=Specifies the line number of the blanket order line from which this sales line originates.];
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that will be used as the FA posting date on FA ledger entries.;
                           ENG=Specifies the date that will be used as the FA posting date on FA ledger entries.];
                SourceExpr="FA Posting Date";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=You can use this field if you have selected Fixed Asset in the Type field for this line.;
                           ENG=You can use this field if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="Depr. until FA Posting Date";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the depreciation book to which the line will be posted if you have selected Fixed Asset in the Type field for this line.;
                           ENG=Specifies the code for the depreciation book to which the line will be posted if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="Depreciation Book Code";
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=You can use this field if you have selected Fixed Asset in the Type field for this line.;
                           ENG=You can use this field if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="Use Duplication List";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=You can use this field if you have selected Fixed Asset in the Type field for this line.;
                           ENG=You can use this field if you have selected Fixed Asset in the Type field for this line.];
                SourceExpr="Duplicate in Depreciation Book";
                Visible=FALSE }

    { 108 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item ledger entry that the sales credit memo line is applied from.;
                           ENG=Specifies the number of the item ledger entry that the sales credit memo line is applied from.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Appl.-from Item Entry";
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item ledger entry number the line should be applied to.;
                           ENG=Specifies the item ledger entry number the line should be applied to.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 29  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the deferral template that governs how revenue earned with this sales document is deferred to the different accounting periods when the good or service was delivered.;
                           ENG=Specifies the deferral template that governs how revenue earned with this sales document is deferred to the different accounting periods when the good or service was delivered.];
                ApplicationArea=#Suite;
                SourceExpr="Deferral Code";
                TableRelation="Deferral Template"."Deferral Code";
                Visible=FALSE;
                Enabled=(Type <> Type::"Fixed Asset") AND (Type <> Type::" ") }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1.;
                           ENG=Specifies the code for Shortcut Dimension 1.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2.;
                           ENG=Specifies the code for Shortcut Dimension 2.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 146 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document number.;
                           ENG=Specifies the document number.];
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE }

    { 148 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line number.;
                           ENG=Specifies the line number.];
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 51  ;1   ;Group     ;
                GroupType=Group }

    { 45  ;2   ;Group     ;
                GroupType=Group }

    { 35  ;3   ;Field     ;
                CaptionML=[ENU=Subtotal Excl. VAT;
                           ENG=Subtotal Excl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document.;
                           ENG=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalLineAmountWithVATAndCurrencyCaption(Currency.Code,TotalSalesHeader."Prices Including VAT");
                Editable=FALSE }

    { 43  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=[ENU=Invoice Discount Amount;
                           ENG=Invoice Discount Amount];
                ToolTipML=[ENU=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.;
                           ENG=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=InvoiceDiscountAmount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetInvoiceDiscAmountWithVATAndCurrencyCaption(FIELDCAPTION("Inv. Discount Amount"),Currency.Code);
                Editable=InvDiscAmountEditable;
                OnValidate=BEGIN
                             ValidateInvoiceDiscountAmount;
                           END;
                            }

    { 41  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=[ENU=Invoice Discount %;
                           ENG=Invoice Discount %];
                ToolTipML=[ENU=Specifies a discount percentage that is granted if criteria that you have set up for the customer are met.;
                           ENG=Specifies a discount percentage that is granted if criteria that you have set up for the customer are met.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:2;
                SourceExpr=InvoiceDiscountPct;
                Editable=InvDiscAmountEditable;
                OnValidate=BEGIN
                             InvoiceDiscountAmount := ROUND(TotalSalesLine."Line Amount" * InvoiceDiscountPct / 100,Currency."Amount Rounding Precision");
                             ValidateInvoiceDiscountAmount;
                           END;
                            }

    { 28  ;2   ;Group     ;
                GroupType=Group }

    { 27  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=[ENU=Total Amount Excl. VAT;
                           ENG=Total Amount Excl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                           ENG=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(Currency.Code);
                Editable=FALSE }

    { 25  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=[ENU=Total VAT;
                           ENG=Total VAT];
                ToolTipML=[ENU=Specifies the sum of VAT amounts on all lines in the document.;
                           ENG=Specifies the sum of VAT amounts on all lines in the document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalVATCaption(Currency.Code);
                Editable=FALSE }

    { 23  ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=[ENU=Total Amount Incl. VAT;
                           ENG=Total Amount Incl. VAT];
                ToolTipML=[ENU=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                           ENG=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(Currency.Code);
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Currency@1021 : Record 4;
      TotalSalesHeader@1016 : Record 36;
      TotalSalesLine@1009 : Record 37;
      SalesHeader@1000 : Record 36;
      ApplicationAreaSetup@1010 : Record 9178;
      SalesSetup@1015 : Record 311;
      SalesPriceCalcMgt@1006 : Codeunit 7000;
      TransferExtendedText@1002 : Codeunit 378;
      ItemAvailFormsMgt@1001 : Codeunit 353;
      SalesCalcDiscountByType@1008 : Codeunit 56;
      DocumentTotals@1007 : Codeunit 57;
      VATAmount@1005 : Decimal;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      Text001@1004 : TextConst 'ENU=You cannot use the Explode BOM function because a prepayment of the sales order has been invoiced.;ENG=You cannot use the Explode BOM function because a prepayment of the sales order has been invoiced.';
      LocationCodeMandatory@1017 : Boolean;
      InvDiscAmountEditable@1014 : Boolean;
      RowIsNotText@1019 : Boolean;
      UnitofMeasureCodeIsChangeable@1011 : Boolean;
      LocationCodeVisible@1020 : Boolean;
      InvoiceDiscountAmount@1022 : Decimal;
      InvoiceDiscountPct@1023 : Decimal;
      UpdateInvDiscountQst@1024 : TextConst 'ENU=One or more lines have been invoiced. The discount distributed to invoiced lines will not be taken into account.\\Do you want to update the invoice discount?;ENG=One or more lines have been invoiced. The discount distributed to invoiced lines will not be taken into account.\\Do you want to update the invoice discount?';

    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE ValidateInvoiceDiscountAmount@30();
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      IF SalesHeader.InvoicedLineExists THEN
        IF NOT CONFIRM(UpdateInvDiscountQst,FALSE) THEN
          EXIT;

      SalesCalcDiscountByType.ApplyInvDiscBasedOnAmt(InvoiceDiscountAmount,SalesHeader);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE CalcInvDisc@6();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    PROCEDURE ExplodeBOM@3();
    BEGIN
      IF "Prepmt. Amt. Inv." <> 0 THEN
        ERROR(Text001);
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    PROCEDURE OpenPurchOrderForm@4();
    VAR
      PurchHeader@1000 : Record 38;
      PurchOrder@1001 : Page 50;
    BEGIN
      TESTFIELD("Purchase Order No.");
      PurchHeader.SETRANGE("No.","Purchase Order No.");
      PurchOrder.SETTABLEVIEW(PurchHeader);
      PurchOrder.EDITABLE := FALSE;
      PurchOrder.RUN;
    END;

    PROCEDURE OpenSpecialPurchOrderForm@14();
    VAR
      PurchHeader@1001 : Record 38;
      PurchRcptHeader@1002 : Record 120;
      PurchOrder@1000 : Page 50;
    BEGIN
      TESTFIELD("Special Order Purchase No.");
      PurchHeader.SETRANGE("No.","Special Order Purchase No.");
      IF NOT PurchHeader.ISEMPTY THEN BEGIN
        PurchOrder.SETTABLEVIEW(PurchHeader);
        PurchOrder.EDITABLE := FALSE;
        PurchOrder.RUN;
      END ELSE BEGIN
        PurchRcptHeader.SETRANGE("Order No.","Special Order Purchase No.");
        IF PurchRcptHeader.COUNT = 1 THEN
          PAGE.RUN(PAGE::"Posted Purchase Receipt",PurchRcptHeader)
        ELSE
          PAGE.RUN(PAGE::"Posted Purchase Receipts",PurchRcptHeader);
      END;
    END;

    PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        COMMIT;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    PROCEDURE ShowNonstockItems@11();
    BEGIN
      ShowNonstock;
    END;

    PROCEDURE ShowTracking@13();
    VAR
      TrackingForm@1000 : Page 99000822;
    BEGIN
      TrackingForm.SetSalesLine(Rec);
      TrackingForm.RUNMODAL;
    END;

    PROCEDURE ItemChargeAssgnt@5800();
    BEGIN
      ShowItemChargeAssgnt;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    PROCEDURE OrderPromisingLine@17();
    VAR
      OrderPromisingLine@1000 : TEMPORARY Record 99000880;
      OrderPromisingLines@1001 : Page 99000959;
    BEGIN
      OrderPromisingLine.SETRANGE("Source Type","Document Type");
      OrderPromisingLine.SETRANGE("Source ID","Document No.");
      OrderPromisingLine.SETRANGE("Source Line No.","Line No.");

      OrderPromisingLines.SetSourceType(OrderPromisingLine."Source Type"::Sales);
      OrderPromisingLines.SETTABLEVIEW(OrderPromisingLine);
      OrderPromisingLines.RUNMODAL;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      IF ApplicationAreaSetup.IsFoundationEnabled THEN
        TESTFIELD(Type,Type::Item);

      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;

      SaveAndAutoAsmToOrder;

      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        IF ("Outstanding Qty. (Base)" <> 0) AND ("No." <> xRec."No.") THEN BEGIN
          AutoReserve;
          CurrPage.UPDATE(FALSE);
        END;
      END;
    END;

    LOCAL PROCEDURE VariantCodeOnAfterValidate@21();
    BEGIN
      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      SaveAndAutoAsmToOrder;

      IF (Reserve = Reserve::Always) AND
         ("Outstanding Qty. (Base)" <> 0) AND
         ("Location Code" <> xRec."Location Code")
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE ReserveOnAfterValidate@19004502();
    BEGIN
      IF (Reserve = Reserve::Always) AND ("Outstanding Qty. (Base)" <> 0) THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    VAR
      UpdateIsDone@1001 : Boolean;
    BEGIN
      IF Type = Type::Item THEN
        CASE Reserve OF
          Reserve::Always:
            BEGIN
              CurrPage.SAVERECORD;
              AutoReserve;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
          Reserve::Optional:
            IF (Quantity < xRec.Quantity) AND (xRec.Quantity > 0) THEN BEGIN
              CurrPage.SAVERECORD;
              CurrPage.UPDATE(FALSE);
              UpdateIsDone := TRUE;
            END;
        END;

      IF (Type = Type::Item) AND
         (Quantity <> xRec.Quantity) AND
         NOT UpdateIsDone
      THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE QtyToAsmToOrderOnAfterValidate@19();
    BEGIN
      CurrPage.SAVERECORD;
      IF Reserve = Reserve::Always THEN
        AutoReserve;
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE ShipmentDateOnAfterValidate@19068710();
    BEGIN
      IF (Reserve = Reserve::Always) AND
         ("Outstanding Qty. (Base)" <> 0) AND
         ("Shipment Date" <> xRec."Shipment Date")
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END ELSE
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE SaveAndAutoAsmToOrder@20();
    BEGIN
      IF (Type = Type::Item) AND IsAsmToOrderRequired THEN BEGIN
        CurrPage.SAVERECORD;
        AutoAsmToOrder;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE SetLocationCodeMandatory@22();
    VAR
      InventorySetup@1000 : Record 313;
    BEGIN
      InventorySetup.GET;
      LocationCodeMandatory := InventorySetup."Location Mandatory" AND (Type = Type::Item);
    END;

    LOCAL PROCEDURE GetTotalSalesHeader@9();
    BEGIN
      IF NOT TotalSalesHeader.GET("Document Type","Document No.") THEN
        CLEAR(TotalSalesHeader);
      IF Currency.Code <> TotalSalesHeader."Currency Code" THEN
        IF NOT Currency.GET(TotalSalesHeader."Currency Code") THEN BEGIN
          CLEAR(Currency);
          Currency.InitRoundingPrecision;
        END
    END;

    LOCAL PROCEDURE CalculateTotals@8();
    BEGIN
      GetTotalSalesHeader;
      TotalSalesHeader.CALCFIELDS("Recalculate Invoice Disc.");

      IF SalesSetup."Calc. Inv. Discount" AND ("Document No." <> '') AND (TotalSalesHeader."Customer Posting Group" <> '') AND
         TotalSalesHeader."Recalculate Invoice Disc."
      THEN
        IF FIND THEN
          CalcInvDisc;

      DocumentTotals.CalculateSalesTotals(TotalSalesLine,VATAmount,Rec);
      InvoiceDiscountAmount := TotalSalesLine."Inv. Discount Amount";
      InvoiceDiscountPct := SalesCalcDiscountByType.GetCustInvoiceDiscountPct(Rec);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@2();
    BEGIN
      CurrPage.SAVERECORD;

      SalesHeader.GET("Document Type","Document No.");
      DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ValidateSaveShortcutDimCode@7(FieldNumber@1001 : Integer;VAR ShortcutDimCode@1000 : Code[20]);
    BEGIN
      ValidateShortcutDimCode(FieldNumber,ShortcutDimCode);
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE UpdateEditableOnRow@18();
    VAR
      SalesLine@1000 : Record 37;
    BEGIN
      RowIsNotText := NOT (("No." = '') AND (Description <> ''));
      IF RowIsNotText THEN
        UnitofMeasureCodeIsChangeable := CanEditUnitOfMeasureCode
      ELSE
        UnitofMeasureCodeIsChangeable := FALSE;

      IF TotalSalesHeader."No." <> '' THEN BEGIN
        SalesLine.SETRANGE("Document No.",TotalSalesHeader."No.");
        SalesLine.SETRANGE("Document Type",TotalSalesHeader."Document Type");
        IF NOT SalesLine.ISEMPTY THEN
          InvDiscAmountEditable :=
            SalesCalcDiscountByType.InvoiceDiscIsAllowed(TotalSalesHeader."Invoice Disc. Code") AND CurrPage.EDITABLE;
      END;
    END;

    BEGIN
    END.
  }
}

