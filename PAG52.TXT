OBJECT Page 52 Purchase Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=04/08/17;
    Time=12:00:00;
    Version List=NAVW110.00.00.17972,NAVGB10.00.00.17972;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Credit Memo;
               ENG=Purchase Credit Memo];
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=FILTER(Credit Memo));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Request Approval;
                                ENG=New,Process,Report,Approve,Request Approval];
    OnInit=VAR
             PurchasesPayablesSetup@1000 : Record 312;
           BEGIN
             JobQueueUsed := PurchasesPayablesSetup.JobQueueActive;
             SetExtDocNoMandatoryCondition;
           END;

    OnOpenPage=VAR
                 OfficeMgt@1000 : Codeunit 1630;
               BEGIN
                 SetDocNoVisible;
                 IsOfficeAddin := OfficeMgt.IsAvailable;

                 IF UserMgt.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetPurchasesFilter);
                   FILTERGROUP(0);
                 END;
               END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetPurchasesFilter;

                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetBuyFromVendorFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           SetControlAppearance;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Credit Memo;
                                 ENG=&Credit Memo];
                      Image=CreditMemo }
      { 49      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ENG=Statistics];
                      ToolTipML=[ENU=View statistical information, such as the value of posted entries, for the record.;
                                 ENG=View statistical information, such as the value of posted entries, for the record.];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Purchase Statistics",Rec);
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 50      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Vendor;
                                 ENG=Vendor];
                      ToolTipML=[ENU=View or edit detailed information about the vendor on the purchase document.;
                                 ENG=View or edit detailed information about the vendor on the purchase document.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Image=Vendor }
      { 105     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENG=Dimensions];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENG=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      ApplicationArea=#Suite;
                      Enabled="No." <> '';
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 43      ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 ENG=Approvals];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 ENG=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.];
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Purchase Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 51      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENG=Co&mments];
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 23      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 ENG=Approval] }
      { 25      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 ENG=Approve];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 ENG=Approve the requested changes.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 ENG=Reject];
                      ToolTipML=[ENU=Reject the approval request.;
                                 ENG=Reject the approval request.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 ENG=Delegate];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 ENG=Delegate the approval to a substitute approver.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 ENG=Comments];
                      ToolTipML=[ENU=View or add comments.;
                                 ENG=View or add comments.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 ENG=Release];
                      Image=ReleaseDoc }
      { 112     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 ENG=Re&lease];
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 113     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 ENG=Re&open];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                                 ENG=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 52      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 127     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get St&d. Vend. Purchase Codes;
                                 ENG=Get St&d. Vend. Purchase Codes];
                      Image=VendorCode;
                      OnAction=VAR
                                 StdVendPurchCode@1000 : Record 175;
                               BEGIN
                                 StdVendPurchCode.InsertPurchLines(Rec);
                               END;
                                }
      { 53      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 24=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 ENG=Calculate &Invoice Discount];
                      ToolTipML=[ENU=Calculate the invoice discount for the entire document.;
                                 ENG=Calculate the invoice discount for the entire document.];
                      ApplicationArea=#Basic,#Suite;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 128     ;2   ;Separator  }
      { 93      ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Entries;
                                 ENG=Apply Entries];
                      ToolTipML=[ENU=Apply open entries for the relevant account type.;
                                 ENG=Apply open entries for the relevant account type.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Purchase Header Apply",Rec);
                               END;
                                }
      { 129     ;2   ;Separator  }
      { 143     ;2   ;Action    ;
                      Name=GetPostedDocumentLinesToReverse;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Posted Doc&ument Lines to Reverse;
                                 ENG=Get Posted Doc&ument Lines to Reverse];
                      ToolTipML=[ENU=Copy one or more posted purchase document lines in order to reverse the original order.;
                                 ENG=Copy one or more posted purchase document lines in order to reverse the original order.];
                      Image=ReverseLines;
                      OnAction=BEGIN
                                 GetPstdDocLinesToRevere;
                               END;
                                }
      { 54      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENG=Copy Document];
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 131     ;2   ;Separator  }
      { 114     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 ENG=Move Negative Lines];
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegPurchLines);
                                 MoveNegPurchLines.SetPurchHeader(Rec);
                                 MoveNegPurchLines.RUNMODAL;
                                 MoveNegPurchLines.ShowDocument;
                               END;
                                }
      { 132     ;2   ;Separator  }
      { 37      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 ENG=Incoming Document];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 35      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 ENG=View Incoming Document];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document.;
                                 ENG=View any incoming document records and file attachments that exist for the entry or document.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 33      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 ENG=Select Incoming Document];
                      ToolTipML=[ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                                 ENG=Select an incoming document record and file attachment that you want to link to the entry or document.];
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 31      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 ENG=Create Incoming Document from File];
                      ToolTipML=[ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                                 ENG=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=CreateIncomingDocumentEnabled;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPurchaseDocument(Rec);
                               END;
                                }
      { 41      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 ENG=Remove Incoming Document];
                      ToolTipML=[ENU=Remove an external document that has been recorded, manually or automatically, and attached as a file to a document or ledger entry.;
                                 ENG=Remove an external document that has been recorded, manually or automatically, and attached as a file to a document or ledger entry.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 ENG=Request Approval];
                      Image=Approval }
      { 146     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 ENG=Send A&pproval Request];
                      ToolTipML=[ENU=Send an approval request.;
                                 ENG=Send an approval request.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckPurchaseApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 147     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ENG=Cancel Approval Re&quest];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 ENG=Cancel the approval request.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=Yes;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                               END;
                                }
      { 144     ;2   ;Separator  }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENG=P&osting];
                      Image=Post }
      { 59      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 ENG=P&ost];
                      ToolTipML=[ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                                 ENG=Finalise the document or journal by posting the amounts and quantities to the related accounts in your company books.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 27      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 ENG=Preview Posting];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 ENG=Review the different types of entries that will be created when you post the document or journal.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit 91;
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 58      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ENG=Test Report];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 ENG=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 60      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 ENG=Post and &Print];
                      ToolTipML=[ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                                 ENG=Finalise and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsOfficeAddin;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post + Print");
                               END;
                                }
      { 3       ;2   ;Action    ;
                      CaptionML=[ENU=Remove From Job Queue;
                                 ENG=Remove From Job Queue];
                      ToolTipML=[ENU=Remove the scheduled processing of this record from the job queue.;
                                 ENG=Remove the scheduled processing of this record from the job queue.];
                      ApplicationArea=#All;
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the purchase document. The field is only visible if you have not set up a number series for the type of purchase document, or if the Manual Nos. field is selected for the number series.;
                           ENG=Specifies the number of the purchase document. The field is only visible if you have not set up a number series for the type of purchase document, or if the Manual Nos. field is selected for the number series.];
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Vendor;
                           ENG=Vendor];
                ToolTipML=[ENU=Specifies the name of the vendor who sends the items.;
                           ENG=Specifies the name of the vendor who sends the items.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Vendor Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1001 : Record 9178;
                           BEGIN
                             IF "No." = '' THEN
                               InitRecord;

                             IF GETFILTER("Buy-from Vendor No.") = xRec."Buy-from Vendor No." THEN
                               IF "Buy-from Vendor No." <> xRec."Buy-from Vendor No." THEN
                                 SETRANGE("Buy-from Vendor No.");

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ShowMandatory=TRUE;
                QuickEntry=FALSE }

    { 4   ;2   ;Group     ;
                CaptionML=[ENU=Buy-from;
                           ENG=Buy-from];
                GroupType=Group }

    { 63  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address of the vendor who ships the items.;
                           ENG=Specifies the address of the vendor who ships the items.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Address";
                Importance=Additional }

    { 65  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ENG=Specifies additional address information.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Address 2";
                Importance=Additional }

    { 1040000;3;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from City";
                Importance=Additional }

    { 1040002;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from County";
                Importance=Additional }

    { 68  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Postcode];
                ToolTipML=[ENU=Specifies the postal code.;
                           ENG=Specifies the postcode.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Post Code";
                Importance=Additional }

    { 123 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ENG=Contact No.];
                ToolTipML=[ENU=Specifies the number of your contact at the vendor.;
                           ENG=Specifies the number of your contact at the vendor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Contact No.";
                Importance=Additional;
                QuickEntry=FALSE }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact about shipment of the item from this vendor.;
                           ENG=Specifies the name of the person to contact about shipment of the item from this vendor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Contact" }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the purchase document will be recorded.;
                           ENG=Specifies the date when the posting of the purchase document will be recorded.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Importance=Additional;
                QuickEntry=FALSE }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the vendor created the purchase document.;
                           ENG=Specifies the date on which the vendor created the purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional;
                QuickEntry=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.;
                           ENG=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 96  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to receive the items on the purchase document.;
                           ENG=Specifies the date you expect to receive the items on the purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Expected Receipt Date" }

    { 115 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the identification number of a compensation agreement.;
                           ENG=Specifies the identification number of a compensation agreement.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Authorization No." }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the incoming document that this purchase document is created for.;
                           ENG=Specifies the number of the incoming document that this purchase document is created for.];
                SourceExpr="Incoming Document Entry No.";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number that the vendor uses for the credit memo you are creating in this purchase credit memo header.;
                           ENG=Specifies the number that the vendor uses for the credit memo you are creating in this purchase credit memo header.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Cr. Memo No.";
                ShowMandatory=VendorCreditMemoNoMandatory }

    { 72  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the order address code linked to the relevant vendor's order address.;
                           ENG=Specifies the order address code linked to the relevant vendor's order address.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order Address Code" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which purchaser is assigned to the vendor.;
                           ENG=Specifies which purchaser is assigned to the vendor.];
                ApplicationArea=#Suite;
                SourceExpr="Purchaser Code";
                Importance=Additional;
                OnValidate=BEGIN
                             PurchaserCodeOnAfterValidate;
                           END;
                            }

    { 1102601000;2;Field  ;
                ToolTipML=[ENU=Specifies the campaign number the document is linked to.;
                           ENG=Specifies the campaign number the document is linked to.];
                SourceExpr="Campaign No.";
                Importance=Additional }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the responsibility center that is associated with the user, company, or vendor.;
                           ENG=Specifies the code of the responsibility centre that is associated with the user, company, or vendor.];
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           ENG=Specifies the ID of the user who is responsible for the document.];
                SourceExpr="Assigned User ID";
                Importance=Additional;
                QuickEntry=FALSE }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of a job queue entry that handles the posting of purchase orders.;
                           ENG=Specifies the status of a job queue entry that handles the posting of purchase orders.];
                ApplicationArea=#All;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueueUsed }

    { 101 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the record is open, is waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           ENG=Specifies whether the record is open, is waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                Importance=Promoted;
                QuickEntry=FALSE }

    { 46  ;1   ;Part      ;
                Name=PurchLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page98;
                Enabled="Buy-from Vendor No." <> '';
                Editable="Buy-from Vendor No." <> '';
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           ENG=Invoice Details];
                GroupType=Group }

    { 91  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code for amounts on the purchase lines.;
                           ENG=Specifies the currency code for amounts on the purchase lines.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 110 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           ENG=Specifies whether the unit price on the line should be displayed including or excluding VAT.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 141 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.;
                           ENG=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document.;
                           ENG=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number for the transaction type, for the purpose of reporting to Intrastat.;
                           ENG=Specifies the number for the transaction nature code, for the purpose of reporting to Intrastat.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Type" }

    { 76  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1.;
                           ENG=Specifies the code for Shortcut Dimension 1.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 78  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2.;
                           ENG=Specifies the code for Shortcut Dimension 2.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 94  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment discount percent that will be given if you pay for the purchase on or before the date in the Pmt. Discount Date field.;
                           ENG=Specifies the payment discount percent that will be given if you pay for the purchase on or before the date in the Pmt. Discount Date field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Discount %" }

    { 139 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date on which you can pay the invoice and still receive a payment discount.;
                           ENG=Specifies the last date on which you can pay the invoice and still receive a payment discount.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the location where you want the items to be placed when they are received.;
                           ENG=Specifies a code for the location where you want the items to be placed when they are received.];
                SourceExpr="Location Code";
                Importance=Additional }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping and Payment;
                           ENG=Shipping and Payment];
                GroupType=Group }

    { 48  ;2   ;Group     ;
                CaptionML=[ENU=Ship-to;
                           ENG=Ship-to];
                GroupType=Group }

    { 32  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENG=Name];
                ToolTipML=[ENU=Specifies the name of the company at the address to which you want the items in the purchase order to be shipped.;
                           ENG=Specifies the name of the company at the address to which you want the items in the purchase order to be shipped.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Name" }

    { 34  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address that you want the items in the purchase order to be shipped to.;
                           ENG=Specifies the address that you want the items in the purchase order to be shipped to.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address" }

    { 36  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ENG=Specifies additional address information.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address 2" }

    { 1040008;3;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to City" }

    { 1040010;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to County" }

    { 83  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Postcode];
                ToolTipML=[ENU=Specifies the postal code.;
                           ENG=Specifies the postcode.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Post Code" }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of a contact person for the address where the items in the purchase order should be shipped.;
                           ENG=Specifies the name of a contact person for the address where the items in the purchase order should be shipped.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Contact" }

    { 55  ;2   ;Group     ;
                CaptionML=[ENU=Pay-to;
                           ENG=Pay-to];
                GroupType=Group }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENG=Name];
                ToolTipML=[ENU=Specifies the vendor who is sending the invoice.;
                           ENG=Specifies the vendor who is sending the invoice.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF GETFILTER("Pay-to Vendor No.") = xRec."Pay-to Vendor No." THEN
                               IF "Pay-to Vendor No." <> xRec."Pay-to Vendor No." THEN
                                 SETRANGE("Pay-to Vendor No.");

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;
                            }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENG=Address];
                ToolTipML=[ENU=Specifies the address of the vendor sending the invoice.;
                           ENG=Specifies the address of the vendor sending the invoice.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Address";
                Importance=Additional }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENG=Address 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ENG=Specifies additional address information.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Address 2";
                Importance=Additional }

    { 1040004;3;Field     ;
                CaptionML=[ENU=City;
                           ENG=City];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to City";
                Importance=Additional }

    { 1040006;3;Field     ;
                CaptionML=[ENU=County;
                           ENG=County];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to County";
                Importance=Additional }

    { 73  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENG=Postcode];
                ToolTipML=[ENU=Specifies the postal code.;
                           ENG=Specifies the postcode.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Post Code";
                Importance=Additional }

    { 125 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ENG=Contact No.];
                ToolTipML=[ENU=Specifies the number of the contact who sends the invoice.;
                           ENG=Specifies the number of the contact who sends the invoice.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Contact No.";
                Importance=Additional }

    { 30  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENG=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact about an invoice from this vendor.;
                           ENG=Specifies the name of the person to contact about an invoice from this vendor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Contact" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           ENG=Foreign Trade] }

    { 89  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the purchase header's transaction specification here.;
                           ENG=Specifies a code for the purchase header's transaction specification here.];
                SourceExpr="Transaction Specification" }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the transport method to be used with this purchase header.;
                           ENG=Specifies the code for the transport method to be used with this purchase header.];
                SourceExpr="Transport Method" }

    { 85  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the port of entry where the items pass into your country/region.;
                           ENG=Specifies the code of the port of entry where the items pass into your country/region.];
                SourceExpr="Entry Point" }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the area of the vendor's address.;
                           ENG=Specifies the code for the area of the vendor's address.];
                SourceExpr=Area }

    { 1904409301;1;Group  ;
                CaptionML=[ENU=Application;
                           ENG=Application] }

    { 135 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                           ENG=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. Type" }

    { 137 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                           ENG=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. No." }

    { 133 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                           ENG=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to ID" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 15  ;1   ;Part      ;
                ApplicationArea=#All;
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1901138007;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9093;
                Visible=FALSE;
                PartType=Page }

    { 1904651607;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9094;
                PartType=Page }

    { 1903435607;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9095;
                PartType=Page }

    { 1906949207;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9096;
                Visible=FALSE;
                PartType=Page }

    { 29  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                Visible=NOT IsOfficeAddin;
                PartType=Page;
                ShowFilter=No }

    { 5   ;1   ;Part      ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9100;
                ProviderID=46;
                Visible=FALSE;
                PartType=Page }

    { 45  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopyPurchDoc@1002 : Report 492;
      MoveNegPurchLines@1005 : Report 6698;
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1004 : Codeunit 5700;
      PurchCalcDiscByType@1007 : Codeunit 66;
      LinesInstructionMgt@1017 : Codeunit 1320;
      ChangeExchangeRate@1001 : Page 511;
      JobQueueVisible@1000 : Boolean INDATASET;
      JobQueueUsed@1019 : Boolean INDATASET;
      HasIncomingDocument@1010 : Boolean;
      DocNoVisible@1006 : Boolean;
      VendorCreditMemoNoMandatory@1008 : Boolean;
      OpenApprovalEntriesExist@1009 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1012 : Boolean;
      ShowWorkflowStatus@1011 : Boolean;
      IsOfficeAddin@1015 : Boolean;
      CanCancelApprovalForRecord@1014 : Boolean;
      DocumentIsPosted@1018 : Boolean;
      OpenPostedPurchCrMemoQst@1013 : TextConst 'ENU=The credit memo has been posted and archived.\\Do you want to open the posted credit memo from the Posted Purchase Credit Memos window?;ENG=The credit memo has been posted and archived.\\Do you want to open the posted credit memo from the Posted Purchase Credit Memos window?';
      CreateIncomingDocumentEnabled@1016 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PurchaseHeader@1001 : Record 38;
      PurchCrMemoHdr@1002 : Record 124;
      ApplicationAreaSetup@1003 : Record 9178;
      InstructionMgt@1004 : Codeunit 1330;
    BEGIN
      IF ApplicationAreaSetup.IsFoundationEnabled THEN
        LinesInstructionMgt.PurchaseCheckAllLinesHaveQuantityAssigned(Rec);

      SendToPosting(PostingCodeunitID);

      DocumentIsPosted := NOT PurchaseHeader.GET("Document Type","No.");

      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);

      IF PostingCodeunitID <> CODEUNIT::"Purch.-Post (Yes/No)" THEN
        EXIT;

      IF IsOfficeAddin THEN BEGIN
        PurchCrMemoHdr.SETRANGE("Pre-Assigned No.","No.");
        IF PurchCrMemoHdr.FINDFIRST THEN
          PAGE.RUN(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHdr);
      END ELSE
        IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
          ShowPostedConfirmationMessage;
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.PurchLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE PurchaserCodeOnAfterValidate@19046120();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1001 : Codeunit 1400;
      DocType@1000 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.PurchaseDocumentNoIsVisible(DocType::"Credit Memo","No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      PurchasesPayablesSetup@1000 : Record 312;
    BEGIN
      PurchasesPayablesSetup.GET;
      VendorCreditMemoNoMandatory := PurchasesPayablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      CreateIncomingDocumentEnabled := (NOT HasIncomingDocument) AND ("No." <> '');
      SetExtDocNoMandatoryCondition;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);

      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@13();
    VAR
      PurchCrMemoHdr@1000 : Record 124;
      InstructionMgt@1001 : Codeunit 1330;
    BEGIN
      PurchCrMemoHdr.SETRANGE("Pre-Assigned No.","No.");
      IF PurchCrMemoHdr.FINDFIRST THEN
        IF InstructionMgt.ShowConfirm(OpenPostedPurchCrMemoQst,InstructionMgt.ShowPostedConfirmationMessageCode) THEN
          PAGE.RUN(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHdr);
    END;

    BEGIN
    END.
  }
}

