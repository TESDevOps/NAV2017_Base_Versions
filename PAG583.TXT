OBJECT Page 583 XBRL Taxonomy Lines
{
  OBJECT-PROPERTIES
  {
    Date=25/10/16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=XBRL Taxonomy Lines;
               ENG=XBRL Taxonomy Lines];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table395;
    SourceTableView=SORTING(XBRL Taxonomy Name,Presentation Order);
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnOpenPage=VAR
                 XBRLTaxonomy@1000 : Record 394;
                 XBRLTaxonomyLabel@1001 : Record 401;
               BEGIN
                 IF GETFILTER("XBRL Taxonomy Name") <> '' THEN
                   CurrentTaxonomy := GETRANGEMIN("XBRL Taxonomy Name");
                 IF NOT XBRLTaxonomy.GET(CurrentTaxonomy) THEN
                   IF NOT XBRLTaxonomy.FINDFIRST THEN
                     XBRLTaxonomy.INIT;
                 CurrentTaxonomy := XBRLTaxonomy.Name;

                 XBRLTaxonomyLabel.SETRANGE("XBRL Taxonomy Name",CurrentTaxonomy);
                 IF CurrentLang <> '' THEN
                   XBRLTaxonomyLabel.SETRANGE("XML Language Identifier",CurrentLang);
                 IF XBRLTaxonomyLabel.FINDFIRST THEN
                   CurrentLang := XBRLTaxonomyLabel."XML Language Identifier"
                 ELSE
                   IF CurrentLang <> '' THEN BEGIN
                     XBRLTaxonomyLabel.SETRANGE("XML Language Identifier");
                     IF XBRLTaxonomyLabel.FINDFIRST THEN
                       CurrentLang := XBRLTaxonomyLabel."XML Language Identifier"
                   END;

                 ExpandAll;
               END;

    OnFindRecord=BEGIN
                   IF NOT FiltersApplied THEN
                     SetFilters;
                   FiltersApplied := TRUE;
                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=VAR
                       XBRLLine@1102601000 : Record 395;
                     BEGIN
                       IF IsExpanded(Rec) THEN
                         ActualExpansionStatus := 1
                       ELSE
                         IF HasChildren(Rec) THEN
                           ActualExpansionStatus := 0
                         ELSE
                           ActualExpansionStatus := 2;

                       XBRLLine.GET("XBRL Taxonomy Name","Line No.");
                       IF ("Source Type" <> XBRLLine."Source Type") OR
                          ("Constant Amount" <> XBRLLine."Constant Amount") OR
                          (Description <> XBRLLine.Description)
                       THEN BEGIN
                         XBRLLine.CALCFIELDS(Label,Information,Rollup,"G/L Map Lines",Notes,Reference);
                         Rec := XBRLLine;
                         MODIFY;
                       END;

                       IF Label = '' THEN
                         Label := Name;
                       LabelOnFormat;
                     END;

    OnModifyRecord=VAR
                     XBRLLine@1102601000 : Record 395;
                   BEGIN
                     XBRLLine.GET("XBRL Taxonomy Name","Line No.");
                     XBRLLine := Rec;
                     XBRLLine.MODIFY;
                     Rec := XBRLLine;
                     MODIFY;
                     EXIT(FALSE);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 21      ;1   ;ActionGroup;
                      CaptionML=[ENU=&XBRL Line;
                                 ENG=&XBRL Line];
                      Image=Line }
      { 22      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 ENG=Card];
                      ToolTipML=[ENU=View or change detailed information for the XBRL taxonomy line.;
                                 ENG=View or change detailed information for the XBRL taxonomy line.];
                      RunObject=Page 584;
                      RunPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                                  Line No.=FIELD(Line No.);
                      Image=EditLines }
      { 23      ;2   ;Separator ;
                      CaptionML=[ENU="";
                                 ENG=""] }
      { 24      ;2   ;Action    ;
                      Name=Information;
                      CaptionML=[ENU=Information;
                                 ENG=Information];
                      ToolTipML=[ENU=View information in the Comment table about this line. The information was imported from the info attribute when the taxonomy was imported.;
                                 ENG=View information in the Comment table about this line. The information was imported from the info attribute when the taxonomy was imported.];
                      RunObject=Page 585;
                      RunPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                                  XBRL Taxonomy Line No.=FIELD(Line No.),
                                  Comment Type=CONST(Information),
                                  Label Language Filter=FIELD(Label Language Filter);
                      Image=Info }
      { 30      ;2   ;Action    ;
                      Name=Reference;
                      CaptionML=[ENU=Re&ference;
                                 ENG=Re&ference];
                      ToolTipML=[ENU=View if the Comment table contains a reference to official material that you can read about this line. The reference was imported from the reference linkbase when the taxonomy was imported.;
                                 ENG=View if the Comment table contains a reference to official material that you can read about this line. The reference was imported from the reference linkbase when the taxonomy was imported.];
                      RunObject=Page 585;
                      RunPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                                  XBRL Taxonomy Line No.=FIELD(Line No.),
                                  Comment Type=CONST(Reference),
                                  Label Language Filter=FIELD(Label Language Filter);
                      Image=EntriesList }
      { 25      ;2   ;Action    ;
                      CaptionML=[ENU=Rollups;
                                 ENG=Rollups];
                      ToolTipML=[ENU=View how XBRL information is rolled up from other lines.;
                                 ENG=View how XBRL information is rolled up from other lines.];
                      RunObject=Page 587;
                      RunPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                                  XBRL Taxonomy Line No.=FIELD(Line No.),
                                  Label Language Filter=FIELD(Label Language Filter);
                      Image=Totals }
      { 26      ;2   ;Action    ;
                      Name=Notes;
                      CaptionML=[ENU=Notes;
                                 ENG=Notes];
                      ToolTipML=[ENU=View any notes entered in the Comment table about this line element.;
                                 ENG=View any notes entered in the Comment table about this line element.];
                      RunObject=Page 585;
                      RunPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                                  XBRL Taxonomy Line No.=FIELD(Line No.),
                                  Comment Type=CONST(Notes),
                                  Label Language Filter=FIELD(Label Language Filter);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Notes;
                      PromotedCategory=Process }
      { 27      ;2   ;Action    ;
                      CaptionML=[ENU=G/L Map Lines;
                                 ENG=G/L Map Lines];
                      ToolTipML=[ENU=View which general ledger accounts will be used to calculate the amount that will be exported for this line.;
                                 ENG=View which general ledger accounts will be used to calculate the amount that will be exported for this line.];
                      RunObject=Page 586;
                      RunPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                                  XBRL Taxonomy Line No.=FIELD(Line No.),
                                  Label Language Filter=FIELD(Label Language Filter);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CompareCOA;
                      PromotedCategory=Process }
      { 34      ;2   ;Action    ;
                      CaptionML=[ENU=C&onstants;
                                 ENG=C&onstants];
                      ToolTipML=[ENU=View or create date-specific constant amounts to be exported.;
                                 ENG=View or create date-specific constant amounts to be exported.];
                      RunObject=Page 598;
                      RunPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                                  XBRL Taxonomy Line No.=FIELD(Line No.),
                                  Label Language Filter=FIELD(Label Language Filter);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AmountByPeriod;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 43      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENG=F&unctions];
                      Image=Action }
      { 45      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy XBRL Setup;
                                 ENG=Copy XBRL Setup];
                      ToolTipML=[ENU=Copy the setup of one taxonomy to another. The setup includes description, constant amount, notes, and G/L map lines.;
                                 ENG=Copy the setup of one taxonomy to another. The setup includes description, constant amount, notes, and G/L map lines.];
                      Image=Copy;
                      OnAction=VAR
                                 XBRLCopySetup@1000 : Report 507;
                               BEGIN
                                 XBRLCopySetup.SetCopyTo(CurrentTaxonomy);
                                 XBRLCopySetup.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 38  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENG=General] }

    { 39  ;2   ;Field     ;
                CaptionML=[ENU=Taxonomy Name;
                           ENG=Taxonomy Name];
                ToolTipML=[ENU=Specifies the name of the XBRL taxonomy.;
                           ENG=Specifies the name of the XBRL taxonomy.];
                SourceExpr=CurrentTaxonomy;
                TableRelation="XBRL Taxonomy";
                Editable=false;
                OnValidate=BEGIN
                             CurrentTaxonomyOnAfterValidate;
                           END;

                OnLookup=VAR
                           XBRLTaxonomy@1000 : Record 394;
                         BEGIN
                           XBRLTaxonomy.Name := CurrentTaxonomy;
                           IF PAGE.RUNMODAL(0,XBRLTaxonomy) <> ACTION::LookupOK THEN
                             EXIT(FALSE);

                           Text := XBRLTaxonomy.Name;
                           EXIT(TRUE);
                         END;
                          }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Show Only Presentation;
                           ENG=Show Only Presentation];
                ToolTipML=[ENU=Specifies if the XBRL content is shown using the Presentation layout only, which provides information about the structure and relationships of elements on the taxonomy lines.;
                           ENG=Specifies if the XBRL content is shown using the Presentation layout only, which provides information about the structure and relationships of elements on the taxonomy lines.];
                SourceExpr=OnlyShowPresentation;
                OnValidate=BEGIN
                             SetFilters;
                           END;
                            }

    { 41  ;2   ;Field     ;
                CaptionML=[ENU=Label Language;
                           ENG=Label Language];
                ToolTipML=[ENU=Specifies the language you want the labels to be shown in. The label is a user-readable element of the taxonomy.;
                           ENG=Specifies the language you want the labels to be shown in. The label is a user-readable element of the taxonomy.];
                SourceExpr=CurrentLang;
                OnValidate=VAR
                             XBRLTaxonomyLabel@1000 : Record 401;
                           BEGIN
                             XBRLTaxonomyLabel.SETRANGE("XBRL Taxonomy Name",CurrentTaxonomy);
                             XBRLTaxonomyLabel.SETRANGE("XML Language Identifier",CurrentLang);
                             IF CurrentLang <> '' THEN
                               IF XBRLTaxonomyLabel.ISEMPTY THEN
                                 ERROR(Text001,CurrentLang);
                             SetFilters;
                           END;

                OnLookup=VAR
                           XBRLTaxonomyLabel@1001 : Record 401;
                           XBRLTaxonomyLabels@1000 : Page 590;
                         BEGIN
                           XBRLTaxonomyLabel.SETRANGE("XBRL Taxonomy Name",CurrentTaxonomy);
                           IF NOT XBRLTaxonomyLabel.FINDFIRST THEN
                             ERROR(Text002,"XBRL Taxonomy Name");
                           XBRLTaxonomyLabel.SETRANGE(
                             "XBRL Taxonomy Line No.",XBRLTaxonomyLabel."XBRL Taxonomy Line No.");
                           XBRLTaxonomyLabels.SETTABLEVIEW(XBRLTaxonomyLabel);
                           XBRLTaxonomyLabels.LOOKUPMODE := TRUE;
                           IF XBRLTaxonomyLabels.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             XBRLTaxonomyLabels.GETRECORD(XBRLTaxonomyLabel);
                             Text := XBRLTaxonomyLabel."XML Language Identifier";
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                IndentationColumnName=Level;
                IndentationControls=Label;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the label that was assigned to this line. The label is a user-readable element of the taxonomy.;
                           ENG=Specifies the label that was assigned to this line. The label is a user-readable element of the taxonomy.];
                SourceExpr=Label;
                Style=Strong;
                StyleExpr=LabelEmphasize }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the source of the information for this line that you want to export. You can only export one type of information for each line. The Tuple option means that the line represents a number of related lines. The related lines are listed below this line and are indented.;
                           ENG=Specifies the source of the information for this line that you want to export. You can only export one type of information for each line. The Tuple option means that the line represents a number of related lines. The related lines are listed below this line and are indented.];
                SourceExpr="Source Type" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount that will be exported if the source type is Constant.;
                           ENG=Specifies the amount that will be exported if the source type is Constant.];
                SourceExpr="Constant Amount" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if there is information in the Comment table about this line. The information was imported from the info attribute when the taxonomy was imported.;
                           ENG=Specifies if there is information in the Comment table about this line. The information was imported from the info attribute when the taxonomy was imported.];
                SourceExpr=Information }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the Comment table contains a reference to official material that you can read about this line. The reference was imported from the reference linkbase when the taxonomy was imported.;
                           ENG=Specifies if the Comment table contains a reference to official material that you can read about this line. The reference was imported from the reference linkbase when the taxonomy was imported.];
                SourceExpr=Reference }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if there are notes entered in the Comment table about this line element.;
                           ENG=Specifies if there are notes entered in the Comment table about this line element.];
                SourceExpr=Notes }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which general ledger accounts will be used to calculate the amount that will be exported for this line.;
                           ENG=Specifies which general ledger accounts will be used to calculate the amount that will be exported for this line.];
                SourceExpr="G/L Map Lines" }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if there are records in the Rollup Line table about this line. This data was imported when the taxonomy was imported.;
                           ENG=Specifies if there are records in the Rollup Line table about this line. This data was imported when the taxonomy was imported.];
                SourceExpr=Rollup;
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the text that will be exported if the source type is Description. You can create a description formula using codes. Examples: %1: End of Financial Period - Day of Month (1 - 31) %2: End of Financial Period - Day of Month (01 - 31). See more codes the help topic for the Description field.;
                           ENG=Specifies the text that will be exported if the source type is Description. You can create a description formula using codes. Examples: %1: End of Financial Period - Day of Month (1 - 31) %2: End of Financial Period - Day of Month (01 - 31). See more codes the help topic for the Description field.];
                SourceExpr=Description }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name that the program assigned to this line. This field is populated during the import of the taxonomy.;
                           ENG=Specifies the name that the program assigned to this line. This field is populated during the import of the taxonomy.];
                SourceExpr=Name;
                Visible=FALSE }

    { 5   ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 9   ;1   ;Part      ;
                CaptionML=[ENU=Reference/Information;
                           ENG=Reference/Information];
                SubPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                            XBRL Taxonomy Line No.=FIELD(Line No.),
                            Comment Type=FILTER(Information|Reference);
                PagePartID=Page597;
                PartType=Page }

    { 7   ;1   ;Part      ;
                CaptionML=[ENU=Notes;
                           ENG=Notes];
                SubPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                            XBRL Taxonomy Line No.=FIELD(Line No.),
                            Comment Type=CONST(Notes),
                            Label Language Filter=FIELD(Label Language Filter);
                PagePartID=Page597;
                PartType=Page }

    { 11  ;1   ;Part      ;
                CaptionML=[ENU=G/L Map;
                           ENG=G/L Map];
                SubPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                            XBRL Taxonomy Line No.=FIELD(Line No.),
                            Label Language Filter=FIELD(Label Language Filter);
                PagePartID=Page596;
                PartType=Page }

    { 13  ;1   ;Part      ;
                CaptionML=[ENU=Constants;
                           ENG=Constants];
                SubPageLink=XBRL Taxonomy Name=FIELD(XBRL Taxonomy Name),
                            XBRL Taxonomy Line No.=FIELD(Line No.),
                            Label Language Filter=FIELD(Label Language Filter);
                PagePartID=Page581;
                PartType=Page }

  }
  CODE
  {
    VAR
      CurrentTaxonomy@1004 : Code[20];
      CurrentLang@1001 : Text[10];
      ActualExpansionStatus@1000 : Integer;
      Text001@1002 : TextConst 'ENU=Labels are not defined for language %1.;ENG=Labels are not defined for language %1.';
      Text002@1006 : TextConst 'ENU=There are no labels defined for %1.;ENG=There are no labels defined for %1.';
      OnlyShowPresentation@1003 : Boolean;
      LabelEmphasize@19077489 : Boolean INDATASET;
      FiltersApplied@1005 : Boolean;

    PROCEDURE SetCurrentSchema@2(NewCurrentTaxonomy@1000 : Code[20]);
    BEGIN
      CurrentTaxonomy := NewCurrentTaxonomy;
    END;

    LOCAL PROCEDURE InitTempTable@4();
    VAR
      XBRLLine@1000 : Record 395;
    BEGIN
      ResetFilter;
      DELETEALL;
      XBRLLine.SETRANGE("XBRL Taxonomy Name",CurrentTaxonomy);
      XBRLLine.SETRANGE(Level,0);
      IF XBRLLine.FIND('-') THEN
        REPEAT
          Rec := XBRLLine;
          INSERT;
        UNTIL XBRLLine.NEXT = 0;
    END;

    LOCAL PROCEDURE ExpandAll@12();
    VAR
      XBRLLine@1000 : Record 395;
    BEGIN
      ResetFilter;
      DELETEALL;
      XBRLLine.SETRANGE("XBRL Taxonomy Name",CurrentTaxonomy);
      IF XBRLLine.FIND('-') THEN
        REPEAT
          Rec := XBRLLine;
          INSERT;
        UNTIL XBRLLine.NEXT = 0;
    END;

    LOCAL PROCEDURE HasChildren@19(ActualXBRLLine@1000 : Record 395) : Boolean;
    VAR
      XBRLLine2@1001 : Record 395;
    BEGIN
      XBRLLine2 := ActualXBRLLine;
      XBRLLine2.SETCURRENTKEY("XBRL Taxonomy Name","Presentation Order");
      XBRLLine2.SETRANGE("XBRL Taxonomy Name",ActualXBRLLine."XBRL Taxonomy Name");
      IF XBRLLine2.NEXT = 0 THEN
        EXIT(FALSE);

      EXIT(XBRLLine2.Level > ActualXBRLLine.Level);
    END;

    LOCAL PROCEDURE IsExpanded@20(ActualXBRLLine@1000 : Record 395) : Boolean;
    VAR
      xXBRLLine@1001 : Record 395;
      Found@1002 : Boolean;
    BEGIN
      xXBRLLine.COPY(Rec);
      ResetFilter;
      Rec := ActualXBRLLine;
      Found := (NEXT <> 0);
      IF Found THEN
        Found := (Level > ActualXBRLLine.Level);
      COPY(xXBRLLine);
      EXIT(Found);
    END;

    LOCAL PROCEDURE SetFilters@11();
    BEGIN
      SETRANGE("Label Language Filter",CurrentLang);
      IF OnlyShowPresentation THEN
        SETFILTER("Presentation Linkbase Line No.",'>0')
      ELSE
        SETRANGE("Presentation Linkbase Line No.");
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ResetFilter@3();
    BEGIN
      RESET;
      SETCURRENTKEY("XBRL Taxonomy Name","Presentation Order");
      FILTERGROUP(2);
      SETRANGE("XBRL Taxonomy Name",CurrentTaxonomy);
      FILTERGROUP(0);
      SetFilters;
    END;

    LOCAL PROCEDURE CurrentTaxonomyOnAfterValidate@19000234();
    BEGIN
      FILTERGROUP(2);
      SETRANGE("XBRL Taxonomy Name",CurrentTaxonomy);
      FILTERGROUP(0);
      SETRANGE("XBRL Taxonomy Name");
      InitTempTable;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE LabelOnFormat@19054229();
    BEGIN
      LabelEmphasize := (Level = 0) OR (ActualExpansionStatus < 2);
    END;

    BEGIN
    END.
  }
}

